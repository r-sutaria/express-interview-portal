{"version":3,"sources":["Images/pikachu.jpg","Components/RoundCard.js","Components/interview-form.js","Components/NavbarComponent.js","Components/ExperienceCard.js","Components/ExperienceComponent.js","Constants/StyleMap.js","Components/AnswerProfleCard.js","Components/AnswerBox.js","Components/AnswerCard.js","Components/BlogsList.js","Components/LoginForm.js","Components/SignUpForm.js","Components/SidebarComponent.js","Components/CodeEditor.js","Components/PlacementReport.js","Components/ExperiencePage.js","Components/QueryCard.js","Components/QueryPageComponent.js","Components/NotificationCard.js","Components/NotificationComponent.js","Components/SearchPage.js","Components/SavedPage.js","Components/PracticeCard.js","Components/PracticeList.js","Components/PracticePage.js","Components/LoginPage.js","Components/ReviewPage.js","Components/UserPage.js","Components/Prepare.js","Components/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","RoundCard","props","id","onClick","onChangeTitle","onChangeDetails","round","FormGroup","className","Row","Col","md","Button","color","event","form","lg","Label","for","Input","type","name","value","title","onChange","xs","rows","details","ExperienceForm","getDate","today","Date","dd","String","padStart","mm","getMonth","yyyy","getFullYear","saveExperience","data","state","fetch","method","headers","body","JSON","stringify","company","branch","jobtype","jobprofile","ctc","stipend","rounds","author","receivedOffer","then","response","console","log","json","status","catch","error","message","addRound","index","length","list","slice","concat","toString","experience","setState","preventDefault","removeCard","modifiedList","filter","item","map","target","renderRound","internship","employment","accepted","bind","this","user","Form","check","e","min","jobProfile","CustomInput","key","onMouseDown","window","location","href","React","Component","NavbarComponent","toggleLogin","loginOpen","signUpOpen","toggleSignUp","onChangeUsernameLogin","username","onChangePasswordLogin","password","isOpen","Navbar","expand","dark","fixed","onSidebarToggleClick","style","marginLeft","size","NavbarBrand","minWidth","to","textDecoration","Nav","navbar","NavItem","InputGroup","placeholder","InputGroupAddon","addonType","ExperienceCard","_id","backgroundColor","saved","onSaveClick","date","substring","likes","ExperienceList","getExperiences","res","experiences","sort","a","b","localeCompare","loading","err","src","alt","position","top","left","width","link","styleMap","fontSize","float","AnswerProfileCard","Media","padding","object","height","heading","description","AnswerBox","updateWindowsDimension","innerWidth","innerHeight","buttons","labels","renderLinkButton","urlInput","showURLInput","onURLChange","styles","urlValue","onKeyDown","onLinkInputKeyDown","confirmLink","promptForLink","active","isLinkActive","removeLink","isActive","decorator","CompositeDecorator","strategy","findLinkEntities","component","Link","url","editorState","EditorState","createEmpty","editorContent","editor","innerHTML","_promptForLink","_confirmLink","_onLinkInputKeyDown","_removeLink","command","newState","RichUtils","handleKeyCommand","getCurrentInlineStyle","has","getCurrentBlockType","label","toggleInlineStyle","focus","addEventListener","getSelection","isCollapsed","contentState","getCurrentContent","startKey","getStartKey","startOffset","getStartOffset","linkKey","getBlockForKey","getEntityAt","getEntity","getData","contentStateWithEntity","createEntity","entityKey","getLastCreatedEntityKey","newEditorState","set","currentContent","toggleLink","which","selection","button","renderButton","toggleBlockType","isBlockActive","minHeight","Draft","customStyleMap","ref","onSubmit","contentBlock","callback","findEntityRanges","character","getType","children","root","fontFamily","marginBottom","urlInputContainer","marginRight","border","cursor","marginTop","textAlign","AnswerCard","ans","answer","helpful","onClickHelpful","onClickNotHelpful","BlogList","fetchReq","uri","async","currentAnswer","newAnswers","answers","divElement","dangerouslySetInnerHTML","__html","localStorage","getItem","isOptionsOpen","query","getQuery","match","params","Card","question","LoginForm","FormFeedback","invalid","SignUpForm","email","onChangeEmail","valid","emailUnique","onChangeUsername","usernameUnique","includes","onChangeName","onChangePassword","confirmPassword","onChangeConfirmPassword","Sidebar","onClickLogOut","Modal","toggle","ModalHeader","ModalBody","passsword","ModalFooter","onClickLogin","show","CodeEditor","mode_map","mode","theme","language","loaded","titleElement","UncontrolledDropdown","DropdownToggle","caret","DropdownMenu","fontStyle","DropdownItem","val","editorProps","$blockScrolling","showPrintMargin","PlacementReport","renderPieChart","renderChart","options","renderLineChart","datasets","borderColor","borderWidth","responsive","legend","fontColor","maintainAspectRatio","chartType","branchChartData","classChartData","yearChartData","branchLabels","classLabels","yearLabels","ExperiencePage","TokenNumber","receiverToken","token","alert","sendPushNotificationAccept","sound","_displayInForeground","Accept","sendPushNotificationReject","undefined","exp","resp","reload","QueryCard","overflow","QueryPageComponent","toggleModal","isModalOpen","getQueries","queries","NotificationCard","e_id","sender","NotificationComponent","getNotifications","messages","notification","E_id","SearchPage","term","SavedPage","companyName","jobType","n_rounds","PracticeCard","difficulty","successRate","PracticeList","problems","problem","accuracy","PracticePage","getQuestion","page","pg","myChart","ctx","document","getElementById","Chart","scales","yAxes","ticks","beginAtZero","align","justifyContent","LoginPage","ReviewPage","getReviewExperiences","UserPage","renderItems","open","inputUsername","inputDescription","usr","des","Prepare","Main","exact","path","render","display","App","onClickExperience","currentPage","onClickBlogs","onClickLogo","setItem","removeItem","onCLickPractice","isSidebarOpen","updateNavbarHeight","offsetHeight","navbarHeight","users","Collapse","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","URL","process","origin","contentType","get","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.80d3d9fc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pikachu.00dd440a.jpg\";","import React from 'react';\nimport {Button, FormGroup, Input, Label,Row,Col} from 'reactstrap';\nimport {FaTrashAlt} from \"react-icons/fa\";\nimport './RoundCard.css';\nexport default function RoundCard(props) {\n    const {id,onClick,onChangeTitle,onChangeDetails,round} = props;\n    return(\n        <FormGroup className={'border border-dark p-2 rounded'}>\n            <Row>\n                <Col md={11}>\n                    <h3 className={'text-center'}>Round {id+1}</h3>\n                </Col>\n                <Col >\n                    <Button\n                        className={'btn-sm float-right m-1'}\n                        color={'danger'}\n                        onClick={(event) => {\n                            onClick(event,round);\n                        }}\n                    >\n                        <FaTrashAlt/>\n                    </Button>\n                </Col>\n            </Row>\n            <Row form={true} className={'my-3 mr-2'}>\n                <Col lg={'auto'} className={'col-form-label text-center'}>\n                    <Label\n                        for={'title'+id}\n                        className={'mx-3'}\n                    >\n                        <h5><b>Round Title</b></h5>\n                    </Label>\n                </Col>\n                <Col>\n                    <Input\n                        id={'title'+id}\n                        type={'text'}\n                        name={'test'}\n                        value={round.title}\n                        onChange={(event) => {\n                            onChangeTitle(event,round)\n                        }}\n                    />\n                </Col>\n            </Row>\n            <Row form={true} className={'my-2 mr-2'}>\n                <Col xs={'auto'}>\n                    <Label\n                        for={'details'+id}\n                        lg={'auto'} className={'col-form-label text-center'}\n                    >\n                        <h5><b>Round Details</b></h5>\n                    </Label>\n                </Col>\n                <Col md={12}>\n                    <Input\n                        id={'details'+id}\n                        type={'textarea'}\n                        name={'text'}\n                        rows={5}\n                        value={round.details}\n                        onChange={(event) => {\n                            onChangeDetails(event,round)\n                        }}\n                    />\n                </Col>\n            </Row>\n        </FormGroup>\n    );\n};","import React from \"react\";\nimport {Form,FormGroup,Label,Input,Button,Row,Col,CustomInput} from 'reactstrap';\nimport RoundCard from \"./RoundCard\";\nexport default class ExperienceForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            author: 'Rutvik Sutaria',\n            company: 'Amazon',\n            branch: 'Computer Engineering',\n            rounds:[\n                {\n                    id: '1',\n                    title: '',\n                    details: ''\n                }\n            ],\n            internship:true,\n            employment: false,\n            receivedOffer: true,\n            stipend:'',\n            ctc:'',\n            jobprofile:'',\n            jobtype:'',\n            accepted: false\n        };\n        this.addRound = this.addRound.bind(this);\n        this.onChangeDetails = this.onChangeDetails.bind(this);\n        this.onChangeTitle = this.onChangeTitle.bind(this);\n        this.renderRound = this.renderRound.bind(this);\n        this.removeCard = this.removeCard.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({\n            author: this.props.user\n        });\n        console.log(this.props.user);\n    }\n\n    getDate = () => {\n        let today = new Date();\n        let dd = String(today.getDate()).padStart(2, '0');\n        let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n        let yyyy = today.getFullYear();\n\n        today = dd + '/' + mm + '/' + yyyy;\n        return(today);\n    };\n\n    saveExperience = () => {\n        const uri='/saveExperience';\n        const data = this.state;\n        fetch(uri,{\n            method:'POST',\n            headers:{\n                'Accept':'application/json',\n                'Content-Type':'application/json'\n            },\n            body: JSON.stringify({\n                \"company\":data.company,\n                \"branch\":data.branch,\n                \"jobtype\":data.jobtype,\n                \"jobprofile\": data.jobprofile,\n                \"ctc\":data.ctc,\n                \"stipend\":data.stipend,\n                \"rounds\":data.rounds,\n                \"author\":data.author,\n                \"likes\":0,\n                \"accepted\":null,\n                \"receivedOffer\":data.receivedOffer,\n                \"date\":this.getDate(),\n                \"reviewed\":false\n            })\n        }).then( response => {\n            console.log(response);\n            return response.json()\n        }).then((response) => {\n                console.log(response);\n                if(response.status === 500) {\n                    console.log(\"Error while connecting to database please check your internet connection\");\n                }\n        }).catch( error => console.log(error.message));\n    };\n\n    addRound = (event) => {\n        const index = this.state.rounds.length;\n        const list = this.state.rounds.slice().concat({\n            id: (index+1).toString(),\n            experience: ''\n        });\n        this.setState({\n            rounds: list\n        });\n        console.log(this.state);\n        event.preventDefault();\n    };\n\n    removeCard = (event,round) => {\n        event.preventDefault();\n        const list = this.state.rounds.filter((item) => item.id !== round.id)\n        const modifiedList = list.map((item,index) => {\n            return({\n                id: (index+1).toString(),\n                title: item.title,\n                details: item.details\n            })\n        });\n        this.setState({\n            rounds: modifiedList\n        })\n    };\n\n    onChangeTitle = (event,round) => {\n        const list = this.state.rounds.slice();\n        list[+round.id-1].title = event.target.value;\n        this.setState({\n            rounds: list\n        })\n    };\n\n    onChangeDetails = (event,round) => {\n        const list = this.state.rounds.slice();\n        list[+round.id-1].details = event.target.value;\n        this.setState({\n            rounds: list\n        })\n    };\n\n    renderRound = (round,index) => {\n        return(\n            <RoundCard\n                id={index}\n                onClick={this.removeCard}\n                onChangeTitle={this.onChangeTitle}\n                onChangeDetails={this.onChangeDetails}\n                round={round}\n            />);\n    };\n\n    render() {\n        return (\n            <div>\n                <h3 className={'text-center mt-2'}>Interview Experience</h3>\n                <Form className={'card-body'}>\n                    <Row>\n                        <Col md={2} className={'mr-1'}>\n                            <Label\n                                className=\"col-form-label\"\n                                for={'company'}\n                            >\n                                <h5><b>Company</b></h5>\n                            </Label>\n                        </Col>\n                        <Col md={'auto'}>\n                            <Input\n                                type='text'\n                                list={'companies'}\n                                name='select'\n                                id='company'\n                                onChange={\n                                    (event) => {\n                                        this.setState({\n                                            company: event.target.value\n                                        });\n                                    }\n                                }\n                            />\n                            <datalist id={'companies'}>\n                                <option value={'Amazon'}>Amazon</option>\n                                <option value={'Media.net'}>Media.net</option>\n                                <option value={'Microsoft'}>Microsoft</option>\n                                <option value={'Samsung'}>Samsung</option>\n                                <option value={'Google'}>Google</option>\n                            </datalist>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md={2} className={'mr-1 my-2'}>\n                            <Label\n                                className=\"col-form-label\"\n                                for={'branch'}\n                            >\n                                <h5><b>Branch</b></h5>\n                            </Label>\n                        </Col>\n                        <Col md={'auto'}>\n                            <Input\n                                type='select'\n                                list={'companies'}\n                                name='select'\n                                id='company'\n                                value={this.state.branch}\n                                onChange={\n                                    (event) => {\n                                        this.setState({\n                                            branch: event.target.value\n                                        });\n                                    }\n                                }\n                            >\n                                <option value={'Computer Engineering'}>Computer Engineering</option>\n                                <option value={'Information Technology'}>Information Technology</option>\n                                <option value={'Electronics & Communication'}>Electronics & Communication</option>\n                                <option value={'Electrical Engineering'}>Electrical Engineering</option>\n                                <option value={'Mechanical Engineering'}>Mechanical Engineering</option>\n                                <option value={'Civil Engineering'}>Civil Engineering</option>\n                                <option value={'Instrumentation & Control'}>Instrumentation & Control</option>\n                            </Input>\n                        </Col>\n                    </Row>\n                    <FormGroup>\n                        <Row>\n                            <Col md={2} className={'mr-2'}>\n                                <Label\n                                    className=\"col-form-label\"\n                                >\n                                    <h5><b>Job Type</b></h5>\n                                </Label>\n                            </Col>\n                            <Col md={'auto'} className={'ml-3'}>\n                                <Label check className={'col-form-label'}>\n                                    <Input\n                                        type = \"radio\"\n                                        name = \"job-type\"\n                                        onChange = {(e) => {\n                                            this.setState({\n                                                internship: e.target.value,\n                                                employment: false,\n                                                jobtype: '2-month Internship'\n                                            })\n                                        }}\n                                    />\n                                    <b>2-month Internship</b>\n                                </Label>\n                            </Col>\n                            <Col md={'auto'}  className={'ml-3'}>\n                                <Label check className={'col-form-label'}>\n                                    <Input\n                                        type=\"radio\"\n                                        name=\"job-type\"\n                                        onChange = {(e) => {\n                                            this.setState({\n                                                internship: e.target.value,\n                                                employment: false,\n                                                jobtype: '6-month Internship'\n                                            })\n                                        }}\n                                    />\n                                    <b> 6-month Internship </b>\n                                </Label>\n                            </Col>\n                            <Col md={'auto'}  className={'ml-3'}>\n                                <Label check className={'col-form-label'}>\n                                    <Input\n                                        type=\"radio\"\n                                        name=\"job-type\"\n                                        onChange = {(e) => {\n                                            this.setState({\n                                                internship: false,\n                                                employment: e.target.value,\n                                                jobtype: 'Full TIme Employment'\n                                            })\n                                        }}\n                                    />\n                                    <b> Full Time Employment </b>\n                                </Label>\n                            </Col>\n                            <Col md={'auto'}  className={'ml-3'}>\n                                <Label check className={'col-form-label'}>\n                                    <Input\n                                        type=\"radio\"\n                                        name=\"job-type\"\n                                        onChange = {(e) => {\n                                            this.setState({\n                                                internship: e.target.value,\n                                                employment: e.target.value,\n                                                jobtype: '6-month + Full time Employment'\n                                            })\n                                        }}\n                                    />\n                                    <b> 6-month + Full time Employment </b>\n                                </Label>\n                            </Col>\n                        </Row>\n                    </FormGroup>\n                    <FormGroup>\n                        {\n                            this.state.internship\n                            ?\n                                <FormGroup>\n                                    <Row>\n                                        <Col md={2}>\n                                            <Label\n                                                className=\"col-form-label \"\n                                                for={'stipend'}\n                                            >\n                                                <h5><b>Stipend</b></h5>\n                                            </Label>\n                                        </Col>\n                                        <Col md={10}>\n                                            <Input\n                                                type='number'\n                                                name='number'\n                                                id='stipend'\n                                                min={'0'}\n                                                className={'col-3 float-left'}\n                                                onChange={(e) => {\n                                                        this.setState({\n                                                            stipend: e.target.value + ' per month'\n                                                        })\n                                                    }\n                                                }\n                                            />\n                                            <b className={'float-left ml-2 col-form-label'}>per month</b>\n                                        </Col>\n                                    </Row>\n                                </FormGroup>\n                            :\n                                <div></div>\n                        }\n                        {\n                            this.state.employment\n                                ?\n                                <FormGroup className={'mt-1'}>\n                                    <Row>\n                                        <Col className={2}>\n                                            <Label\n                                                className=\"col-form-label\"\n                                                for={'ctc'}\n                                            >\n                                                <h5><b>CTC</b></h5>\n                                            </Label>\n                                        </Col>\n                                        <Col md={10}>\n                                            <Input\n                                                type='number'\n                                                name='number'\n                                                id='ctc'\n                                                className={'col-3 float-left'}\n                                                min={'0'}\n                                                onChange={(e) => {\n                                                    this.setState({\n                                                        ctc: e.target.value + ' per annum'\n                                                    })\n                                                }\n                                                }\n                                            />\n                                            <b className={'ml-2 float-left col-form-label'}>per annum</b>\n                                        </Col>\n                                    </Row>\n                                </FormGroup>\n                                :\n                                <div></div>\n                        }\n                    </FormGroup>\n                    <FormGroup>\n                        <Row>\n                            <Col md={2}>\n                                <Label\n                                    className=\"col-form-label\"\n                                    for={'job-profile'}\n                                >\n                                    <h5><b>Job Profile</b></h5>\n                                </Label>\n                            </Col>\n                            <Col md={3}>\n                                <Input\n                                    type='text'\n                                    name='text'\n                                    id={'job-profile'}\n                                    value={this.state.jobProfile}\n                                    onChange={(e) => {\n                                        this.setState({\n                                            jobprofile: e.target.value\n                                        })\n                                    }}\n                                />\n                            </Col>\n                        </Row>\n                    </FormGroup>\n                    <FormGroup>\n                        <Row>\n                            <Col md={2}>\n                                <Label\n                                    className={'col-form-label'}\n                                    for={'receivedOffer'}\n                                >\n                                    <h5><b>Received Offer</b></h5>\n                                </Label>\n                            </Col>\n                            <Col md={1}>\n                                <CustomInput\n                                    className={'col-form-label float-left'}\n                                    id={'receivedOfferYes'}\n                                    type={'radio'}\n                                    name={'offerSwitch'}\n                                    onChange={(e) => {\n                                        this.setState({\n                                            receivedOffer: true\n                                        });\n                                    }}\n                                />\n                                <Label for={'receivedOfferYes'} className={'col-form-label float-left'}><b>Yes</b></Label>\n                            </Col>\n                            <Col md={2}>\n                                <CustomInput\n                                    className={'col-form-label float-left'}\n                                    id={'receivedOfferNo'}\n                                    type={'radio'}\n                                    name={'offerSwitch'}\n                                    onChange={(e) => {\n                                        this.setState({\n                                            receivedOffer: false\n                                        });\n                                    }}\n                                />\n                                <Label for={'receivedOfferNo'} className={'col-form-label float-left'}><b>No</b></Label>\n                            </Col>\n                        </Row>\n                    </FormGroup>\n                    <FormGroup>\n                    {\n                        this.state.rounds.map((round,index) =>\n                            <RoundCard\n                                id={index}\n                                onClick={this.removeCard}\n                                onChangeTitle={this.onChangeTitle}\n                                onChangeDetails={this.onChangeDetails}\n                                round={round}\n                                key={(index+1).toString()}\n                            />\n                        )\n                    }\n                    </FormGroup>\n                    <FormGroup className={'p-3'}>\n                        <Button\n                            color={'dark'}\n                            className={'mr-auto'}\n                            onMouseDown={\n                                (event) => {\n                                    this.addRound(event);\n                                }\n                            }\n                        >\n                            Add Round\n                        </Button>\n                        <Button\n                            className={'float-right'}\n                            color={'dark'}\n                            onClick={\n                                (event) => {\n                                    event.preventDefault();\n                                    this.saveExperience();\n                                    window.location.href='/experiences';\n                                }\n                            }\n                        >\n                            Submit\n                        </Button>\n                    </FormGroup>\n                </Form>\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport './NavbarComponent.css';\nimport {Link} from 'react-router-dom';\nimport {AiOutlineMenu} from \"react-icons/all\";\nimport {\n    Nav,\n    Navbar,\n    NavbarBrand,\n    NavItem,\n    Button,\n    Form,\n    Input,\n    InputGroup,\n    InputGroupAddon,\n} from \"reactstrap\";\nimport {FaSearch} from \"react-icons/all\";\n\nexport default class NavbarComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            isOpen: true,\n            loginOpen: false,\n            signUpOpen: false,\n            username: '',\n            password: '',\n        }\n    }\n\n    toggleLogin = () => {\n        this.setState({\n            loginOpen: !this.state.loginOpen,\n            signUpOpen: false\n        })\n    };\n\n    toggleSignUp = () => {\n        this.setState({\n            loginOpen: false,\n            signUpOpen: !this.state.signUpOpen\n        })\n    };\n\n    onChangeUsernameLogin = (event) => {\n        this.setState({\n            username: event.target.value\n        });\n        event.preventDefault();\n    };\n\n    onChangePasswordLogin = (event) => {\n        this.setState({\n            password: event.target.value\n        });\n        event.preventDefault();\n    };\n\n    render(){\n        return(\n            <div>\n                <Navbar\n                    color={\"dark\"}\n                    expand={'md'}\n                    dark\n                    className={'border-dark border-bottom'}\n                    fixed={'top'}\n                    id={'top-navbar'}\n                    // style={{width:762,display:'inline-block'}}\n                >\n                    <div className={'container-fluid'}>\n                        <div className={'mr-4'}>\n                            <span className={'text-white mr-3'} onMouseDown={this.props.onSidebarToggleClick} style={{marginLeft:'-10px'}}>\n                                <AiOutlineMenu size={20}/>\n                            </span>\n                            <NavbarBrand\n                                className={'text-left'}\n                                style={{minWidth:'20%'}}\n                                href={'/'}\n                            >\n                                <span\n                                    to={'/'}\n                                    className={'text-white'}\n                                    style={{textDecoration: 'none'}}\n                                    onMouseDown = {(e) => e.preventDefault()}\n                                >\n                                    InterviewPortal\n                                </span>\n                            </NavbarBrand>\n                        </div>\n                        {/*<div className=\"d-flex flex-grow-1 float-right\">*/}\n                        {/*</div>*/}\n                        {/*<NavbarToggler onClick={(event)=>{*/}\n                        {/*    this.setState({*/}\n                        {/*        isOpen: !this.state.isOpen*/}\n                        {/*    });*/}\n                        {/*    event.preventDefault();*/}\n                        {/*    }}*/}\n                        {/*/>*/}\n                        {/*<Collapse isOpen={this.state.isOpen} navbar>*/}\n                            <Nav className={'mr-auto'} navbar={true}>\n                            </Nav>\n                            <Nav>\n                                <NavItem>\n                                    <Form className=\"mr-2 my-auto w-20 d-inline-block order-1\">\n                                        <InputGroup>\n                                            <Input type=\"text\"\n                                                   placeholder=\"Search\"\n                                                   className={'float-right'}\n                                            />\n                                            <InputGroupAddon addonType={'append'}>\n                                                <Button\n                                                    className=\"btn-outline-dark border border-left-0\"\n                                                    type=\"button\"\n                                                    color={'light'}\n                                                    onMouseDown={(e)=>{\n                                                        e.preventDefault();\n                                                    }}\n                                                >\n                                                    <FaSearch/>\n                                                </Button>\n                                            </InputGroupAddon>\n                                        </InputGroup>\n                                    </Form>\n                                </NavItem>\n                            </Nav>\n                            {/*<Nav>*/}\n                                {/*{*/}\n                                {/*    !this.props.user ?*/}\n                                {/*        <NavItem className={'mr-2 my-auto w-20 d-inline-block order-1'}>*/}\n                                {/*            <Button*/}\n                                {/*                color={'link text-white'}*/}\n                                {/*                style={{*/}\n                                {/*                    textDecoration: 'none'*/}\n                                {/*                }}*/}\n                                {/*                onClick={(event) => {*/}\n                                {/*                    this.toggleLogin();*/}\n                                {/*                    event.preventDefault();*/}\n                                {/*                }}*/}\n                                {/*            >*/}\n                                {/*                Login / SignUp*/}\n                                {/*            </Button>*/}\n                                {/*            <Modal*/}\n                                {/*                isOpen={this.state.loginOpen}*/}\n                                {/*                toggle={this.toggleLogin}*/}\n                                {/*            >*/}\n                                {/*                <ModalHeader toggle={this.toggleLogin}>Login</ModalHeader>*/}\n                                {/*                <ModalBody>*/}\n                                {/*                    <LoginForm*/}\n                                {/*                        onChangeUsernameLogin={this.onChangeUsernameLogin}*/}\n                                {/*                        onChangePasswordLogin={this.onChangePasswordLogin}*/}\n                                {/*                        username={this.state.username}*/}\n                                {/*                        passsword={this.state.password}*/}\n                                {/*                    />*/}\n                                {/*                </ModalBody>*/}\n                                {/*                <ModalFooter>*/}\n                                {/*                    <Button*/}\n                                {/*                        color={'link text-dark'}*/}\n                                {/*                        style={{*/}\n                                {/*                            textDecoration: 'none'*/}\n                                {/*                        }}*/}\n                                {/*                        onClick={(event) => {*/}\n                                {/*                            this.toggleSignUp();*/}\n                                {/*                            event.preventDefault();*/}\n                                {/*                        }}*/}\n                                {/*                    >*/}\n                                {/*                        <b>Not a member? Sign Up</b>*/}\n                                {/*                    </Button>*/}\n                                {/*                    <Button*/}\n                                {/*                        color={'success'}*/}\n                                {/*                        onClick={(event) =>*/}\n                                {/*                            this.props.onClickLogin(event, this.state.username, this.state.password)*/}\n                                {/*                        }*/}\n                                {/*                    >*/}\n                                {/*                        Login*/}\n                                {/*                    </Button>*/}\n                                {/*                </ModalFooter>*/}\n                                {/*            </Modal>*/}\n                                {/*            <Modal*/}\n                                {/*                isOpen={this.state.signUpOpen}*/}\n                                {/*                toggle={this.toggleSignUp}*/}\n                                {/*            >*/}\n                                {/*                <ModalHeader toggle={this.toggleSignUp}>Sign Up</ModalHeader>*/}\n                                {/*                <ModalBody>*/}\n                                {/*                    <SignUpForm/>*/}\n                                {/*                </ModalBody>*/}\n                                {/*                <ModalFooter>*/}\n                                {/*                    <Button*/}\n                                {/*                        color={'link text-dark'}*/}\n                                {/*                        style={{*/}\n                                {/*                            textDecoration: 'none'*/}\n                                {/*                        }}*/}\n                                {/*                        onClick={(event) => {*/}\n                                {/*                            this.toggleLogin();*/}\n                                {/*                            event.preventDefault();*/}\n                                {/*                        }}*/}\n                                {/*                    >*/}\n                                {/*                        <b>Already a member? Login</b>*/}\n                                {/*                    </Button>*/}\n                                {/*                    <Button*/}\n                                {/*                        color={'success'}*/}\n                                {/*                        onClick={*/}\n                                {/*                            (event) => {*/}\n                                {/*                                event.preventDefault();*/}\n                                {/*                            }*/}\n                                {/*                        }*/}\n                                {/*                    >*/}\n                                {/*                        Sign Up*/}\n                                {/*                    </Button>*/}\n                                {/*                </ModalFooter>*/}\n                                {/*            </Modal>*/}\n                                {/*        </NavItem>*/}\n                                {/*        :*/}\n                                {/*        <UncontrolledDropdown nav inNavbar className={'float-right'}>*/}\n                                {/*            <DropdownToggle nav caret className={'text-white'}>*/}\n                                {/*                {this.props.user}*/}\n                                {/*            </DropdownToggle>*/}\n                                {/*            <DropdownMenu right>*/}\n                                {/*                <DropdownItem>*/}\n                                {/*                    Profile*/}\n                                {/*                </DropdownItem>*/}\n                                {/*                <DropdownItem>*/}\n                                {/*                    Messages*/}\n                                {/*                </DropdownItem>*/}\n                                {/*                <DropdownItem>*/}\n                                {/*                    <Link*/}\n                                {/*                        to={'/review-posts'}*/}\n                                {/*                        className={'text-dark'}*/}\n                                {/*                        style={{textDecoration:'none'}}*/}\n                                {/*                    >*/}\n                                {/*                        Review Posts*/}\n                                {/*                    </Link>*/}\n                                {/*                </DropdownItem>*/}\n                                {/*                <DropdownItem divider />*/}\n                                {/*                <DropdownItem*/}\n                                {/*                    onClick={(event) => {*/}\n                                {/*                        this.props.onClickSignOut(event);*/}\n                                {/*                        this.setState({*/}\n                                {/*                            loginOpen: false,*/}\n                                {/*                            signUpOpen: false*/}\n                                {/*                        })*/}\n                                {/*                    }}*/}\n                                {/*                >*/}\n                                {/*                    SignOut*/}\n                                {/*                </DropdownItem>*/}\n                                {/*            </DropdownMenu>*/}\n                                {/*        </UncontrolledDropdown>*/}\n                                {/*}*/}\n                            {/*</Nav>*/}\n                        {/*</Collapse>*/}\n                    </div>\n                </Navbar>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport {Button, Col, Row} from \"reactstrap\";\nimport {Link} from \"react-router-dom\";\nimport {FaCheckCircle, FaRegStar, FaStar, FaThumbsUp, FaTimesCircle} from \"react-icons/all\";\n\nexport default function ExperienceCard(props) {\n    const {experience} = props;\n    // console.log(experience);\n    return(\n        <div key={experience._id} style={{backgroundColor:'#e3e4e6'}} className={'border border-dark rounded mr-5 mt-2'}>\n            <Row>\n                <Col md={11}>\n                    <Link to={'/experiences/'+experience._id} className={'text-dark btn-link'}>\n                        <h5 className={'m-3'}>\n                            {`${experience.company} interview experience for ${experience.jobprofile} by ${experience.author}`}\n                        </h5>\n                    </Link>\n                </Col>\n                <Col md={1}>\n                    {\n                        !experience.saved ? <Button color={'white mt-2'} title={'Save'} onMouseDown={props.onSaveClick}><FaRegStar/></Button>\n                            : <Button color={'white mt-2'} title={'Unsaved'} onMouseDown={props.onSaveClick}><FaStar/></Button>\n                    }\n                </Col>\n            </Row>\n            <div className={'ml-3 mb-3'}>\n                {`Submission Date: ${experience.date.substring(0,10)}`}\n                <br/>\n                {`Rounds: ${experience.rounds.length}`}\n                <br/>\n                {`Received Offer:  `}{ experience.receivedOffer ? <span className={'text-success ml-1'}><FaCheckCircle /></span> : <span className={'text-danger ml-1'}><FaTimesCircle /></span>}\n                <br/>\n                {\n                    experience.accepted ? <h6>\n                        <span className={'text-success'}><FaThumbsUp size={14}/></span>{' '+experience.likes+' '} people found this helpful\n                    </h6>\n                        :\n                        <div/>\n                }\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {Row,Col,Input,Label} from \"reactstrap\";\nimport ExperienceCard from \"./ExperienceCard\";\nexport default class ExperienceList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            experiences: [],\n            loading: true,\n            sort: \"date\"\n        };\n        this.getExperiences();\n    }\n\n    getExperiences = () => {\n        fetch('/experiences')\n            .then(res => res.json())\n            .then(res => {\n                let experiences = res.sort(function(a,b) {\n                    return a.date.localeCompare(b.date);\n                });\n                this.setState({experiences,loading:false});\n                // console.log(experiences);\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    };\n\n    onSaveClick = (e) => {\n      e.preventDefault();\n      // this.setState({\n      //     saved: !this.state.saved\n      // });\n    };\n\n    render() {\n        const {experiences} = this.state;\n        // console.log(experiences);\n        if(this.state.loading){\n            return <img src={'/loading.gif'} alt={'Loading..'} style={{position:'absolute',top:'50%',left:'50%'}}/>\n        }\n        return(\n            <div>\n                <div className={'border-bottom'}>\n                    <h5>\n                        Want to share your experience? Fill this <Link to={'/interview-experience-form'}>interview experience form</Link>.\n                    </h5>\n                </div>\n                <div className={'border-bottom pb-2 mt-2'}>\n                    <Row>\n                        <Col\n                            md={'auto'}\n                        >\n                            <Label\n                                for={'sort-by'}\n                                className={'col-form-label'}\n                            >\n                                Sort By:\n                            </Label>\n                        </Col>\n                        <Col\n                            md={6}\n                        >\n                            <Input\n                                type={'select'}\n                                name={'select'}\n                                id={'sort-by'}\n                                style={{width:'30%'}}\n                                value={this.state.sort}\n                                onChange={(e) => {\n                                    let experiences = this.state.experiences.sort(function (a,b) {\n                                        if (e.target.value === \"date\") {\n                                            return a.date.localeCompare(b.date);\n                                        }\n                                        if (e.target.value === \"author\") {\n                                            return a.author.localeCompare(b.author);\n                                        }\n                                        if (e.target.value === \"company\") {\n                                            return a.company.localeCompare(b.company);\n                                        }\n                                        if (e.target.value === \"helpfulness\") {\n                                            return a.likes - b.likes;\n                                        }\n                                    });\n                                    this.setState({\n                                        sort:e.target.value,\n                                        experiences\n                                    });\n                                }}\n                            >\n                                <option value={'date'}>\n                                    Submission Date\n                                </option>\n                                <option value={'company'}>\n                                    Company\n                                </option>\n                                <option value={'author'}>\n                                    Author\n                                </option>\n                                <option value={'helpfulness'}>\n                                    Helpfulness\n                                </option>\n                            </Input>\n                        </Col>\n                    </Row>\n                </div>\n                {/*{this.renderExperienceCard(experiences[0])}*/}\n                {/*<ExperienceCard experience={experiences[0]} onSaveClick={this.onSaveClick}/>*/}\n                {\n                    experiences.map(experience => {\n                        // console.log(experience);\n                        return(experience.accepted  ? <ExperienceCard key={experience._id} experience={experience} link={'/experience2'} onSaveClick={this.onSaveClick}/>\n                            : <div />\n                        )\n                    })\n                }\n            </div>\n        );\n    }\n\n}","const styleMap = {\n    'H1': {\n        fontSize: '2em'\n    },\n    'H2' : {\n        fontSize: '1.5em'\n    },\n    'H3' : {\n        fontSize: '1.17em'\n    },\n    'H4' : {\n        fontSize: '1.12em'\n    },\n    'H5' : {\n        fontSize: '0.83em'\n    },\n    'H6' : {\n        fontSize: '0.75em'\n    },\n    'RIGHT' : {\n        float: 'right'\n    },\n    'LEFT' : {\n        float: 'left'\n    },\n};\n\nexport default styleMap;","import React from \"react\";\nimport {Media} from 'reactstrap';\n\nexport default function AnswerProfileCard(props) {\n    return(\n        <Media>\n            <Media left top href={'#'}>\n                <div className={'m-1 ml-2 border border-dark'} style={{padding:0.1}}>\n                    <Media\n                        object\n                        src={props.src}\n                        alt={'profile-picture'}\n                        style={{width:'64px',height:'64px'}}\n                    />\n                </div>\n            </Media>\n            <Media body className={'m-2'}>\n                <Media heading>\n                    {props.name}\n                </Media>\n                {props.description}\n            </Media>\n        </Media>\n    )\n}","import React from \"react\";\nimport {CompositeDecorator, Editor as DraftEditor, EditorState, RichUtils} from 'draft-js';\nimport {Button,Input,Col,Row} from 'reactstrap';\nimport styleMap from \"../Constants/StyleMap\";\nimport {MdLink,GoListUnordered,GoListOrdered} from \"react-icons/all\";\nimport AnswerProfileCard from \"./AnswerProfleCard\";\nimport 'draft-js/dist/Draft.css';\n\nexport default class AnswerBox extends React.Component {\n    constructor(props) {\n        super(props);\n        const decorator = new CompositeDecorator([\n            {\n                strategy: findLinkEntities,\n                component: Link,\n            },\n        ]);\n        this.state = {\n            innerWidth: 0,\n            innerHeight: 0,\n            url:'',\n            showURLInput: false,\n            editorState: EditorState.createEmpty(decorator),\n            editorContent: <div />\n        };\n        // this.editorRef = React.createRef();\n        this.onChange = (editorState) => {\n            this.setState({editorState,\n                editorContent: this.editor.editor.innerHTML\n            });\n            // console.log(this.editor);\n            // document.getElementById('editorContent').innerHTML = this.state.editorContent;\n            // console.log(ReactDOM.findDOMNode(this).innerHTML)\n        };\n        this.promptForLink = this._promptForLink.bind(this);\n        this.onURLChange = (e) => this.setState({urlValue: e.target.value});\n        this.confirmLink = this._confirmLink.bind(this);\n        this.onLinkInputKeyDown = this._onLinkInputKeyDown.bind(this);\n        this.removeLink = this._removeLink.bind(this);\n    }\n\n    handleKeyCommand(command, editorState) {\n        const newState = RichUtils.handleKeyCommand(editorState, command);\n        if (newState) {\n            this.onChange(newState);\n            return 'handled';\n        }\n        return 'not-handled';\n    }\n\n    updateWindowsDimension = () => {\n        this.setState({\n            innerWidth: window.innerWidth,\n            innerHeight: window.innerHeight\n        });\n    };\n\n    isActive(style) {\n        const styles = this.state.editorState.getCurrentInlineStyle();\n        return styles.has(style);\n    }\n\n    isBlockActive(type) {\n        const blockType = RichUtils.getCurrentBlockType(this.state.editorState);\n        return blockType === type;\n    }\n\n    buttons = ['BOLD','ITALIC','UNDERLINE','H1','H2','H3','H4','H5'];\n    labels = [\n        <b>B</b>,\n        <i>I</i>,\n        <u>U</u>,\n        <span>H1</span>,\n        <span>H2</span>,\n        <span>H3</span>,\n        <span>H4</span>,\n        <span>H5</span>,\n    ];\n\n    renderButton(style,label,onChange) {\n        return(\n            <Button\n                className={'btn-light border-dark border-0 m-1'}\n                style={{textDecoration:'none'}}\n                key={style}\n                size={'md'}\n                onMouseDown={(event)=>{\n                    event.preventDefault();\n                    onChange(RichUtils.toggleInlineStyle(this.state.editorState, style));\n                }}\n                active={this.isActive(style)}\n            >\n                {label}\n            </Button>\n        )\n    }\n\n    componentDidMount() {\n        this.editor.focus();\n        this.updateWindowsDimension();\n        window.addEventListener('resize',this.updateWindowsDimension);\n    }\n\n    isLinkActive() {\n        const {editorState} = this.state;\n        const selection = editorState.getSelection();\n        if (!selection.isCollapsed()) {\n            const contentState = editorState.getCurrentContent();\n            const startKey = editorState.getSelection().getStartKey();\n            const startOffset = editorState.getSelection().getStartOffset();\n            const blockWithLinkAtBeginning = contentState.getBlockForKey(startKey);\n            const linkKey = blockWithLinkAtBeginning.getEntityAt(startOffset);\n            let url='';\n            if (linkKey) {\n                const linkInstance = contentState.getEntity(linkKey);\n                url = linkInstance.getData().url;\n                return true;\n            }\n            return false;\n\n        }\n    }\n\n    _promptForLink(e) {\n        e.preventDefault();\n        const {editorState} = this.state;\n        const selection = editorState.getSelection();\n        if (!selection.isCollapsed()) {\n            const contentState = editorState.getCurrentContent();\n            const startKey = editorState.getSelection().getStartKey();\n            const startOffset = editorState.getSelection().getStartOffset();\n            const blockWithLinkAtBeginning = contentState.getBlockForKey(startKey);\n            const linkKey = blockWithLinkAtBeginning.getEntityAt(startOffset);\n\n            let url = '';\n            if (linkKey) {\n                const linkInstance = contentState.getEntity(linkKey);\n                url = linkInstance.getData().url;\n                console.log(url);\n            }\n\n            this.setState({\n                showURLInput: true,\n                urlValue: url,\n            });\n        }\n    };\n\n    _confirmLink(e) {\n        e.preventDefault();\n        const {editorState, urlValue} = this.state;\n        const contentState = editorState.getCurrentContent();\n        const contentStateWithEntity = contentState.createEntity(\n            'LINK',\n            'MUTABLE',\n            {url: urlValue}\n        );\n        const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n        const newEditorState = EditorState.set(editorState, { currentContent: contentStateWithEntity });\n        this.setState({\n            editorState: RichUtils.toggleLink(\n                newEditorState,\n                newEditorState.getSelection(),\n                entityKey\n            ),\n            showURLInput: false,\n            urlValue: '',\n        });\n    };\n\n    _onLinkInputKeyDown(e) {\n        if (e.which === 13) {\n            this._confirmLink(e);\n        }\n    }\n\n    _removeLink(e) {\n        e.preventDefault();\n        const {editorState} = this.state;\n        const selection = editorState.getSelection();\n        if (!selection.isCollapsed()) {\n            this.setState({\n                editorState: RichUtils.toggleLink(editorState, selection, null),\n            });\n        }\n    };\n\n    renderLinkButton = () => {\n        let urlInput;\n        if (this.state.showURLInput) {\n            urlInput =\n                <Row>\n                    <Col md={'auto'} className={'ml-2'}>\n                        <Input\n                            onChange={this.onURLChange}\n                            style={styles.urlInput}\n                            type=\"text\"\n                            value={this.state.urlValue}\n                            onKeyDown={this.onLinkInputKeyDown}\n                        />\n                    </Col>\n                    <Col>\n                        <Button\n                            className={'btn-light border-dark border-0 mb-2'}\n                            style={{textDecoration:'none'}}\n                            size={'md'}\n                            onMouseDown={this.confirmLink}\n                        >\n                            Confirm\n                        </Button>\n                    </Col>\n                </Row>;\n        }\n        return (\n            <span>\n                <Button\n                    className={'btn-light border-dark border-0 m-1'}\n                    style={{textDecoration:'none'}}\n                    size={'md'}\n                    onMouseDown={this.promptForLink}\n                    active={this.isLinkActive()}\n                >\n                    <MdLink size={20}/>\n                </Button>\n                <Button\n                    className={'btn-light border-dark border-0 m-1'}\n                    style={{textDecoration:'none'}}\n                    size={'md'}\n                    onMouseDown={this.removeLink}\n                    active={this.isActive('LINK')}\n                >\n                    Remove Link\n                </Button>\n                {urlInput}\n            </span>\n        )\n    }\n    ;\n\n    render() {\n        const onChange = this.onChange;\n        return(\n            <div className={'mx-3 mb-3'}>\n                <AnswerProfileCard\n                    src={'/pikachu.jpg'}\n                    name={'Rutvik Sutaria'}\n                    description={'8th semester CSE student'}\n                />\n                <div className={'mx-3 border-dark rounded-top border bg-light border-bottom-0'} style={{width:'97%'}}>\n                    <div>\n                        {\n                            this.buttons.map(\n                                (button,index) => this.renderButton(button,this.labels[index],onChange)\n                            )\n                        }\n                        <Button\n                            className={'btn-light border-dark border-0 m-1'}\n                            style={{textDecoration:'none'}}\n                            size={'md'}\n                            onMouseDown={(event)=>{\n                                event.preventDefault();\n                                onChange(RichUtils.toggleBlockType(this.state.editorState, 'unordered-list-item'));\n                            }}\n                            active={this.isBlockActive('unordered-list-item')}\n                        >\n                            <GoListUnordered size={20}/>\n                        </Button>\n                        <Button\n                            className={'btn-light border-dark border-0 m-1'}\n                            style={{textDecoration:'none'}}\n                            size={'md'}\n                            onMouseDown={(event)=>{\n                                event.preventDefault();\n                                onChange(RichUtils.toggleBlockType(this.state.editorState, 'ordered-list-item'));\n                            }}\n                            active={this.isBlockActive('ordered-list-item')}\n                        >\n                            <GoListOrdered size={20}/>\n                        </Button>\n                        {this.renderLinkButton()}\n                    </div>\n                </div>\n                <div className={'border rounded-bottom border-dark mx-3'} style={{width:'97%',minHeight:this.state.innerHeight/3,marginLeft:10,backgroundColor:'#FFFFFF'}}>\n                    <div className={'mx-2 p-1'}>\n                        <DraftEditor\n                            editorState={this.state.editorState}\n                            customStyleMap={styleMap}\n                            onChange={onChange}\n                            handleKeyCommand={this.handleKeyCommand}\n                            placeholder={'Type your answer..'}\n                            ref={(editor) => {\n                                this.editor = editor;\n                            }}\n                        />\n                    </div>\n                </div>\n                {/*<div id={'editorContent'}>*/}\n\n                {/*</div>*/}\n                <Button\n                    type={'submit'}\n                    color={'dark'}\n                    className={'mt-1 ml-3 mb-2'}\n                    onClick={(e) => {\n                        e.preventDefault();\n                        // document.getElementById('editorContent').innerHTML = this.state.editorContent;\n                        this.props.onSubmit(this.state.editorContent);\n                    }}\n                    size={'sm'}\n                >\n                    Submit\n                </Button>\n            </div>\n        );\n    }\n}\n\nfunction findLinkEntities(contentBlock, callback, contentState) {\n    contentBlock.findEntityRanges(\n        (character) => {\n            const entityKey = character.getEntity();\n            return (\n                entityKey && contentState.getEntity(entityKey).getType() === 'LINK'\n            );\n        },\n        callback\n    );\n}\n\nconst Link = (props) => {\n    const {url} = props.contentState.getEntity(props.entityKey).getData();\n    return (\n        <a href={url} style={styles.link}>\n            {props.children}\n        </a>\n    );\n};\n\nconst styles = {\n    root: {\n        fontFamily: '\\'Georgia\\', serif',\n        padding: 20,\n        width: 600,\n    },\n    buttons: {\n        marginBottom: 10,\n    },\n    urlInputContainer: {\n        marginBottom: 10,\n    },\n    urlInput: {\n        fontFamily: '\\'Georgia\\', serif',\n        marginRight: 10,\n        padding: 3,\n    },\n    editor: {\n        border: '1px solid #ccc',\n        cursor: 'text',\n        minHeight: 80,\n        padding: 10,\n    },\n    button: {\n        marginTop: 10,\n        textAlign: 'center',\n    },\n    link: {\n        color: '#3b5998',\n        textDecoration: 'underline',\n    },\n};","import React from 'react';\nimport {FaThumbsUp, FaThumbsDown, FaRegThumbsUp, FaRegThumbsDown} from \"react-icons/all\";\nimport AnswerProfileCard from \"./AnswerProfleCard\";\nimport {Button} from \"reactstrap\";\n\nexport default function AnswerCard(props){\n    const ans = props.answer;\n    // console.log(ans);\n    return(\n        <div className={'m-2 mr-5 border-bottom'}>\n            <AnswerProfileCard\n                src={'/pikachu.jpg'}\n                name={ans.author}\n                description={'8th semester CSE student'}\n            />\n            <div className={'m-3'}>\n                {/*<Editor editorState={ans.answer} readOnly={true}/>*/}\n                <div>\n                    {ans.answer}\n                </div>\n                <div className={'mt-2 pt-2 border-top'}>\n                    {\n                        ans.helpful !== 'none' ? <span>\n                            <span className={'text-success'}>\n                                <FaThumbsUp/>\n                            </span>\n                                {ans.likes} people found this helpful\n                        </span> : <div/>\n                    }\n                    <h6>\n                        Was this answer helpful?{' '}\n                        <Button size={'sm'} color={'white'} className={'mb-1 text-success'}\n                                onMouseDown={(e) => {\n                                    props.onClickHelpful(e,ans);\n                                }}\n                        >\n                            {ans.helpful === 'yes' ? <FaThumbsUp/> : <FaRegThumbsUp/>}\n                        </Button>\n                        <Button size={'sm'} color={'white'} className={'mb-1 text-danger'}\n                                onMouseDown={(e) => {\n                                    props.onClickNotHelpful(e,ans);\n                                }}\n                        >\n                            {ans.helpful === 'no' ? <FaThumbsDown/> : <FaRegThumbsDown/>}\n                        </Button>\n                    </h6>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport AnswerBox from \"./AnswerBox\";\nimport {Card,Button} from \"reactstrap\";\nimport {FaComment,FaEllipsisH,FaFacebookF,FaTwitter,AiFillEdit,FaStar,MdReport,AiOutlineStop} from \"react-icons/all\";\nimport '../Images/pikachu.jpg';\nimport AnswerCard from \"./AnswerCard\";\n\n\nexport default class BlogList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOptionsOpen: false,\n            answer: false,\n            query: {},\n            answers: [],\n            width: window.innerWidth,\n            height: window.innerHeight,\n            loading: true\n        };\n        this.getQuery();\n    }\n\n    fetchReq = async(uri,id) => {\n        const response = await fetch(uri,{\n            method:'POST',\n            headers:{\n                'Accept':'application/json',\n                'Content-Type':'application/json'\n            },\n            body: JSON.stringify({\n                \"id\":id\n            })\n        });\n        return await response.json();\n    };\n\n    getQuery() {\n        this.fetchReq('/getQuery',this.props.match.params.id).then(query => {\n            this.fetchReq('/getAnswers',query[0].answers).then(answers => {\n                this.setState({\n                    query: query[0],answers,loading: false\n                })\n            });\n        });\n        // const answers = query.answers.map((answer_id) => {\n        //     return this.fetchReq('/getAnswer')[0];\n        // });\n        // this.setState({query,answers,loading:false});\n        // console.log(query);\n    };\n\n    onClickHelpful = (e,currentAnswer) => {\n        e.preventDefault();\n        const {answers} = this.state;\n        const newAnswers = answers.map(answer => {\n           return answer.id ===  currentAnswer.id ? {\n               id:answer.id,\n               answer: currentAnswer.answer,\n               helpful: 'yes'\n           }\n           :\n               answer\n        });\n        this.setState({answers: newAnswers});\n    };\n\n    onClickNotHelpful = (e,currentAnswer) => {\n        e.preventDefault();\n        const {answers} = this.state;\n        const newAnswers = answers.map(answer => {\n            return answer.id ===  currentAnswer.id ? {\n                    id:answer.id,\n                    answer: currentAnswer.answer,\n                    helpful: 'no'\n                }\n                :\n                answer\n        });\n        this.setState({answers: newAnswers});\n    };\n\n    updateWindowsDimension = () => {\n        this.setState({\n            width: window.innerWidth,\n            height: window.innerHeight\n        });\n    };\n\n    componentDidMount() {\n        this.updateWindowsDimension();\n        window.addEventListener('resize',this.updateWindowsDimension);\n    }\n\n    onSubmit = (editorContent) => {\n        const divElement = <div dangerouslySetInnerHTML={{__html:\n            editorContent}}>\n        </div>;\n        this.setState({\n            answers: [...this.state.answers,\n                {id: this.state.answers.length,answer: divElement, helpful: 'none',author:localStorage.getItem('user')}\n            ],\n            answer: !this.state.answer\n        });\n    };\n\n    render() {\n        return (\n            <div className={'mt-2'} style={{minHeight: this.state.height-57,width:'1000'}}>\n                {\n                    !this.state.loading ?\n                    <Card>\n                        <div className={'mx-4 mt-2 border-bottom'}>\n                            <div className={'row'}>\n                                <b className={'col-11'}>\n                                    <h4>\n                                        {this.state.query.question}\n                                    </h4>\n                                </b>\n                            </div>\n                            <div className={'row mb-1'}>\n                                <div className={'col-6'}>\n                                    <Button\n                                        className={'border-0 mb-2'}\n                                        color={'dark'}\n                                        size={'sm'}\n                                        onMouseDown={(e) => {\n                                            this.setState({\n                                                answer: !this.state.answer\n                                            });\n                                            e.preventDefault();\n                                        }}\n                                    >\n                                        <AiFillEdit size={'20px'}/>\n                                        {' Answer'}\n                                    </Button>\n                                    <Button\n                                        className={'border-0 ml-2 mb-2'}\n                                        color={'dark'}\n                                        size={'sm'}\n                                        onMouseDown={(e) => {\n                                            e.preventDefault();\n                                        }}\n                                    >\n                                        <FaStar size={'20px'}/>\n                                        {' Save'}\n                                    </Button>\n                                </div>\n                                <div className={'col-6'}>\n                                    <div className={'text-right'}>\n                                        <Button\n                                            className={'border-0 mb-1'}\n                                            color={'white'}\n                                            title={'Comment'}\n                                            onMouseDown={(e) => {\n                                                console.log('mouse down!');\n                                                e.preventDefault();\n                                            }}\n                                        >\n                                            <FaComment/>\n                                        </Button>\n                                        <Button\n                                            className={'border-0 mb-1'}\n                                            color={'white'}\n                                            title={'Report this question'}\n                                            onMouseDown={(e) => {\n                                                console.log('mouse down!');\n                                                e.preventDefault();\n                                            }}\n                                        >\n                                            <AiOutlineStop/>\n                                        </Button>\n                                        <Button\n                                            className={'border-0 mb-1'}\n                                            color={'white'}\n                                            onMouseDown={(e) => {\n                                                console.log('mouse down!');\n                                                e.preventDefault();\n                                            }}\n                                            title={'Share on Facebook'}\n                                        >\n                                            <FaFacebookF/>\n                                        </Button>\n                                        <Button\n                                            className={'border-0 mb-1'}\n                                            color={'white'}\n                                            title={'Share on Twitter'}\n                                            onMouseDown={(e) => {\n                                                console.log('mouse down!');\n                                                e.preventDefault();\n                                            }}\n                                        >\n                                            <FaTwitter/>\n                                        </Button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        {\n                            this.state.answer\n                                ? <AnswerBox\n                                        onSubmit={this.onSubmit}\n                                />\n                                : <div>\n                                    <br/>\n                                </div>\n                        }\n                        {\n                            this.state.answers.map(answer =>\n                            <AnswerCard\n                                key={answer._id}\n                                answer={answer}\n                                onClickHelpful={this.onClickHelpful}\n                                onClickNotHelpful={this.onClickNotHelpful}\n                            />)\n                        }\n                    </Card>\n                    :\n                    <img src={'/loading.gif'} alt={'Loading..'} style={{position:'absolute',top:'50%',left:'50%'}}/>\n                }\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport {Col, Input, Label, Row,Form,FormFeedback} from \"reactstrap\";\nexport default function LoginForm(props) {\n    const {onChangeUsernameLogin, onChangePasswordLogin, username, password} = props;\n    return(\n        <Form>\n            <Row form={true} className={'my-2 mr-2'}>\n                <Col md={2}>\n                    <Label\n                        for={'email'}\n                    >\n                        <b>Username</b>\n                    </Label>\n                </Col>\n                <Col md={10}>\n                    <Input\n                        id = {'email'}\n                        type = {'text'}\n                        name = {'email'}\n                        value = {username}\n                        onChange = {onChangeUsernameLogin}\n                        placeholder={'Email or username'}\n                    />\n                </Col>\n            </Row>\n            <Row form={true} className={'my-2 mr-2'}>\n                <Col md={2}>\n                    <Label\n                        for={'password'}\n                    >\n                        <b>Password</b>\n                    </Label>\n                </Col>\n                <Col md={10}>\n                    <Input\n                        id={'password'}\n                        type={'password'}\n                        name={'password'}\n                        value = {password}\n                        onChange = {onChangePasswordLogin}\n                    />\n                </Col>\n                {\n                    props.status === 500 ? <FormFeedback invalid>Invalid credentials.</FormFeedback> : <div/>\n                }\n            </Row>\n        </Form>\n    )\n}","import React from \"react\";\nimport {Col, Form, Input, Label, Row,FormFeedback} from \"reactstrap\";\nexport default function SignUpForm(props) {\n    return(\n        <Form>\n            <Row form={true} className={'my-2 mr-2'}>\n                <Col md={2}>\n                    <Label\n                        for={'email'}\n                    >\n                        <b>Email</b>\n                    </Label>\n                </Col>\n                <Col md={10}>\n                    <Input\n                        id={'email'}\n                        type={'email'}\n                        name={'email'}\n                        value={props.email}\n                        onChange={props.onChangeEmail}\n                        valid={props.email!==''&&props.emailUnique}\n                        invalid={!props.emailUnique}\n                    />\n                    {\n                        props.emailUnique?<div/>:<FormFeedback>This email has already been registered.</FormFeedback>\n                    }\n                </Col>\n            </Row>\n            <Row form={true} className={'my-2 mr-2'}>\n                <Col md={2}>\n                    <Label\n                        for={'username'}\n                    >\n                        <b>Username</b>\n                    </Label>\n                </Col>\n                <Col md={10}>\n                    <Input\n                        id={'username'}\n                        type={'text'}\n                        name={'username'}\n                        value={props.username}\n                        onChange={props.onChangeUsername}\n                        valid={props.username!==''&&props.usernameUnique}\n                        invalid={!props.usernameUnique || props.username.includes(' ')}\n                    />\n                    {\n                        props.usernameUnique?<div/>:<FormFeedback>This username is taken.</FormFeedback>\n                    }\n                    {\n                        !props.username.includes(' ')?<div/>:<FormFeedback>Username cannot contain spaces.</FormFeedback>\n                    }\n                </Col>\n            </Row>\n            <Row form={true} className={'my-2 mr-2'}>\n                <Col md={2}>\n                    <Label\n                        for={'name'}\n                    >\n                        <b>Name</b>\n                    </Label>\n                </Col>\n                <Col md={10}>\n                    <Input\n                        id={'name'}\n                        type={'text'}\n                        name={'name'}\n                        value={props.name}\n                        onChange={props.onChangeName}\n                    />\n                </Col>\n            </Row>\n            <Row form={true} className={'my-2 mr-2'}>\n                <Col md={2}>\n                    <Label\n                        for={'password'}\n                    >\n                        <b>Password</b>\n                    </Label>\n                </Col>\n                <Col md={10}>\n                    <Input\n                        id={'password'}\n                        type={'password'}\n                        name={'password'}\n                        value={props.password}\n                        onChange={props.onChangePassword}\n                    />\n                </Col>\n            </Row>\n            <Row form={true} className={'my-2 mr-2'}>\n                <Col md={2}>\n                    <Label\n                        for={'confirm-password'}\n                    >\n                        <b>Confirm Password</b>\n                    </Label>\n                </Col>\n                <Col md={10}>\n                    <Input\n                        id={'confirm-password'}\n                        type={'password'}\n                        name={'confirm-password'}\n                        value={props.confirmPassword}\n                        onChange={props.onChangeConfirmPassword}\n                        valid={props.password !== '' && props.password === props.confirmPassword}\n                        invalid={props.password !== props.confirmPassword}\n                    />\n                    {\n                        props.password !== props.confirmPassword ? <FormFeedback>ConfirmPassword and Password are not matching.</FormFeedback>:<div/>\n                    }\n                </Col>\n            </Row>\n        </Form>\n    );\n}","import React from 'react';\nimport {\n    Modal, ModalHeader, ModalBody, ModalFooter, Button\n} from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport {FiLogOut,AiFillNotification,FaBookmark,AiFillEdit,FaQuestionCircle,MdHistory,AiOutlineCode,IoMdStats,FiLogIn,FaUserCircle,MdRateReview} from 'react-icons/all';\nimport LoginForm from \"./LoginForm\";\nimport SignUpForm from \"./SignUpForm\";\nexport default class Sidebar extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            width: window.innerWidth,\n            height: window.innerHeight,\n            loginOpen: false,\n            signUpOpen: false,\n            email:'',\n            username:'',\n            password:'',\n            confirmPassword:'',\n            name:'',\n            emailUnique:true,\n            usernameUnique:true,\n            status: 200\n        }\n    }\n\n    toggleLogin = () => {\n        this.setState({\n            loginOpen: !this.state.loginOpen,\n            signUpOpen: false\n        })\n    };\n\n    toggleSignUp = () => {\n        this.setState({\n            loginOpen: false,\n            signUpOpen: !this.state.signUpOpen\n        })\n    };\n\n    onChangeUsername = (event) => {\n        this.setState({\n            username: event.target.value\n        });\n        fetch('/username',{\n            method:'POST',\n            headers:{\n                'Accept':'application/json',\n                'Content-Type':'application/json'\n            },\n            body: JSON.stringify({\n                \"username\":event.target.value\n            })\n        }).then( response => {\n            // console.log(response);\n            return response.json()\n        }).then((response) => {\n            // console.log(this.state.username);\n            this.setState({usernameUnique: response.length === 0});\n            console.log(response);\n            if(response.status === 500) {\n                console.log(\"Error while connecting to database please check your internet connection\");\n            }\n        }).catch( error => console.log(error.message));\n        event.preventDefault();\n    };\n\n    onChangePassword = (event) => {\n        this.setState({\n            password: event.target.value\n        });\n        event.preventDefault();\n    };\n\n    onChangeConfirmPassword = (event) => {\n        this.setState({\n            confirmPassword: event.target.value\n        });\n        event.preventDefault();\n    };\n    onChangeEmail = (event) => {\n        this.setState({\n            email:event.target.value\n        });\n        fetch('/email',{\n            method:'POST',\n            headers:{\n                'Accept':'application/json',\n                'Content-Type':'application/json'\n            },\n            body: JSON.stringify({\n                \"email\":event.target.value\n            })\n        }).then( response => {\n            // console.log(response);\n            return response.json()\n        }).then((response) => {\n            this.setState({emailUnique: response.length === 0});\n            console.log(response);\n            if(response.status === 500) {\n                console.log(\"Error while connecting to database please check your internet connection\");\n            }\n        }).catch( error => console.log(error.message));\n        event.preventDefault();\n    };\n\n    onChangeName = (event) => {\n        this.setState({\n            name:event.target.value\n        });\n        event.preventDefault();\n    };\n\n    updateWindowsDimension = () => {\n        this.setState({\n            width: window.innerWidth,\n            height: window.innerHeight\n        });\n    };\n\n    componentDidMount() {\n        this.updateWindowsDimension();\n        window.addEventListener('resize',this.updateWindowsDimension);\n    }\n\n    render() {\n        // console.log(this.props);\n        return(\n            <nav className={'sidebar border-dark border-right'} style={{backgroundColor: '#c1c1c1',minHeight:this.state.height-57,width: '13%',minWidth:200,position: 'fixed',float:'left'}}>\n                <div>\n                    <ul className=\"nav flex-column\">\n                        {\n                            this.props.user ?\n                                <li className=\"nav-item\">\n                                    <Link to={'/usr/user1'} className={'nav-link active text-dark'}>\n                                        <b>\n                                            <span className={'mb-1 col-form-label'}>\n                                                <FaUserCircle size={20}/>\n                                            </span>\n                                            {' '+this.props.user}\n                                        </b>\n                                    </Link>\n                                </li>\n                                :\n                                <li></li>\n                        }\n                        {\n                            this.props.user ?\n                            <li className=\"nav-item\">\n                                <Link to={'/notifications'} className={'nav-link active text-dark'}>\n                                    <b>\n                                        <span className={'mb-1 col-form-label'}>\n                                            <AiFillNotification size={20}/>\n                                        </span>\n                                        {' '}Notifications\n                                    </b>\n                                </Link>\n                            </li>\n                                :\n                                <li></li>\n                        }\n                        {\n                            this.props.user ?\n                            <li className=\"nav-item\">\n                                <Link to={'/saved'} className={'nav-link active text-dark'}>\n                                    <b>\n                                        <span className={'mb-1 col-form-label'}>\n                                            <FaBookmark size={20}/>\n                                        </span>\n                                        {' '}Saved\n                                    </b>\n                                </Link>\n                            </li>\n                                :\n                                <li></li>\n                        }\n                        {\n                            this.props.user ?\n                                <li className=\"nav-item\">\n                                    <Link to={'/review'} className={'nav-link active text-dark'}>\n                                        <b>\n                                        <span className={'mb-1 col-form-label'}>\n                                            <MdRateReview size={20}/>\n                                        </span>\n                                            {' '}Review\n                                        </b>\n                                    </Link>\n                                </li>\n                                :\n                                <li></li>\n                        }\n                        <li className=\"nav-item\">\n                            <Link to={'/queries'} className={'nav-link active text-dark'}>\n                                <b>\n                                    <span className={'mb-1 col-form-label'}>\n                                        <FaQuestionCircle size={20}/>\n                                    </span>\n                                    {' '}Queries\n                                </b>\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to={'/experiences'} className={'nav-link active text-dark'}>\n                                <b>\n                                    <span className={'mb-1 col-form-label'}>\n                                        <AiFillEdit size={20}/>\n                                    </span>\n                                    {' '}Experiences\n                                </b>\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to={'/practiceQuestions/1'} className={'nav-link active text-dark'}>\n                                <b>\n                                    <span className={'mb-1 col-form-label'}>\n                                        <AiOutlineCode size={20}/>\n                                    </span>\n                                    {' '} Practice\n                                </b>\n                            </Link>\n                        </li>\n                        <li className={'nav-item'}>\n                            <Link\n                                className={'nav-link active text-dark'}\n                                to={'/placement'}\n                            >\n                                <b>\n                                    <span className={'mb-1 col-form-label'}>\n                                        <IoMdStats size={20}/>\n                                    </span>\n                                    {' '}\n                                    Placements\n                                </b>\n                            </Link>\n                        </li>\n                        {\n                            !this.props.user ? <li className={'nav-item'}>\n                            <Button\n                                color={'white'}\n                                onMouseDown={(event) => {\n                                    this.toggleLogin();\n                                    event.preventDefault();\n                                }}\n                            >\n                                <b>\n                                    <span className={'mb-1 col-form-label'}>\n                                        <FiLogIn size={20}/>\n                                    </span>\n                                    {' '}\n                                    Login\n                                </b>\n                            </Button>\n                            <Modal\n                                isOpen={this.state.loginOpen}\n                                toggle={this.toggleLogin}\n                            >\n                                <ModalHeader toggle={this.toggleLogin}>Login</ModalHeader>\n                                <ModalBody>\n                                    <LoginForm\n                                        onChangeUsernameLogin={this.onChangeUsername}\n                                        onChangePasswordLogin={this.onChangePassword}\n                                        onChangeEmail={this.onChangeEmail}\n                                        username={this.state.username}\n                                        passsword={this.state.password}\n                                        email={this.state.email}\n                                        status={this.state.status}\n                                    />\n                                </ModalBody>\n                                <ModalFooter>\n                                    <Button\n                                        color={'link text-dark'}\n                                        style={{\n                                            textDecoration: 'none'\n                                        }}\n                                        onClick={(event) => {\n                                            this.toggleSignUp();\n                                            event.preventDefault();\n                                        }}\n                                    >\n                                        <b>Not a member? Sign Up</b>\n                                    </Button>\n                                    <Button\n                                        color={'success'}\n                                        onClick={(event) => {\n                                            const status = this.props.onClickLogin(event,this.state.email,this.state.username,this.state.password);\n                                            this.setState({status});\n                                        }}\n                                    >\n                                        Login\n                                    </Button>\n                                </ModalFooter>\n                            </Modal>\n                            <Modal\n                                isOpen={this.state.signUpOpen}\n                                toggle={this.toggleSignUp}\n                            >\n                                <ModalHeader toggle={this.toggleSignUp}>Sign Up</ModalHeader>\n                                <ModalBody>\n                                    <SignUpForm\n                                        onChangeEmail={this.onChangeEmail}\n                                        onChangeUsername={this.onChangeUsername}\n                                        onChangeName={this.onChangeName}\n                                        onChangePassword={this.onChangePassword}\n                                        onChangeConfirmPassword={this.onChangeConfirmPassword}\n                                        email={this.state.email}\n                                        username={this.state.username}\n                                        name={this.state.name}\n                                        password={this.state.password}\n                                        confirmPassword={this.state.confirmPassword}\n                                        emailUnique={this.state.emailUnique}\n                                        usernameUnique={this.state.usernameUnique}\n                                    />\n                                </ModalBody>\n                                <ModalFooter>\n                                    <Button\n                                        color={'link text-dark'}\n                                        style={{\n                                            textDecoration: 'none'\n                                        }}\n                                        onClick={(event) => {\n                                            this.toggleLogin();\n                                            event.preventDefault();\n                                        }}\n                                    >\n                                        <b>Already a member? Login</b>\n                                    </Button>\n                                    <Button\n                                        color={'success'}\n                                        onClick={\n                                            (event) => {\n                                                event.preventDefault();\n                                                if(this.state.emailUnique && this.state.usernameUnique && this.state.password === this.state.confirmPassword && !this.state.username.includes(' ')) {\n                                                    fetch('/registerUser', {\n                                                        method: 'POST',\n                                                        headers: {\n                                                            'Accept': 'application/json',\n                                                            'Content-Type': 'application/json'\n                                                        },\n                                                        body: JSON.stringify({\n                                                            _id: this.state.username,\n                                                            email: this.state.email,\n                                                            name: this.state.name,\n                                                            password: this.state.password\n                                                        })\n                                                    }).then(response => {\n                                                        // console.log(response);\n                                                        return response.json()\n                                                    }).then((response) => {\n                                                        const experience = response[0];\n                                                        this.setState({\n                                                            experience,\n                                                            loading: false,\n                                                            show: experience.accepted !== false\n                                                        });\n                                                        console.log(experience);\n                                                        if (response.status === 500) {\n                                                            console.log(\"Error while connecting to database please check your internet connection\");\n                                                        }\n                                                    }).catch(error => console.log(error.message));\n                                                    this.props.onClickLogin(event,this.state.email,this.state.username,this.state.password);\n                                                }\n                                            }\n                                        }\n                                    >\n                                        Sign Up\n                                    </Button>\n                                </ModalFooter>\n                            </Modal>\n                        </li>\n                            :\n                            <li className={'nav-item'}>\n                                <Button\n                                    color={'white'}\n                                    onMouseDown={(event) => {\n                                        this.setState({\n                                            loginOpen: false,\n                                            signUpOpen: false\n                                        });\n                                        this.props.onClickLogOut(event);\n                                    }}\n                                >\n                                    <b>\n                                    <span className={'mb-1 col-form-label'}>\n                                        <FiLogOut size={20}/>\n                                    </span>\n                                        {' '}\n                                        Log Out\n                                    </b>\n                                </Button>\n                            </li>\n                        }\n                    </ul>\n                </div>\n            </nav>\n        )\n    }\n};","import React from \"react\";\nimport AceEditor from \"react-ace\";\nimport {Input, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem,Button} from 'reactstrap';\nimport {MdRestore} from \"react-icons/all\";\nimport \"ace-builds/src-noconflict/mode-java\";\nimport \"ace-builds/src-noconflict/mode-c_cpp\";\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/mode-kotlin\";\nimport \"ace-builds/src-noconflict/theme-github\";\nimport \"ace-builds/src-noconflict/theme-twilight\";\nimport \"ace-builds/src-noconflict/theme-solarized_dark\";\nimport \"ace-builds/src-noconflict/theme-terminal\";\nimport \"ace-builds/src-noconflict/theme-xcode\";\n// let he = new HackerEarth('a249b98ec56b0a7e52d802c5e4fe57dffa7b3d0f',1);\nexport default class CodeEditor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '',\n            mode: 'c_cpp',\n            theme: 'twilight',\n            fontSize: 16,\n            height: '400px',\n            width: '900px',\n            language: 'C',\n            loaded: false,\n            description: <div/>,\n            title: <div/>\n        };\n        // console.log(this.props);\n    }\n    mode_map = {\n        'C' : 'c_cpp',\n        'CPP': 'c_cpp',\n        'JAVA': 'java',\n        'PYTHON': 'python',\n        'KOTLIN': 'kotlin'\n    };\n\n    onChange = (value) => {\n        this.setState({value})\n    };\n\n    componentDidMount() {\n        if(!this.state.loaded) {\n            const id = this.props.match.params.id;\n            fetch('/practice/'+id)\n                .then(res => res.json())\n                .then(res => {\n                    console.log(res);\n                    const divElement = <div dangerouslySetInnerHTML={{__html:\n                        res.description}}/>;\n                    const titleElement = <div dangerouslySetInnerHTML={{__html:\n                        res.title}}/>;\n                       this.setState({\n                           description: divElement,\n                           title: titleElement,\n                           loaded: true\n                       })\n                })\n                .catch(err => {\n                    console.log(err);\n                });\n        }\n    }\n\n    render() {\n        return(\n            <div className={'container'}>\n                <div className={'ml-3 mt-2'}>\n                    <div className={'mb-5'}>\n                        {/*<h3>Breaking the Records</h3>*/}\n                        {/*<span>*/}\n                        {/*    Maria plays college basketball and wants to go pro.*/}\n                        {/*    Each season she maintains a record of her play.*/}\n                        {/*    She tabulates the number of times she breaks her season record for most points and least points in a game.*/}\n                        {/*    Points scored in the first game establish her record for the season,*/}\n                        {/*    and she begins counting from there.*/}\n                        {/*</span>*/}\n                        {/*<br/><br/>*/}\n                        {/*<h4>*/}\n                        {/*    Input Format*/}\n                        {/*</h4>*/}\n                        {/*<span>*/}\n                        {/*    The first line contains an integer <b>n</b>, the number of games.*/}\n                        {/*    <br/>*/}\n                        {/*    The second line contains <b>n</b> space-separated integers describing the respective values of <b>score[0],score[1],...,score[n-1]</b>.*/}\n                        {/*</span>*/}\n                        {/*<br/><br/>*/}\n                        {/*<h4>*/}\n                        {/*    Constraints*/}\n                        {/*</h4>*/}\n                        {/*<span>*/}\n                        {/*    <ul>*/}\n                        {/*        <li>*/}\n                        {/*            <b>{'1 <= n <= 1000'}</b>*/}\n                        {/*        </li>*/}\n                        {/*        <li>*/}\n                        {/*            <b>{'0 <= score[i] <= 10^18'}</b>*/}\n                        {/*        </li>*/}\n                        {/*    </ul>*/}\n                        {/*</span>*/}\n                        {/*<br/>*/}\n                        {/*<h4>*/}\n                        {/*    Output Format*/}\n                        {/*</h4>*/}\n                        {/*<span>*/}\n                        {/*    Print two space-separated integers describing the respective numbers of times*/}\n                        {/*    her best (highest) score increased and her worst (lowest) score decreased.*/}\n                        {/*</span>*/}\n                        {/*<br/><br/>*/}\n                        {/*<h4>*/}\n                        {/*    Sample Input #1*/}\n                        {/*</h4>*/}\n                        {/*<div className={'border border-dark rounded pt-2 pl-3 pb-2'} style={{width: this.state.width,backgroundColor:'#c1c1c1'}}>*/}\n                        {/*    9 <br/>*/}\n                        {/*    10 5 20 20 4 5 2 25 1*/}\n                        {/*</div>*/}\n                        {/*<br/><br/>*/}\n                        {/*<h4>*/}\n                        {/*    Sample Output #1*/}\n                        {/*</h4>*/}\n                        {/*<div className={'border border-dark rounded pt-2 pl-3 pb-2'} style={{width: this.state.width,backgroundColor:'#c1c1c1'}}>*/}\n                        {/*    2 4*/}\n                        {/*</div>*/}\n                        <h3>\n                            {this.state.title}\n                        </h3>\n                        {this.state.description}\n                    </div>\n                    <div className={'border mb-5'}> </div>\n                    <div className={'rounded-top border-bottom-0'} style={{width:this.state.width,minHeight: '30px',backgroundColor: '#c1c1c1'}}>\n                        <div className={'ml-2 col-form-label row'}>\n                            <Button\n                                color={'white'}\n                                className={'ml-auto mr-2'}\n                                onMouseDown = {(e) => {\n                                    e.preventDefault();\n                                    this.setState({\n                                        value: ''\n                                    })\n                                }}\n                                title={'Reset Code'}\n                            >\n                                <MdRestore size = '23px'/>\n                            </Button>\n                            <UncontrolledDropdown className={'mr-2'}>\n                                <DropdownToggle\n                                    caret={true}\n                                    className={'bg-white text-dark'}\n                                    onMouseDown={(e)=>e.preventDefault()}\n                                >\n                                    Theme\n                                </DropdownToggle>\n                                <DropdownMenu style={{fontStyle:'normal'}}>\n                                    <DropdownItem\n                                        active={'github' === this.state.theme}\n                                        onMouseDown={(event) => {\n                                            event.preventDefault();\n                                            this.setState({\n                                                theme: 'github'\n                                            })\n                                        }}\n                                    >\n                                        Github\n                                    </DropdownItem>\n                                    <DropdownItem\n                                        active={'twilight' === this.state.theme}\n                                        onMouseDown={(event) => {\n                                            event.preventDefault();\n                                            this.setState({\n                                                theme: 'twilight'\n                                            })\n                                        }}\n                                    >\n                                        Twilight\n                                    </DropdownItem>\n                                    <DropdownItem\n                                        active={'terminal' === this.state.theme}\n                                        onMouseDown={(event) => {\n                                            event.preventDefault();\n                                            this.setState({\n                                                theme: 'terminal'\n                                            })\n                                        }}\n                                    >\n                                        Terminal\n                                    </DropdownItem>\n                                    <DropdownItem\n                                        active={'xcode' === this.state.theme}\n                                        onMouseDown={(event) => {\n                                            event.preventDefault();\n                                            this.setState({\n                                                theme: 'xcode'\n                                            })\n                                        }}\n                                    >\n                                        Xcode\n                                    </DropdownItem>\n                                </DropdownMenu>\n                            </UncontrolledDropdown>\n                            <Input\n                                type={'select'}\n                                name={'select'}\n                                id={'language'}\n                                className={'border-dark mr-4'}\n                                style={{width: '20%'}}\n                                title={'Select Language'}\n                                onChange = {(event) => {\n                                    const val = event.target.value;\n                                    this.setState({\n                                        language: val,\n                                        mode: this.mode_map[val]\n                                    })\n                                }}\n                            >\n                                <option value={'C'}>C</option>\n                                <option value={'CPP'}>C++</option>\n                                <option value={'JAVA'}>Java</option>\n                                <option value={'PYTHON'}>Python 2.7</option>\n                                <option value={'PYTHON'}>Python 3.0</option>\n                                <option value={'KOTLIN'}>Kotlin</option>\n                            </Input>\n                        </div>\n                    </div>\n                    <AceEditor\n                        mode={this.state.mode}\n                        theme={this.state.theme}\n                        onChange={this.onChange}\n                        name=\"code_editor\"\n                        value={this.state.value}\n                        editorProps={{ $blockScrolling: true }}\n                        height={this.state.height}\n                        width={this.state.width}\n                        showPrintMargin={false}\n                        fontSize={this.state.fontSize}\n                        focus={true}\n                    />\n                </div>\n                <Button\n                    className={'my-3 float-right'}\n                    style={{marginRight: '17.5%'}}\n                    color={'dark'}\n                    onMouseDown={(e) => {\n                        // alert(\"Thai gyu bc!\");\n                        e.preventDefault();\n                    }}\n                >\n                    Submit\n                </Button>\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport { Line, Pie } from \"react-chartjs-2\";\nimport {Input} from 'reactstrap';\nexport default class PlacementReport extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            options: {\n                responsive: true,\n                legend: {\n                    labels: {\n                        fontStyle: 'none',\n                        fontColor: 'black',\n                        maintainAspectRatio: true\n                    }\n                }\n            },\n            chartType: 'branch',\n        }\n    }\n\n    componentDidMount() {\n        console.log(this.branchChartData);\n    }\n\n    renderPieChart = (data,label) => {\n        return(\n            <Pie\n                type={'pie'}\n                data={this.renderChart(data, label)}\n                options={this.props.options}\n                width={200}\n                height={50}\n            />\n        )\n    };\n\n    renderLineChart = (data,label) =>\n        <Line\n            type={'line'}\n            data={this.renderChart(data, label)}\n            options={this.props.options}\n            width={200}\n            height={50}\n        />\n    ;\n\n    renderChart = (data,labels) => {\n        return {\n            labels: labels,\n            datasets: [{\n                label: '# of Students Placed',\n                data: data,\n                backgroundColor: [\n                    'rgba(54, 162, 235, 1)',\n                    'rgba(255, 99, 132, 1)',\n                    'rgba(255, 206, 86, 1)',\n                    'rgba(75, 192, 192, 1)',\n                    'rgba(153, 102, 255, 1)',\n                    'rgba(180, 159, 64, 1)',\n                    'rgba(230, 102, 255, 1)',\n                    'rgba(20, 102, 255, 1)',\n                ],\n                borderColor: [\n                    'rgba(255, 99, 132, 1)',\n                    'rgba(54, 162, 235, 1)',\n                    'rgba(255, 206, 86, 1)',\n                    'rgba(75, 192, 192, 1)',\n                    'rgba(153, 102, 255, 1)',\n                    'rgba(255, 159, 64, 1)',\n                    'rgba(153, 102, 255, 1)',\n                    'rgba(153, 102, 255, 1)',\n                ],\n                borderWidth: 1\n            }]\n        };\n    };\n\n    render() {\n        const { branchChartData,classChartData,yearChartData,branchLabels,classLabels,yearLabels } = this.props;\n        return (\n            <div\n                className=\"container\"\n            >\n                <h3 className={'text-center'}>\n                    College Placement Cell\n                </h3>\n                <br/>\n                <p>\n                    Nirma University provides full placement support to its students in the fields of Technology,\n                    Management, Law, Pharmacy and Life Sciences.\n                </p>\n                <p>\n                    Over the last decades, the University has emerged as one of the most favoured destinations for hiring fresh talent from the campuses.\n                    Its endeavours to provide industry compliant talent and emphasises on quality, discipline, self-learning, and ethics.\n                </p>\n                <p>\n                    The placement model at Nirma is a four-stage process,\n                    involving the Pre Placement activities, Career Guidance, Executing Placement and Post Placement reviews.\n                </p>\n                <p>\n                    In addition to providing placement support to the students,\n                    the University also facilitates training of students in the organisations during summer and winter vacations,\n                    project work for the students in the final year, continuous institute-industry interactions,\n                    alumni activities, participation in exhibitions, fairs, seminars and conferences,\n                    counselling of the students on job opportunities, facilitating industry visits and inviting distinguished speakers.\n                </p>\n                <div>\n                    <h3 className={'text-center'}>\n                        Placement Statistics\n                    </h3>\n                    <h6>\n                        Yearly Placement Graph\n                    </h6>\n                    {this.renderLineChart(yearChartData,yearLabels)}\n                    <h6>\n                        Placement Pie-chart\n                    </h6>\n                    <Input\n                        name={'select'}\n                        type={'select'}\n                        id={'statistics-type'}\n                        onChange = {(e) => {\n                            this.setState({\n                                chartType: e.target.value\n                            });\n                            console.log(this.branchChartData);\n                            e.preventDefault();\n                        }}\n                    >\n                        <option value={'branch'}>Branch Wise</option>\n                        <option value={'class'}>Class Wise</option>\n                    </Input>\n                    {this.state.chartType === 'branch' ? this.renderPieChart(branchChartData,branchLabels):<div></div>}\n                    {this.state.chartType === 'class' ? this.renderPieChart(classChartData,classLabels):<div></div>}\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport AnswerProfileCard from \"./AnswerProfleCard\";\nimport {Button, Input} from \"reactstrap\";\nimport {FaRegStar,FaTimesCircle,FaCheckCircle,FaThumbsUp,FaThumbsDown,FaRegThumbsDown,FaRegThumbsUp} from \"react-icons/all\";\n\nexport default class ExperiencePage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            experience: {},\n            id:this.props.match.params.id,\n            loading: true,\n            show: true,\n            title:\"\"\n        };\n        this.getExperiences();\n    }\n\n    TokenNumber= async ()=>{\n        const url = `https://powerful-depths-16046.herokuapp.com/token/`+this.state.author; // receiver id\n        await fetch(url).then(res=>res.json()).then(res=>{this.setState({receiverToken:res.token});}).catch(err=>alert(\"error connecting to database \"+err));\n    };\n\n    sendPushNotificationAccept = async () => {\n        await this.TokenNumber();\n        if(this.state.receiverToken!==\"\"){\n            const message = {\n                to: this.state.receiverToken,\n                sound: 'default',\n\n                body: this.state.title+\" has been accepted\",\n                data: { data: 'goes here' },\n                _displayInForeground: true,\n            };\n            const response = await fetch('https://exp.host/--/api/v2/push/send', {\n                method: 'POST',\n                headers: {\n                    Accept: 'application/json',\n                    'Accept-encoding': 'gzip, deflate',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(message),\n            }).catch(err=>console.log(err));\n        }\n    };\n\n    sendPushNotificationReject = async () => {\n        await this.TokenNumber();\n        if(this.state.receiverToken!==\"\"){\n            const message = {\n                to: this.state.receiverToken,\n                sound: 'default',\n                title: 'Regarding shared Interview Experience',\n                body: this.state.title+\" has been rejected\",\n                data: { data: 'goes here' },\n                _displayInForeground: true,\n            };\n            const response = await fetch('https://exp.host/--/api/v2/push/send', {\n                method: 'POST',\n                headers: {\n                    Accept: 'application/json',\n                    'Accept-encoding': 'gzip, deflate',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(message),\n            }).catch(err=>console.log(err));\n        }\n    };\n\n\n\n    getExperiences = () => {\n        const uri='/getExperience';\n        fetch(uri,{\n            method:'POST',\n            headers:{\n                'Accept':'application/json',\n                'Content-Type':'application/json'\n            },\n            body: JSON.stringify({\n                \"id\":this.state.id\n            })\n        }).then( response => {\n            // console.log(response);\n            return response.json()\n        }).then((response) => {\n            const experience = response[0];\n            this.setState({experience, loading: false, show: experience.accepted !== false,title:`${experience.company} Interview Experience | ${experience.jobprofile}`});\n            console.log(experience);\n            if(response.status === 500) {\n                console.log(\"Error while connecting to database please check your internet connection\");\n            }\n        }).catch( error => console.log(error.message));\n    };\n\n    componentDidMount() {\n        if(this.props.accepted !== undefined){\n            let exp = this.state.experience;\n            exp.accepted = this.props.accepted;\n            this.setState({\n                experience: exp\n            })\n        }\n    }\n\n    renderRound = (round) => {\n        return(\n            <div>\n                <h5>\n                    Round {round.id} : ({round.title})\n                </h5>\n                <p style={{fontSize:18}}>\n                    {round.details}\n                </p>\n            </div>\n        )\n    };\n\n    render() {\n        const {experience} = this.state;\n        if(!this.state.show){\n            return(\n              <h3>This experience has been rejected by the admin.</h3>\n            );\n        }\n        return (\n            this.state.loading ? <img src={'/loading.gif'} alt={'Loading..'} style={{position:'absolute',top:'50%',left:'50%'}}/>:\n            <div className={'container bg-white'}>\n                <div className={'ml-4 row'}>\n                    <h3 className={'text-center mb-3 mr-auto mt-3'}>\n                        {`${experience.company} Interview Experience | ${experience.jobprofile}`}\n                    </h3>\n                    <Button\n                        className={'text-dark mb-2'}\n                        color={'link'}\n                    >\n                        <FaRegStar size={20}/>\n                    </Button>\n                </div>\n                {\n                    experience.accepted ?\n                        <h6 className={'ml-4'}>\n                            <span className={'text-success'}> <FaThumbsUp/></span> {experience.likes} people found this helpful\n                        </h6>\n                        :\n                        <div/>\n                }\n                <div className={'ml-2 mb-3 border-top'}>\n                    <AnswerProfileCard\n                        src={'/pikachu.jpg'}\n                        name={'Rutvik Sutaria'}\n                        description={'8th semester CSE student'}\n                    />\n                </div>\n                <div className={'border-top'}>\n                    <div className={'my-3 ml-4'}>\n\n                        <h5>{`Job Type: ${experience.jobtype}`}</h5>\n                        {experience.stipend !== '' ?  <h5>{`Stipend: \\u20b9 ${experience.stipend} per month`}</h5>:``}\n                        {experience.ctc !== '' ?  <h5>{`CTC: \\u20b9 ${experience.ctc}`}</h5>:``}\n                        <h5>\n                            Received Offer: {experience.receivedOffer ? <span className={'col-form-label text-success'}><FaCheckCircle/></span> : <span className={'col-form-label text-danger'}><FaTimesCircle/></span>}\n                        </h5>\n                    </div>\n                    <div className={'ml-4 border-top'}>\n                        <div className={'mt-3'}>\n                            {experience.rounds !== undefined ? experience.rounds.map((round) => {\n                                return this.renderRound(round);\n                            }): <div />}\n                        </div>\n                    </div>\n                    {\n                        experience.accepted ?\n                            <h6 className={'border-top pt-2 pl-4'}>\n                                Was this experience helpful?{' '}\n                                <Button size={'sm'} color={'white'} className={'mb-1 text-success'}\n                                        onMouseDown={(e) => {\n                                            const exp = experience;\n                                            if(exp.helpful === 'yes') {\n                                                exp.helpful = 'none';\n                                            }\n                                            else{\n                                                exp.helpful = 'yes'\n                                            }\n                                            this.setState({\n                                                experience: exp\n                                            });\n                                            e.preventDefault();\n                                        }}\n                                >\n                                    {experience.helpful === 'yes' ? <FaThumbsUp/> : <FaRegThumbsUp/>}\n                                </Button>\n                                <Button size={'sm'} color={'white'} className={'mb-1 text-danger'}\n                                        onMouseDown={(e) => {\n                                            const exp = experience;\n                                            if(exp.helpful === 'no') {\n                                                exp.helpful = 'none';\n                                            }\n                                            else{\n                                                exp.helpful = 'no'\n                                            }\n                                            this.setState({\n                                                experience: exp\n                                            });\n                                            e.preventDefault();\n                                        }}\n                                >\n                                    {experience.helpful === 'no' ? <FaThumbsDown/> : <FaRegThumbsDown/>}\n                                </Button>\n                            </h6>\n                            :\n                            <div className={'border-top pt-2 pl-4'}>\n                                <Button\n                                    className={'mr-2 mb-2'}\n                                    color={'success'}\n                                    size={'sm'}\n                                    type={'Submit'}\n                                    onClick={(e) => {\n                                        this.sendPushNotificationAccept();\n                                        fetch('/updateExperience', {\n                                            method: 'POST',\n                                            headers: {\n                                                'Accept': 'application/json',\n                                                'Content-Type': 'application/json'\n                                            },\n                                            body: JSON.stringify({\n                                                id:this.props.match.params.id,\n                                                accepted: true\n                                            })\n                                        })\n                                            .then(resp => resp.json())\n                                            .then(resp => console.log(resp))\n                                            .then(err => console.log(err));\n                                            window.location.reload();\n                                    }}\n                                >\n                                    Accept\n                                </Button>\n                                <Button\n                                    className={'mb-2'}\n                                    color={'danger'}\n                                    size={'sm'}\n                                    onMouseDown={(e) => {\n                                        e.preventDefault();\n                                        const exp = experience;\n                                        exp.accepted = false;\n                                        this.setState({\n                                            experience: exp\n                                        });\n                                        this.sendPushNotificationReject();\n                                    }\n                                    }\n                                >\n                                    Reject\n                                </Button>\n                            </div>\n                    }\n                    {\n                        experience.accepted === false ? <div>\n                            <div className={'pt-2 pl-4'}>\n                                <Input\n                                    type={'textarea'}\n                                    name={'text'}\n                                    rows={5}\n                                    placeholder={'Reason for rejection...'}\n                                />\n                            </div>\n                            <div className={'pt-2 pl-4 float-right'}>\n                                <Button color={'dark'} size={'sm'}\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        fetch('/updateExperience', {\n                                            method: 'POST',\n                                            headers: {\n                                                'Accept': 'application/json',\n                                                'Content-Type': 'application/json'\n                                            },\n                                            body: JSON.stringify({\n                                                id:this.props.match.params.id,\n                                                accepted: experience.accepted\n                                            })\n                                        })\n                                            .then(resp => resp.json())\n                                            .then(resp => console.log(resp))\n                                            .then(err => console.log(err));\n                                        window.location.reload();\n                                    }}\n                                >\n                                    Submit\n                                </Button>\n                            </div>\n                        </div>\n                            :\n                            <div/>\n                    }\n                </div>\n            </div>\n        );\n    }\n\n};","import React from \"react\";\nimport {Col, Row,Button} from \"reactstrap\";\nimport {Link} from \"react-router-dom\";\nimport {FaStar,FaRegStar} from \"react-icons/all\";\nimport AnswerProfileCard from \"./AnswerProfleCard\";\n\nexport default class QueryCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            saved: false\n        }\n    }\n\n    onSaveClick = (e) => {\n        e.preventDefault();\n        this.setState({\n            saved: !this.state.saved\n        });\n    };\n\n    render() {\n        const {id,question} = this.props;\n        return (\n            <div style={{backgroundColor:'#e3e4e6'}} className={'border border-dark rounded mr-5 mt-2'}>\n                <Row>\n                    <Col md={11}>\n                        <Link to={'/queries/'+id} className={'text-dark btn-link'}>\n                            <div className={'ml-3'}>\n                                <h5 className={'m-3'}>\n                                    {question}\n                                </h5>\n                            </div>\n                        </Link>\n                    </Col>\n                    <Col md={1}>\n                        {\n                            !this.state.saved ? <Button color={'white mt-2'} title={'Save'} onMouseDown={this.onSaveClick}><FaRegStar/></Button>\n                                : <Button color={'white mt-2'} title={'Unsave'} onMouseDown={this.onSaveClick}><FaStar/></Button>\n                        }\n                    </Col>\n                </Row>\n                <div className={'ml-3 mb-3'}>\n                    <AnswerProfileCard\n                        src={'/pikachu.jpg'}\n                        name={'Rutvik Sutaria'}\n                        description={'8th semester CSE student'}\n                    />\n                    <div className={'ml-3 mt-1'}>\n                        <div style={{height:75,overflow:'hidden'}}>\n                            I attended Amazon interview recently. You need to be good at basics of data structures,\n                            algorithms and object oriented design.\n                            One cannot read object oriented concepts and become a master in it.\n                            Try implementing it in whatever the project you're doing.\n                            That way it's easy to gain the intuition about the object oriented programming and design.\n                            I prepared for data structure questions from cracking the coding interview.\n                            You need to understand the basics of the important data structures and\n                            how they work and try implementing the basic version of those.\n                            This will help in understanding its applications...\n                        </div>\n                        {'...'}\n                        <Link to={'/queries/'+id+'/answer/'}>\n                            (more)\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport QueryCard from \"./QueryCard\";\n\nimport {Modal,ModalHeader,ModalFooter,ModalBody,Button,Input} from 'reactstrap';\nexport default class QueryPageComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isModalOpen: false,\n            queries: []\n        };\n        this.getQueries();\n    }\n\n    toggleModal = () => {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        })\n    };\n\n    getQueries = () => {\n        fetch('/queries')\n            .then(res => res.json())\n            .then(res => {\n                let queries = res;\n                this.setState({queries});\n                console.log(queries);\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    };\n\n    render() {\n        const {queries} = this.state;\n        return (\n            <div>\n                <div className={'border-bottom'}>\n                    <h5>\n                        <Button\n                            size={'md'}\n                            color={'link'}\n                            onMouseDown={event => {\n                                event.preventDefault();\n                                this.setState({\n                                    isModalOpen: true\n                                });\n                            }}\n                        >\n                            Ask your Question\n                        </Button>\n                    </h5>\n                </div>\n                <Modal\n                    isOpen={this.state.isModalOpen}\n                    toggle={this.toggleModal}\n                >\n                    <ModalHeader toggle={this.toggleModal}>\n                        Ask your question\n                    </ModalHeader>\n                    <ModalBody>\n                        <Input\n                            type={'textarea'}\n                            name={'text'}\n                            rows={5}\n                            placeholder={'Start your question with \\'How\\', \\'What\\', \\'Why\\'... '}\n                        />\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button\n                            color={'dark'}\n                        >\n                            Submit\n                        </Button>\n                    </ModalFooter>\n                </Modal>\n                {/*<QueryCard />*/}\n                {/*<QueryCard />*/}\n                {/*<QueryCard />*/}\n                {/*<QueryCard />*/}\n                {\n                    queries.length !== 0 ? queries.map((query,index) => {\n                        return <QueryCard key={index} id={query._id} question={query.question} />\n                    }):\n                        <img src={'loading.gif'} alt={'Loading...'} style={{position:'absolute',top:'50%',left:'50%'}} />\n                }\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport {Link} from 'react-router-dom';\nimport {Button} from 'reactstrap';\nexport default class NotificationCard extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            experience: null,\n            loaded:false\n        };\n        this.getExperiences();\n    }\n    getExperiences = () => {\n        const uri='/getExperience';\n        fetch(uri,{\n            method:'POST',\n            headers:{\n                'Accept':'application/json',\n                'Content-Type':'application/json'\n            },\n            body: JSON.stringify({\n                \"id\":this.props.e_id\n            })\n        }).then( response => {\n            // console.log(response);\n            return response.json()\n        }).then((response) => {\n            const experience = response[0];\n            this.setState({experience,loaded:true});\n            if(response.status === 500) {\n                console.log(\"Error while connecting to database please check your internet connection\");\n            }\n        }).catch( error => console.log(error.message));\n    };\n\n\n    render() {\n        const {experience} = this.state;\n        return(\n            <div style={{backgroundColor:'#e3e4e6',minHeight:100,width:'98%'}} className={'border-dark rounded p-3 m-3'}>\n                {!this.state.loaded ? <div/> :\n                    <div>\n                        <h4>\n                            Regarding your submission:{' '}\n                            <Link to={'/experiences/'+this.props.e_id} className={'text-info'}>\n                                {experience.company} Experience for {experience.jobprofile}\n                            </Link>\n                        </h4>\n                        <div className={'mt-2'}>\n                            <b>\n                                Message from {' '}\n                                <Link to={'/usr/'+this.props.sender} className={'text-secondary'}>\n                                    {this.props.sender}\n                                </Link>\n                            </b>\n                            <br/>\n                            sent at {this.props.date}\n                            <h6 className={'mt-4'}>\n                                <p>\n                                    {this.props.message}\n                                </p>\n                            </h6>\n                            <div>\n                                <Button color={'link'} className={'text-dark'} size={'sm'}>\n                                    <h6>Delete</h6>\n                                </Button>\n                                <Button color={'link'} className={'text-dark'} size={'sm'}>\n                                    <h6>Reply</h6>\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                }\n            </div>\n        );\n    }\n\n}","import React from \"react\";\nimport NotificationCard from \"./NotificationCard\";\nexport default class NotificationComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            messages:[],\n            loading: true\n        };\n        this.getNotifications();\n    }\n\n    getNotifications = () => {\n        fetch('/getNotifications',{\n            method:'POST',\n            headers:{\n                'Accept':'application/json',\n                'Content-Type':'application/json'\n            },\n            body: JSON.stringify({\n                \"user\":this.props.user\n            })\n        }).then( res => res.json() )\n            .then((response) => {\n            const messages = response[0].notification;\n            console.log(messages);\n            if(this.state.loading) this.setState({messages,loading:false});\n        }).catch( error => console.log(error.message));\n    };\n\n    render() {\n        return(\n            <div>\n                {/*<NotificationCard />*/}\n                {/*<NotificationCard />*/}\n                {/*<NotificationCard />*/}\n                {/*<NotificationCard />*/}\n                {/*<NotificationCard />*/}\n                {this.state.loading? <img src={'/loading.gif'} alt={'Loading..'} style={{position:'absolute',top:'50%',left:'50%'}}/>:\n                    this.state.messages.map(message => <NotificationCard key={message.E_id} message={message.message} date={message.date} e_id={message.E_id} sender={message.sender}/>)}\n            </div>\n        );\n    }\n\n}","import React from \"react\";\n\nexport default class SearchPage extends React.Component {\n    render() {\n        console.log(this.props);\n        const {term} = this.props.match.params;\n        return <div>{term}</div>;\n    }\n}","import React from 'react';\nimport ExperienceCard from \"./ExperienceCard\";\nimport QueryCard from \"./QueryCard\";\nexport default class SavedPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            experience: {\n                companyName: 'Amazon',\n                author: 'Rutvik Sutaria',\n                jobType: '6 month Internship + FTE',\n                jobProfile: 'Software Development Engineer',\n                n_rounds: 3,\n                ctc: '28 Lakhs',\n                stipend: '60k',\n                receivedOffer: true,\n                date: '04/02/2020',\n                saved: false,\n                helpful: 56,\n                accepted: 'yes'\n            }\n        }\n    }\n\n    onSaveClick = (e) => {\n        e.preventDefault();\n        this.setState({\n            saved: !this.state.saved\n        });\n    };\n\n    render() {\n        return(\n            <div>\n                <ExperienceCard experience={this.state.experience} link={'/experience2'} accepted={false} onSaveClick={this.onSaveClick} />\n                <QueryCard />\n            </div>\n        );\n    }\n\n}","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {Col, Row, Button} from \"reactstrap\";\nimport {FaStar,FaRegStar} from \"react-icons/all\";\nexport default function PracticeCard(props) {\n    return(\n        <div style={{backgroundColor:'#e3e4e6',width:'98%'}} className={'p-3 border rounded border-dark m-2'}>\n            <Row>\n                <Col md={6}>\n                        <h4>\n                            <Link to={'/practice/'+props.id} className={'text-dark'}>\n                                {props.title}\n                            </Link>\n                        </h4>\n\n                    <b>\n                        <span className={'text-warning'}>{props.difficulty}</span>, Success Rate: {props.successRate}\n                    </b>\n                </Col>\n                <Col md={6} className={'col-form-label mt-1'}>\n                    <div className={'float-right mr-3'}>\n                        <Button\n                            color={'white'}\n                            onMouseDown={props.onSaveClick}\n                        >\n                            {\n                                !props.saved ? <FaRegStar/> : <FaStar/>\n                            }\n\n                        </Button>\n                        <Link to={'/practice/'+props.id} className={'btn border-dark rounded'} style={{textDecoration:'none'}}>\n                            Solve\n                        </Link>\n                    </div>\n                </Col>\n            </Row>\n        </div>\n    );\n}","import React from 'react';\r\nimport PracticeCard from \"./PracticeCard\";\r\nexport default class PracticeList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'mr-3'}>\r\n                {this.props.problems.map(problem => {\r\n                    const onSaveClick = (e) => {\r\n                        // const problems = this.state.problems.map((p) => {\r\n                        //     let p1 = p;\r\n                        //     p1.saved = p1.id === problem.id ? !p1.saved : p1.saved;\r\n                        //     return p1;\r\n                        // });\r\n                        // this.setState({ problems });\r\n                        e.preventDefault();\r\n                    };\r\n                    return <PracticeCard\r\n                        key={problem._id}\r\n                        title={problem.name}\r\n                        id={problem._id}\r\n                        difficulty={problem.difficulty}\r\n                        successRate={problem.accuracy}\r\n                        saved={problem.saved}\r\n                        link={problem.link}\r\n                        onSaveClick={onSaveClick}\r\n                    />\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React from 'react';\r\nimport Chart from 'chart.js';\r\nimport PracticeList from \"./PracticeList\";\r\nimport {Link} from 'react-router-dom';\r\nimport PracticeCard from \"./PracticeCard\";\r\nexport default class PracticePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            myChart: null,\r\n            problems:[],\r\n            loaded:false\r\n        };\r\n        this.getQuestion();\r\n    }\r\n\r\n    getQuestion = () => {\r\n        const page = this.props.match.params.pg;\r\n        console.log(page);\r\n        fetch('/getQuestions/'+page)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                let problems = res;\r\n                this.setState({problems,loaded:true});\r\n                console.log(problems);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    componentDidMount() {\r\n        const ctx = document.getElementById('myChart');\r\n        const myChart = new Chart(ctx, {\r\n            type: 'line',\r\n            data: {\r\n                labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\r\n                datasets: [{\r\n                    label: '# of Votes',\r\n                    data: [12, 19, 3, 5, 2, 3],\r\n                    borderColor: 'red',\r\n                    borderWidth: 1\r\n                }]\r\n            },\r\n            options: {\r\n                scales: {\r\n                    yAxes: [{\r\n                        ticks: {\r\n                            beginAtZero: true\r\n                        }\r\n                    }]\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className={'float-left border-right border-dark'} style={{width:'50%',minHeight:'100%',marginTop:'-7px'}}>\r\n                    <PracticeList problems={this.state.problems}/>\r\n                </div>\r\n                <div className={'float-left'} style={{width:'50%'}}>\r\n                    <div className=\"chart-container\" style={{position: 'relative', height:'25vh', width:'100%'}}>\r\n                        <canvas id=\"myChart\" className={'border-bottom border-dark'}/>\r\n                        <div>\r\n                            <div align={'center'}>\r\n                                <h5 style={{justifyContent:'center'}}>Coding Preparation for Companies</h5>\r\n                            </div>\r\n                            <div className={'ml-2'}>\r\n                                <div style={{width:'97%',backgroundColor:'#e3e4e6'}} className={'m-1 mb-2 p-2 border rounded border-dark'}>\r\n                                    <Link to={'/prepare/amazon'}>Amazon</Link>\r\n                                    <div>\r\n                                        Topics to prepare for Amazon: DP, Binary Search, Linked List\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{width:'97%',backgroundColor:'#e3e4e6'}} className={'m-1 mb-2 p-2 border rounded border-dark'}>\r\n                                    <Link to={'/prepare/amazon'}>Microsoft</Link>\r\n                                    <div>\r\n                                        Topics to prepare for Microsoft: DP, Binary Search, Linked List\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{width:'97%',backgroundColor:'#e3e4e6'}} className={'m-1 mb-2 p-2 border rounded border-dark'}>\r\n                                    <Link to={'/prepare/amazon'}>Samsung</Link>\r\n                                    <div>\r\n                                        Topics to prepare for Samsung: DP, Binary Search, Linked List\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{width:'97%',backgroundColor:'#e3e4e6'}} className={'m-1 mb-2 p-2 border rounded border-dark'}>\r\n                                    <Link to={'/prepare/amazon'}>Google</Link>\r\n                                    <div>\r\n                                        Topics to prepare for Google: DP, Binary Search, Linked List\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React from \"react\";\nimport {Form,FormGroup,Input} from 'reactstrap';\nexport default class LoginPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    render() {\n        return (\n            <div className={'text-center m-3'}>\n                <h5 className={'mb-3'}>\n                    Login to Interview Portal\n                </h5>\n                <Form>\n                    <FormGroup>\n                        <div align={'center'}>\n                            <Input\n                                type={'text'}\n                                name={'text'}\n                                id={'email'}\n                                style={{width:'30%'}}\n                            />\n                        </div>\n                    </FormGroup>\n                </Form>\n            </div>\n        );\n    }\n\n}","import React from 'react';\nimport ExperienceCard from \"./ExperienceCard\";\nexport default class ReviewPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            experiences: []\n        }\n        this.getReviewExperiences();\n    }\n\n    getReviewExperiences = () => {\n        fetch('/experiences')\n            .then(res => res.json())\n            .then(res => {\n                let experiences = res;\n                this.setState({experiences});\n                console.log(experiences);\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    onSaveClick = (e) => {\n        e.preventDefault();\n        this.setState({\n            saved: !this.state.saved\n        });\n    };\n\n    render() {\n        return (\n            <div>\n                {\n                    this.state.experiences.map(experience => {\n                            return(experience.accepted === null ? <ExperienceCard experience={experience} onSaveClick={this.onSaveClick}/>\n                                    : <div />\n                            )\n                        }\n                    )\n                }\n            </div>\n        );\n    }\n\n}","import React from 'react';\nimport {FaUserEdit} from \"react-icons/all\";\nimport {Button, Modal, ModalBody, ModalFooter, ModalHeader,Form,Label,Input} from 'reactstrap';\nimport {Link} from 'react-router-dom';\nexport default class UserPage extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            experiences: [\n                'Amazon Interview Experience For SDE-I By Rutvik Sutaria',\n                'Amazon Interview Experience For SDE-I By Rutvik Sutaria',\n                'Amazon Interview Experience For SDE-I By Rutvik Sutaria'\n            ],\n            queries: [\n                'What are some tips to crack the Amazon interview?',\n                'What are some tips to crack the Amazon interview?',\n                'What are some tips to crack the Amazon interview?'\n            ],\n            problems: [\n                'Printing the side view of the binary tree in O(1)',\n                'Printing the side view of the binary tree in O(1)',\n                'Printing the side view of the binary tree in O(1)'\n            ],\n            open: false,\n            username: 'Rutvik Sutaria',\n            description: '8th semester CSE student',\n            inputUsername: '',\n            inputDescription: ''\n        }\n    }\n\n\n    renderItems = (item,index) => {\n        const ret = index%2 === 0 ?\n            <div className={'bg-light col-form-label'} style={{height:50}}>\n                <a href={'/practice'} className={'text-dark'}><h6>{item}</h6></a>\n            </div>\n            :\n                <div className={'col-form-label'} style={{height:50}}>\n                    <a href={'/practice'} className={'text-dark'}><h6>{item}</h6></a>\n                </div>;\n        return(ret);\n    };\n\n    toggleModal = () => {\n        this.setState({\n            open: !this.state.open\n        })\n    };\n\n    render() {\n        return (\n            <div>\n                <div className={'row'}>\n                    <div className={'col-auto'}>\n                        <img src={'/pikachu.jpg'} alt={'Profile'} className={'border border-dark mr-2'} style={{width:128,height:128}}/>\n                    </div>\n                    <div className={'col-10'}>\n                        <h4>\n                            {this.state.username}\n                            <Button color={'white'} className={'float-right'} title={'Edit your profile'}\n                                onMouseDown={(e) => {\n                                    e.preventDefault();\n                                    this.toggleModal();\n                                }}\n                            >\n                                <FaUserEdit size={20}/>\n                            </Button>\n                        </h4>\n                        <h6>\n                            {this.state.description}\n                        </h6>\n                    </div>\n                </div>\n                <div className={'mt-3'}>\n                    <h3>\n                        Interview Experiences\n                    </h3>\n                    {\n                        this.state.experiences.map((item,index) => {\n                            return this.renderItems(item,index);\n                        })\n\n                    }\n                    <Link to={'/usr/user1/experiences'}>See All</Link>\n                </div>\n\n                <div className={'mt-3'}>\n                    <h3>\n                        Queries Asked\n                    </h3>\n                    {\n                        this.state.queries.map((item,index) => {\n                            return this.renderItems(item,index);\n                        })\n                    }\n                    <Link to={'/usr/user1/queries'}>See All</Link>\n                </div>\n\n                <div className={'mt-3'}>\n                    <h3>\n                        Problems Solved\n                    </h3>\n                    {\n                        this.state.problems.map((item,index) => {\n                            return this.renderItems(item,index);\n                        })\n                    }\n                </div>\n                <Link to={'/usr/user1/problems-solved'}>See All</Link>\n                <Modal\n                    isOpen={this.state.open}\n                    toggle={this.toggleModal}\n                >\n                    <ModalHeader toggle={this.toggleModal}>Edit Profile</ModalHeader>\n                    <ModalBody>\n                        <Form>\n                            <div className={'row'}>\n                                <div className={'col-md-2'}>\n                                    <Label className={'col-form-label'} for={'name'}>\n                                        <h6>Name</h6>\n                                    </Label>\n                                </div>\n                                <div className={'col ml-1'}>\n                                    <Input id={'name'} type={'text'} value={this.state.inputUsername} onChange={(e) => {\n                                        this.setState({\n                                            inputUsername: e.target.value\n                                        });\n                                    }}/>\n                                </div>\n                            </div>\n                            <div className={'row'}>\n                                <div className={'col-md-2'}>\n                                    <Label className={'col-form-label'} for={'description'}>\n                                        <h6>Description</h6>\n                                    </Label>\n                                </div>\n                                <div className={'col ml-1'}>\n                                    <Input id={'description'} value={this.state.inputDescription} type={'text'} onChange={(e) => {\n                                        this.setState({\n                                            inputDescription: e.target.value\n                                        });\n                                    }}/>\n                                </div>\n                            </div>\n                            <div className={'row'}>\n                                <div className={'col-md-2'}>\n                                    <Label className={'col-form-label'} for={'profile-pic'}>\n                                        <h6>Profile Picture</h6>\n                                    </Label>\n                                </div>\n                                <div className={'col ml-1'}>\n                                    <Input id={'profile-pic'} type={'file'}/>\n                                </div>\n                            </div>\n                        </Form>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color={'success'} onMouseDown={(e) => {\n                            const usr = this.state.inputUsername,des = this.state.inputDescription;\n                            this.setState({\n                                username: usr,\n                                description:des,\n                                inputUsername:'',\n                                inputDescription:''\n                            });\n                            this.toggleModal();\n                            e.preventDefault();\n                        }}>\n                            Submit\n                        </Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        );\n    }\n}","import React from 'react';\r\nimport Chart from \"chart.js\";\r\nimport PracticeList from \"./PracticeList\";\r\n\r\nexport default class Prepare extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const ctx = document.getElementById('myChart');\r\n        const myChart = new Chart(ctx, {\r\n            type: 'pie',\r\n            data: {\r\n                labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\r\n                datasets: [{\r\n                    label: '# of Votes',\r\n                    data: [12, 19, 3, 5, 2, 3],\r\n                    backgroundColor: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\r\n                    borderColor: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\r\n                    borderWidth: 1\r\n                }]\r\n            },\r\n            // options: {\r\n            //     scales: {\r\n            //         yAxes: [{\r\n            //             ticks: {\r\n            //                 beginAtZero: true\r\n            //             }\r\n            //         }]\r\n            //     }\r\n            // }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props);\r\n        return (\r\n            <div>\r\n                <h3 align={'center'} className={'border-bottom p-2'}>\r\n                   Amazon Interview  Preparation\r\n                </h3>\r\n                <div>\r\n                    <div className={'float-left '} style={{width:'50%'}}>\r\n                        <h5 align={'center'} className={'mb-3'}> Topics To prepare based on your coding history </h5>\r\n                        <div className={'p-2 rounded mb-2'} style={{backgroundColor:'#e3e4e6'}}>\r\n                            Dynamic Programming\r\n                        </div>\r\n                        <div className={'p-2 rounded mb-2'} style={{backgroundColor:'#e3e4e6'}}>\r\n                            Binary Search\r\n                        </div>\r\n                        <div className={'p-2 rounded mb-2'} style={{backgroundColor:'#e3e4e6'}}>\r\n                            Union And Find\r\n                        </div>\r\n                        <div className={'p-2 rounded mb-2'} style={{backgroundColor:'#e3e4e6'}}>\r\n                            Binary Tree\r\n                        </div>\r\n                        <div className={'p-2 rounded mb-2'} style={{backgroundColor:'#e3e4e6'}}>\r\n                            Linked List\r\n                        </div>\r\n                        <div className={'p-2 rounded mb-2'} style={{backgroundColor:'#e3e4e6'}}>\r\n                            Queue\r\n                        </div>\r\n                    </div>\r\n                    <div className={'float-left'} style={{width:'50%'}}>\r\n                        <h5 align={'center'}>\r\n                            Major Topics To Prepare For  {this.props.match.params.company}\r\n                        </h5>\r\n                        <canvas id={'myChart'} style={{position: 'relative', height:'50vh', width:'100%'}} />\r\n                    </div>\r\n                </div>\r\n                <div className={'mt-3'}>\r\n                    <h4 align={'center'}>Recommended Problems</h4>\r\n\r\n                    <PracticeList/>\r\n                    <PracticeList/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n","import React from \"react\";\nimport {Switch,Route} from 'react-router';\nimport ExperienceForm from \"./interview-form\";\nimport ExperienceList from \"./ExperienceComponent\";\nimport BlogList from \"./BlogsList\";\nimport CodeEditor from \"./CodeEditor\";\nimport PlacementReport from \"./PlacementReport\";\nimport ExperiencePage from \"./ExperiencePage\";\nimport QueryPageComponent from \"./QueryPageComponent\";\nimport NotificationComponent from \"./NotificationComponent\";\nimport SearchPage from \"./SearchPage\";\nimport SavedPage from \"./SavedPage\";\nimport PracticePage from \"./PracticePage\";\nimport LoginPage from \"./LoginPage\";\nimport ReviewPage from \"./ReviewPage\";\nimport UserPage from \"./UserPage\";\nimport Prepare from \"./Prepare\";\nexport default function Main(props) {\n    // console.log(props.user);\n    return(\n    <Switch>\n        <Route exact path={'/'} component={() => <ExperienceForm user={props.user}/>} />\n        <Route exact path={'/practice/:id'} component={CodeEditor} />\n        <Route exact path={'/practiceQuestions/:pg'} component={PracticePage} />\n        <Route exact path={'/prepare/:company'} component={Prepare} />\n        <Route exact path={'/queries'} component={QueryPageComponent}/>\n        <Route exact path={'/experiences'} component={ExperienceList} />\n        <Route exact path={'/experiences/:id'} component={ExperiencePage} />\n        <Route exact path={'/queries/:id'} component={BlogList} />\n        <Route exact path={'/notifications'} render={() => <NotificationComponent user={props.user}/>} />\n        <Route path={'/search::term'} component={SearchPage} />\n        <Route path={'/saved'} component={SavedPage} />\n        <Route path={'/login'} component={LoginPage} />\n        <Route path={'/review'} component={ReviewPage} />\n        <Route exact path={'/interview-experience-form'} component={() => <ExperienceForm user={props.user}/>} />\n        <Route exact path={'/usr/user1'} component={UserPage} />\n        <Route exact path={'/placement'}\n               component={\n                   () => <PlacementReport\n                       branchChartData={[170,120,30, 60, 40, 50, 10, 20]}\n                       classChartData={[20,50,100,200]}\n                       yearChartData={[120,160,180,200]}\n                       branchLabels = {['Computer Engineering', 'Information Technology', 'Electronics & Communication', 'Electrical Engineering', 'Mechanical Engineering', 'Chemical Engineering', 'Civil Engineering', 'Integration & Circuits']}\n                       classLabels = {['Class A', 'Class B', 'Class C', 'Class D']}\n                       yearLabels = {['2016','2017','2018','2019']}\n                       options= {{\n                           responsive: true,\n                           legend: {\n                               labels: {\n                                   display: false,\n                                   fontColor: 'black',\n                                   fontSize: 13,\n                               }\n                           }\n                       }}\n                   />\n               }\n        />\n    </Switch>\n    );\n}\n\n\n\n","import React from 'react';\nimport './App.css';\nimport ExperienceForm from \"./Components/interview-form\";\nimport NavbarComponent from \"./Components/NavbarComponent\";\nimport ExperienceList from \"./Components/ExperienceComponent\";\nimport BlogList from \"./Components/BlogsList\";\nimport Sidebar from \"./Components/SidebarComponent\";\nimport CodeEditor from \"./Components/CodeEditor\";\nimport Main from './Components/Main';\nimport {Collapse} from 'reactstrap';\nexport default class App extends React.Component{\n\n    constructor(props) {\n        super(props);\n        let user = localStorage.getItem('user');\n        if(typeof  user !== \"string\") user = null;\n        this.state = {\n            currentPage: <CodeEditor />,\n            user: user,\n            users: {\n                'user1' : 'password',\n                'user2' : 'password1'\n            },\n            isSidebarOpen: true,\n            navbarHeight: 0\n        }\n    }\n\n    onClickExperience = (event) => {\n        this.setState({\n            currentPage: <ExperienceList />\n        });\n        event.preventDefault();\n    };\n\n    onClickBlogs = (event) => {\n        this.setState({\n            currentPage: <BlogList/>\n        });\n        event.preventDefault();\n    };\n\n    onClickLogo = (event) => {\n        this.setState({\n            currentPage: <ExperienceForm />\n        });\n        event.preventDefault();\n    };\n\n    onClickLogin = (event,email,username,password) => {\n        // const users = this.state.users;\n        // if(users[username] !== undefined) {\n        //     if(password === users[username]) {\n        //         this.setState({\n        //             user: username\n        //         });\n        //         localStorage.setItem('user',username)\n        //     }\n        // }\n        fetch('/loginUser',{\n            method:'POST',\n            headers:{\n                'Accept':'application/json',\n                'Content-Type':'application/json'\n            },\n            body: JSON.stringify({\n                \"username\":username,\n                \"email\":email,\n                \"password\":password\n            })\n        }).then( response => {\n            return response.json()\n        }).then((response) => {\n            console.log(response);\n            if(response.length === 1){\n                this.setState({\n                    user:username\n                });\n                console.log(response);\n                localStorage.setItem(\"user\",username);\n            }\n            return response.status;\n        }).catch( error => console.log(error.message));\n    };\n\n    onClickLogOut = (event) => {\n        this.setState({\n            user: null\n        });\n        localStorage.removeItem('user');\n        event.preventDefault();\n    };\n\n\n    onCLickPractice = (event) => {\n        this.setState({\n            currentPage: <CodeEditor />\n        });\n        event.preventDefault();\n    };\n\n    onSidebarToggleClick = (e) => {\n        this.setState({\n              isSidebarOpen: !this.state.isSidebarOpen\n        });\n        e.preventDefault();\n    };\n\n    updateNavbarHeight = () => {\n        const height = document.getElementById('top-navbar').offsetHeight;\n        this.setState({\n            navbarHeight: height\n        })\n    };\n\n    componentDidMount() {\n        this.updateNavbarHeight();\n        window.addEventListener('resize',this.updateNavbarHeight);\n    }\n\n    render() {\n        return(\n            // <div className={'bg-light'}>\n            //     <NavbarComponent\n            //         onClickExperience={this.onClickExperience}\n            //         onClickBlogs = {this.onClickBlogs}\n            //         onClickLogo = {this.onClickLogo}\n            //\n            //         onCLickPractice = {this.onCLickPractice}\n            //         user = {this.state.user}\n            //     />\n            //     <div style={{marginTop:57,minWidth:100}}>\n            //             <Sidebar/>\n            //         <div className={'container'} style={{float:'left',marginLeft:200}}>\n            //             <Main/>\n            //         </div>\n            //     </div>\n            // </div>\n            <div>\n                <NavbarComponent onSidebarToggleClick = {this.onSidebarToggleClick}/>\n                {\n                    this.state.isSidebarOpen\n                    ? <div style={{marginTop:this.state.navbarHeight}}>\n                            <div>\n                                <Collapse isOpen={this.state.isSidebarOpen} navbar>\n                                    <Sidebar user={this.state.user} onClickLogin = {this.onClickLogin} onClickLogOut = {this.onClickLogOut}/>\n                                </Collapse>\n                            </div>\n                            <div style={ {marginLeft:200}} className={'pt-2 pl-3'}>\n                                <Main user={this.state.user}/>\n                            </div>\n                        </div>\n                    :\n                        <div className={'container pt-2'} style={{marginTop:this.state.navbarHeight}}>\n                            <Main user={this.state.user}/>\n                        </div>\n                }\n            </div>\n\n        );\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}