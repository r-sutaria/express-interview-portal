{"version":3,"sources":["Images/pikachu.jpg","Components/RoundCard.js","Components/interview-form.js","Components/NavbarComponent.js","Components/ExperienceCard.js","Components/ExperienceComponent.js","Constants/StyleMap.js","Components/AnswerProfleCard.js","Components/AnswerBox.js","Components/AnswerCard.js","Components/BlogsList.js","Components/LoginForm.js","Components/SignUpForm.js","Components/SidebarComponent.js","Components/CodeEditor.js","Components/PlacementReport.js","Components/ExperiencePage.js","Components/QueryCard.js","Components/QueryPageComponent.js","Components/NotificationCard.js","Components/NotificationComponent.js","Components/SearchPage.js","Components/SavedPage.js","Components/PracticeCard.js","Components/PracticePage.js","Components/LoginPage.js","Components/ReviewPage.js","Components/UserPage.js","Components/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","RoundCard","props","id","onClick","onChangeTitle","onChangeDetails","round","FormGroup","className","Row","Col","md","Button","color","event","form","lg","Label","for","Input","type","name","value","title","onChange","xs","rows","details","ExperienceForm","getDate","today","Date","dd","String","padStart","mm","getMonth","yyyy","getFullYear","saveExperience","data","state","fetch","method","headers","body","JSON","stringify","company","branch","jobtype","jobprofile","ctc","stipend","rounds","author","receivedOffer","then","response","console","log","json","status","catch","error","message","addRound","index","length","list","slice","concat","toString","experience","setState","preventDefault","removeCard","modifiedList","filter","item","map","target","renderRound","internship","employment","accepted","bind","Form","this","check","e","min","jobProfile","CustomInput","key","onMouseDown","window","location","href","React","Component","NavbarComponent","toggleLogin","loginOpen","signUpOpen","toggleSignUp","onChangeUsernameLogin","username","onChangePasswordLogin","password","isOpen","Navbar","expand","dark","fixed","NavbarBrand","style","minWidth","onSidebarToggleClick","marginLeft","size","to","textDecoration","Nav","navbar","NavItem","InputGroup","placeholder","InputGroupAddon","addonType","ExperienceCard","_id","backgroundColor","saved","onSaveClick","date","likes","ExperienceList","getExperiences","res","experiences","loading","err","src","alt","position","top","left","width","link","styleMap","fontSize","float","AnswerProfileCard","Media","padding","object","height","heading","description","AnswerBox","updateWindowsDimension","innerWidth","innerHeight","buttons","labels","renderLinkButton","urlInput","showURLInput","onURLChange","styles","urlValue","onKeyDown","onLinkInputKeyDown","confirmLink","promptForLink","active","isLinkActive","removeLink","isActive","decorator","CompositeDecorator","strategy","findLinkEntities","component","Link","url","editorState","EditorState","createEmpty","editorContent","editor","innerHTML","_promptForLink","_confirmLink","_onLinkInputKeyDown","_removeLink","command","newState","RichUtils","handleKeyCommand","getCurrentInlineStyle","has","getCurrentBlockType","label","toggleInlineStyle","focus","addEventListener","getSelection","isCollapsed","contentState","getCurrentContent","startKey","getStartKey","startOffset","getStartOffset","linkKey","getBlockForKey","getEntityAt","getEntity","getData","contentStateWithEntity","createEntity","entityKey","getLastCreatedEntityKey","newEditorState","set","currentContent","toggleLink","which","selection","button","renderButton","toggleBlockType","isBlockActive","minHeight","Draft","customStyleMap","ref","onSubmit","contentBlock","callback","findEntityRanges","character","getType","children","root","fontFamily","marginBottom","urlInputContainer","marginRight","border","cursor","marginTop","textAlign","AnswerCard","ans","answer","helpful","onClickHelpful","onClickNotHelpful","BlogList","fetchReq","uri","a","async","currentAnswer","newAnswers","answers","divElement","dangerouslySetInnerHTML","__html","isOptionsOpen","query","getQuery","match","params","Card","question","LoginForm","FormFeedback","invalid","SignUpForm","email","onChangeEmail","valid","emailUnique","onChangeUsername","usernameUnique","includes","onChangeName","onChangePassword","confirmPassword","onChangeConfirmPassword","Sidebar","user","onClickLogOut","Modal","toggle","ModalHeader","ModalBody","passsword","ModalFooter","onClickLogin","show","CodeEditor","mode_map","mode","theme","language","UncontrolledDropdown","DropdownToggle","caret","DropdownMenu","fontStyle","DropdownItem","val","editorProps","$blockScrolling","showPrintMargin","PlacementReport","renderPieChart","renderChart","options","renderLineChart","datasets","borderColor","borderWidth","responsive","legend","fontColor","maintainAspectRatio","chartType","branchChartData","classChartData","yearChartData","branchLabels","classLabels","yearLabels","ExperiencePage","undefined","exp","resp","reload","QueryCard","overflow","QueryPageComponent","toggleModal","isModalOpen","getQueries","queries","NotificationCard","NotificationComponent","SearchPage","term","SavedPage","companyName","jobType","n_rounds","PracticeCard","difficulty","successRate","PracticePage","problems","problem","p","p1","LoginPage","align","ReviewPage","getReviewExperiences","UserPage","renderItems","open","inputUsername","inputDescription","usr","des","Main","exact","path","display","App","onClickExperience","currentPage","onClickBlogs","onClickLogo","localStorage","setItem","removeItem","onCLickPractice","isSidebarOpen","updateNavbarHeight","document","getElementById","offsetHeight","navbarHeight","getItem","users","Collapse","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","URL","process","origin","contentType","get","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7520adcb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pikachu.00dd440a.jpg\";","import React from 'react';\nimport {Button, FormGroup, Input, Label,Row,Col} from 'reactstrap';\nimport {FaTrashAlt} from \"react-icons/fa\";\nimport './RoundCard.css';\nexport default function RoundCard(props) {\n    const {id,onClick,onChangeTitle,onChangeDetails,round} = props;\n    return(\n        <FormGroup className={'border border-dark p-2 rounded'}>\n            <Row>\n                <Col md={11}>\n                    <h3 className={'text-center'}>Round {id+1}</h3>\n                </Col>\n                <Col >\n                    <Button\n                        className={'btn-sm float-right m-1'}\n                        color={'danger'}\n                        onClick={(event) => {\n                            onClick(event,round);\n                        }}\n                    >\n                        <FaTrashAlt/>\n                    </Button>\n                </Col>\n            </Row>\n            <Row form={true} className={'my-3 mr-2'}>\n                <Col lg={'auto'} className={'col-form-label text-center'}>\n                    <Label\n                        for={'title'+id}\n                        className={'mx-3'}\n                    >\n                        <h5><b>Round Title</b></h5>\n                    </Label>\n                </Col>\n                <Col>\n                    <Input\n                        id={'title'+id}\n                        type={'text'}\n                        name={'test'}\n                        value={round.title}\n                        onChange={(event) => {\n                            onChangeTitle(event,round)\n                        }}\n                    />\n                </Col>\n            </Row>\n            <Row form={true} className={'my-2 mr-2'}>\n                <Col xs={'auto'}>\n                    <Label\n                        for={'details'+id}\n                        lg={'auto'} className={'col-form-label text-center'}\n                    >\n                        <h5><b>Round Details</b></h5>\n                    </Label>\n                </Col>\n                <Col md={12}>\n                    <Input\n                        id={'details'+id}\n                        type={'textarea'}\n                        name={'text'}\n                        rows={5}\n                        value={round.details}\n                        onChange={(event) => {\n                            onChangeDetails(event,round)\n                        }}\n                    />\n                </Col>\n            </Row>\n        </FormGroup>\n    );\n};","import React from \"react\";\nimport {Form,FormGroup,Label,Input,Button,Row,Col,CustomInput} from 'reactstrap';\nimport RoundCard from \"./RoundCard\";\nexport default class ExperienceForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            author: 'Rutvik Sutaria',\n            company: 'Amazon',\n            branch: 'Computer Engineering',\n            rounds:[\n                {\n                    id: '1',\n                    title: '',\n                    details: ''\n                }\n            ],\n            internship:true,\n            employment: false,\n            receivedOffer: true,\n            stipend:'',\n            ctc:'',\n            jobprofile:'',\n            jobtype:'',\n            accepted: false\n        };\n        this.addRound = this.addRound.bind(this);\n        this.onChangeDetails = this.onChangeDetails.bind(this);\n        this.onChangeTitle = this.onChangeTitle.bind(this);\n        this.renderRound = this.renderRound.bind(this);\n        this.removeCard = this.removeCard.bind(this);\n    }\n\n    getDate = () => {\n        let today = new Date();\n        let dd = String(today.getDate()).padStart(2, '0');\n        let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n        let yyyy = today.getFullYear();\n\n        today = dd + '/' + mm + '/' + yyyy;\n        return(today);\n    };\n\n    saveExperience = () => {\n        const uri='/saveExperience';\n        const data = this.state;\n        fetch(uri,{\n            method:'POST',\n            headers:{\n                'Accept':'application/json',\n                'Content-Type':'application/json'\n            },\n            body: JSON.stringify({\n                \"company\":data.company,\n                \"branch\":data.branch,\n                \"jobtype\":data.jobtype,\n                \"jobprofile\": data.jobprofile,\n                \"ctc\":data.ctc,\n                \"stipend\":data.stipend,\n                \"rounds\":data.rounds,\n                \"author\":data.author,\n                \"likes\":0,\n                \"accepted\":null,\n                \"receivedOffer\":data.receivedOffer,\n                \"date\":this.getDate(),\n                \"reviewed\":false\n            })\n        }).then( response => {\n            console.log(response);\n            return response.json()\n        }).then((response) => {\n                console.log(response);\n                if(response.status === 500) {\n                    console.log(\"Error while connecting to database please check your internet connection\");\n                }\n        }).catch( error => console.log(error.message));\n    };\n\n    addRound = (event) => {\n        const index = this.state.rounds.length;\n        const list = this.state.rounds.slice().concat({\n            id: (index+1).toString(),\n            experience: ''\n        });\n        this.setState({\n            rounds: list\n        });\n        console.log(this.state);\n        event.preventDefault();\n    };\n\n    removeCard = (event,round) => {\n        event.preventDefault();\n        const list = this.state.rounds.filter((item) => item.id !== round.id)\n        const modifiedList = list.map((item,index) => {\n            return({\n                id: (index+1).toString(),\n                title: item.title,\n                details: item.details\n            })\n        });\n        this.setState({\n            rounds: modifiedList\n        })\n    };\n\n    onChangeTitle = (event,round) => {\n        const list = this.state.rounds.slice();\n        list[+round.id-1].title = event.target.value;\n        this.setState({\n            rounds: list\n        })\n    };\n\n    onChangeDetails = (event,round) => {\n        const list = this.state.rounds.slice();\n        list[+round.id-1].details = event.target.value;\n        this.setState({\n            rounds: list\n        })\n    };\n\n    renderRound = (round,index) => {\n        return(\n            <RoundCard\n                id={index}\n                onClick={this.removeCard}\n                onChangeTitle={this.onChangeTitle}\n                onChangeDetails={this.onChangeDetails}\n                round={round}\n            />);\n    };\n\n    render() {\n        return (\n            <div>\n                <h3 className={'text-center mt-2'}>Interview Experience</h3>\n                <Form className={'card-body'}>\n                    <Row>\n                        <Col md={2} className={'mr-1'}>\n                            <Label\n                                className=\"col-form-label\"\n                                for={'company'}\n                            >\n                                <h5><b>Company</b></h5>\n                            </Label>\n                        </Col>\n                        <Col md={'auto'}>\n                            <Input\n                                type='text'\n                                list={'companies'}\n                                name='select'\n                                id='company'\n                                onChange={\n                                    (event) => {\n                                        this.setState({\n                                            company: event.target.value\n                                        });\n                                    }\n                                }\n                            />\n                            <datalist id={'companies'}>\n                                <option value={'Amazon'}>Amazon</option>\n                                <option value={'Media.net'}>Media.net</option>\n                                <option value={'Microsoft'}>Microsoft</option>\n                                <option value={'Samsung'}>Samsung</option>\n                                <option value={'Google'}>Google</option>\n                            </datalist>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md={2} className={'mr-1 my-2'}>\n                            <Label\n                                className=\"col-form-label\"\n                                for={'branch'}\n                            >\n                                <h5><b>Branch</b></h5>\n                            </Label>\n                        </Col>\n                        <Col md={'auto'}>\n                            <Input\n                                type='select'\n                                list={'companies'}\n                                name='select'\n                                id='company'\n                                value={this.state.branch}\n                                onChange={\n                                    (event) => {\n                                        this.setState({\n                                            branch: event.target.value\n                                        });\n                                    }\n                                }\n                            >\n                                <option value={'Computer Engineering'}>Computer Engineering</option>\n                                <option value={'Information Technology'}>Information Technology</option>\n                                <option value={'Electronics & Communication'}>Electronics & Communication</option>\n                                <option value={'Electrical Engineering'}>Electrical Engineering</option>\n                                <option value={'Mechanical Engineering'}>Mechanical Engineering</option>\n                                <option value={'Civil Engineering'}>Civil Engineering</option>\n                                <option value={'Instrumentation & Control'}>Instrumentation & Control</option>\n                            </Input>\n                        </Col>\n                    </Row>\n                    <FormGroup>\n                        <Row>\n                            <Col md={2} className={'mr-2'}>\n                                <Label\n                                    className=\"col-form-label\"\n                                >\n                                    <h5><b>Job Type</b></h5>\n                                </Label>\n                            </Col>\n                            <Col md={'auto'} className={'ml-3'}>\n                                <Label check className={'col-form-label'}>\n                                    <Input\n                                        type = \"radio\"\n                                        name = \"job-type\"\n                                        onChange = {(e) => {\n                                            this.setState({\n                                                internship: e.target.value,\n                                                employment: false,\n                                                jobtype: '2-month Internship'\n                                            })\n                                        }}\n                                    />\n                                    <b>2-month Internship</b>\n                                </Label>\n                            </Col>\n                            <Col md={'auto'}  className={'ml-3'}>\n                                <Label check className={'col-form-label'}>\n                                    <Input\n                                        type=\"radio\"\n                                        name=\"job-type\"\n                                        onChange = {(e) => {\n                                            this.setState({\n                                                internship: e.target.value,\n                                                employment: false,\n                                                jobtype: '6-month Internship'\n                                            })\n                                        }}\n                                    />\n                                    <b> 6-month Internship </b>\n                                </Label>\n                            </Col>\n                            <Col md={'auto'}  className={'ml-3'}>\n                                <Label check className={'col-form-label'}>\n                                    <Input\n                                        type=\"radio\"\n                                        name=\"job-type\"\n                                        onChange = {(e) => {\n                                            this.setState({\n                                                internship: false,\n                                                employment: e.target.value,\n                                                jobtype: 'Full TIme Employment'\n                                            })\n                                        }}\n                                    />\n                                    <b> Full Time Employment </b>\n                                </Label>\n                            </Col>\n                            <Col md={'auto'}  className={'ml-3'}>\n                                <Label check className={'col-form-label'}>\n                                    <Input\n                                        type=\"radio\"\n                                        name=\"job-type\"\n                                        onChange = {(e) => {\n                                            this.setState({\n                                                internship: e.target.value,\n                                                employment: e.target.value,\n                                                jobtype: '6-month + Full time Employment'\n                                            })\n                                        }}\n                                    />\n                                    <b> 6-month + Full time Employment </b>\n                                </Label>\n                            </Col>\n                        </Row>\n                    </FormGroup>\n                    <FormGroup>\n                        {\n                            this.state.internship\n                            ?\n                                <FormGroup>\n                                    <Row>\n                                        <Col md={2}>\n                                            <Label\n                                                className=\"col-form-label \"\n                                                for={'stipend'}\n                                            >\n                                                <h5><b>Stipend</b></h5>\n                                            </Label>\n                                        </Col>\n                                        <Col md={10}>\n                                            <Input\n                                                type='number'\n                                                name='number'\n                                                id='stipend'\n                                                min={'0'}\n                                                className={'col-3 float-left'}\n                                                onChange={(e) => {\n                                                        this.setState({\n                                                            stipend: e.target.value + ' per month'\n                                                        })\n                                                    }\n                                                }\n                                            />\n                                            <b className={'float-left ml-2 col-form-label'}>per month</b>\n                                        </Col>\n                                    </Row>\n                                </FormGroup>\n                            :\n                                <div></div>\n                        }\n                        {\n                            this.state.employment\n                                ?\n                                <FormGroup className={'mt-1'}>\n                                    <Row>\n                                        <Col className={2}>\n                                            <Label\n                                                className=\"col-form-label\"\n                                                for={'ctc'}\n                                            >\n                                                <h5><b>CTC</b></h5>\n                                            </Label>\n                                        </Col>\n                                        <Col md={10}>\n                                            <Input\n                                                type='number'\n                                                name='number'\n                                                id='ctc'\n                                                className={'col-3 float-left'}\n                                                min={'0'}\n                                                onChange={(e) => {\n                                                    this.setState({\n                                                        ctc: e.target.value + ' per annum'\n                                                    })\n                                                }\n                                                }\n                                            />\n                                            <b className={'ml-2 float-left col-form-label'}>per annum</b>\n                                        </Col>\n                                    </Row>\n                                </FormGroup>\n                                :\n                                <div></div>\n                        }\n                    </FormGroup>\n                    <FormGroup>\n                        <Row>\n                            <Col md={2}>\n                                <Label\n                                    className=\"col-form-label\"\n                                    for={'job-profile'}\n                                >\n                                    <h5><b>Job Profile</b></h5>\n                                </Label>\n                            </Col>\n                            <Col md={3}>\n                                <Input\n                                    type='text'\n                                    name='text'\n                                    id={'job-profile'}\n                                    value={this.state.jobProfile}\n                                    onChange={(e) => {\n                                        this.setState({\n                                            jobprofile: e.target.value\n                                        })\n                                    }}\n                                />\n                            </Col>\n                        </Row>\n                    </FormGroup>\n                    <FormGroup>\n                        <Row>\n                            <Col md={2}>\n                                <Label\n                                    className={'col-form-label'}\n                                    for={'receivedOffer'}\n                                >\n                                    <h5><b>Received Offer</b></h5>\n                                </Label>\n                            </Col>\n                            <Col md={1}>\n                                <CustomInput\n                                    className={'col-form-label float-left'}\n                                    id={'receivedOfferYes'}\n                                    type={'radio'}\n                                    name={'offerSwitch'}\n                                    onChange={(e) => {\n                                        this.setState({\n                                            receivedOffer: true\n                                        });\n                                    }}\n                                />\n                                <Label for={'receivedOfferYes'} className={'col-form-label float-left'}><b>Yes</b></Label>\n                            </Col>\n                            <Col md={2}>\n                                <CustomInput\n                                    className={'col-form-label float-left'}\n                                    id={'receivedOfferNo'}\n                                    type={'radio'}\n                                    name={'offerSwitch'}\n                                    onChange={(e) => {\n                                        this.setState({\n                                            receivedOffer: false\n                                        });\n                                    }}\n                                />\n                                <Label for={'receivedOfferNo'} className={'col-form-label float-left'}><b>No</b></Label>\n                            </Col>\n                        </Row>\n                    </FormGroup>\n                    <FormGroup>\n                    {\n                        this.state.rounds.map((round,index) =>\n                            <RoundCard\n                                id={index}\n                                onClick={this.removeCard}\n                                onChangeTitle={this.onChangeTitle}\n                                onChangeDetails={this.onChangeDetails}\n                                round={round}\n                                key={(index+1).toString()}\n                            />\n                        )\n                    }\n                    </FormGroup>\n                    <FormGroup className={'p-3'}>\n                        <Button\n                            color={'dark'}\n                            className={'mr-auto'}\n                            onMouseDown={\n                                (event) => {\n                                    this.addRound(event);\n                                }\n                            }\n                        >\n                            Add Round\n                        </Button>\n                        <Button\n                            className={'float-right'}\n                            color={'dark'}\n                            onClick={\n                                (event) => {\n                                    event.preventDefault();\n                                    this.saveExperience();\n                                    window.location.href='/experiences';\n                                }\n                            }\n                        >\n                            Submit\n                        </Button>\n                    </FormGroup>\n                </Form>\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport './NavbarComponent.css';\nimport {Link} from 'react-router-dom';\nimport {AiOutlineMenu} from \"react-icons/all\";\nimport {\n    Nav,\n    Navbar,\n    NavbarBrand,\n    NavItem,\n    Button,\n    Form,\n    Input,\n    InputGroup,\n    InputGroupAddon,\n} from \"reactstrap\";\nimport {FaSearch} from \"react-icons/all\";\n\nexport default class NavbarComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            isOpen: true,\n            loginOpen: false,\n            signUpOpen: false,\n            username: '',\n            password: '',\n        }\n    }\n\n    toggleLogin = () => {\n        this.setState({\n            loginOpen: !this.state.loginOpen,\n            signUpOpen: false\n        })\n    };\n\n    toggleSignUp = () => {\n        this.setState({\n            loginOpen: false,\n            signUpOpen: !this.state.signUpOpen\n        })\n    };\n\n    onChangeUsernameLogin = (event) => {\n        this.setState({\n            username: event.target.value\n        });\n        event.preventDefault();\n    };\n\n    onChangePasswordLogin = (event) => {\n        this.setState({\n            password: event.target.value\n        });\n        event.preventDefault();\n    };\n\n    render(){\n        return(\n            <div>\n                <Navbar\n                    color={\"dark\"}\n                    expand={'md'}\n                    dark\n                    className={'border-dark border-bottom'}\n                    fixed={'top'}\n                    id={'top-navbar'}\n                    // style={{width:762,display:'inline-block'}}\n                >\n                    <div className={'container-fluid'}>\n                        <div className={'mr-4'}>\n                            <NavbarBrand\n                                className={'text-left'}\n                                style={{minWidth:'20%'}}\n                            >\n                                <span className={'text-white mr-3'} onMouseDown={this.props.onSidebarToggleClick} style={{marginLeft:'-10px'}}>\n                                    <AiOutlineMenu size={20}/>\n                                </span>\n                                <Link\n                                    to={'/'}\n                                    className={'text-white'}\n                                    style={{textDecoration: 'none'}}\n                                    onMouseDown = {(e) => e.preventDefault()}\n                                >\n                                    InterviewPortal\n                                </Link>\n                            </NavbarBrand>\n                        </div>\n                        {/*<div className=\"d-flex flex-grow-1 float-right\">*/}\n                        {/*</div>*/}\n                        {/*<NavbarToggler onClick={(event)=>{*/}\n                        {/*    this.setState({*/}\n                        {/*        isOpen: !this.state.isOpen*/}\n                        {/*    });*/}\n                        {/*    event.preventDefault();*/}\n                        {/*    }}*/}\n                        {/*/>*/}\n                        {/*<Collapse isOpen={this.state.isOpen} navbar>*/}\n                            <Nav className={'mr-auto'} navbar={true}>\n                            </Nav>\n                            <Nav>\n                                <NavItem>\n                                    <Form className=\"mr-2 my-auto w-20 d-inline-block order-1\">\n                                        <InputGroup>\n                                            <Input type=\"text\"\n                                                   placeholder=\"Search\"\n                                                   className={'float-right'}\n                                            />\n                                            <InputGroupAddon addonType={'append'}>\n                                                <Button\n                                                    className=\"btn-outline-dark border border-left-0\"\n                                                    type=\"button\"\n                                                    color={'light'}\n                                                    onMouseDown={(e)=>{\n                                                        e.preventDefault();\n                                                    }}\n                                                >\n                                                    <FaSearch/>\n                                                </Button>\n                                            </InputGroupAddon>\n                                        </InputGroup>\n                                    </Form>\n                                </NavItem>\n                            </Nav>\n                            {/*<Nav>*/}\n                                {/*{*/}\n                                {/*    !this.props.user ?*/}\n                                {/*        <NavItem className={'mr-2 my-auto w-20 d-inline-block order-1'}>*/}\n                                {/*            <Button*/}\n                                {/*                color={'link text-white'}*/}\n                                {/*                style={{*/}\n                                {/*                    textDecoration: 'none'*/}\n                                {/*                }}*/}\n                                {/*                onClick={(event) => {*/}\n                                {/*                    this.toggleLogin();*/}\n                                {/*                    event.preventDefault();*/}\n                                {/*                }}*/}\n                                {/*            >*/}\n                                {/*                Login / SignUp*/}\n                                {/*            </Button>*/}\n                                {/*            <Modal*/}\n                                {/*                isOpen={this.state.loginOpen}*/}\n                                {/*                toggle={this.toggleLogin}*/}\n                                {/*            >*/}\n                                {/*                <ModalHeader toggle={this.toggleLogin}>Login</ModalHeader>*/}\n                                {/*                <ModalBody>*/}\n                                {/*                    <LoginForm*/}\n                                {/*                        onChangeUsernameLogin={this.onChangeUsernameLogin}*/}\n                                {/*                        onChangePasswordLogin={this.onChangePasswordLogin}*/}\n                                {/*                        username={this.state.username}*/}\n                                {/*                        passsword={this.state.password}*/}\n                                {/*                    />*/}\n                                {/*                </ModalBody>*/}\n                                {/*                <ModalFooter>*/}\n                                {/*                    <Button*/}\n                                {/*                        color={'link text-dark'}*/}\n                                {/*                        style={{*/}\n                                {/*                            textDecoration: 'none'*/}\n                                {/*                        }}*/}\n                                {/*                        onClick={(event) => {*/}\n                                {/*                            this.toggleSignUp();*/}\n                                {/*                            event.preventDefault();*/}\n                                {/*                        }}*/}\n                                {/*                    >*/}\n                                {/*                        <b>Not a member? Sign Up</b>*/}\n                                {/*                    </Button>*/}\n                                {/*                    <Button*/}\n                                {/*                        color={'success'}*/}\n                                {/*                        onClick={(event) =>*/}\n                                {/*                            this.props.onClickLogin(event, this.state.username, this.state.password)*/}\n                                {/*                        }*/}\n                                {/*                    >*/}\n                                {/*                        Login*/}\n                                {/*                    </Button>*/}\n                                {/*                </ModalFooter>*/}\n                                {/*            </Modal>*/}\n                                {/*            <Modal*/}\n                                {/*                isOpen={this.state.signUpOpen}*/}\n                                {/*                toggle={this.toggleSignUp}*/}\n                                {/*            >*/}\n                                {/*                <ModalHeader toggle={this.toggleSignUp}>Sign Up</ModalHeader>*/}\n                                {/*                <ModalBody>*/}\n                                {/*                    <SignUpForm/>*/}\n                                {/*                </ModalBody>*/}\n                                {/*                <ModalFooter>*/}\n                                {/*                    <Button*/}\n                                {/*                        color={'link text-dark'}*/}\n                                {/*                        style={{*/}\n                                {/*                            textDecoration: 'none'*/}\n                                {/*                        }}*/}\n                                {/*                        onClick={(event) => {*/}\n                                {/*                            this.toggleLogin();*/}\n                                {/*                            event.preventDefault();*/}\n                                {/*                        }}*/}\n                                {/*                    >*/}\n                                {/*                        <b>Already a member? Login</b>*/}\n                                {/*                    </Button>*/}\n                                {/*                    <Button*/}\n                                {/*                        color={'success'}*/}\n                                {/*                        onClick={*/}\n                                {/*                            (event) => {*/}\n                                {/*                                event.preventDefault();*/}\n                                {/*                            }*/}\n                                {/*                        }*/}\n                                {/*                    >*/}\n                                {/*                        Sign Up*/}\n                                {/*                    </Button>*/}\n                                {/*                </ModalFooter>*/}\n                                {/*            </Modal>*/}\n                                {/*        </NavItem>*/}\n                                {/*        :*/}\n                                {/*        <UncontrolledDropdown nav inNavbar className={'float-right'}>*/}\n                                {/*            <DropdownToggle nav caret className={'text-white'}>*/}\n                                {/*                {this.props.user}*/}\n                                {/*            </DropdownToggle>*/}\n                                {/*            <DropdownMenu right>*/}\n                                {/*                <DropdownItem>*/}\n                                {/*                    Profile*/}\n                                {/*                </DropdownItem>*/}\n                                {/*                <DropdownItem>*/}\n                                {/*                    Messages*/}\n                                {/*                </DropdownItem>*/}\n                                {/*                <DropdownItem>*/}\n                                {/*                    <Link*/}\n                                {/*                        to={'/review-posts'}*/}\n                                {/*                        className={'text-dark'}*/}\n                                {/*                        style={{textDecoration:'none'}}*/}\n                                {/*                    >*/}\n                                {/*                        Review Posts*/}\n                                {/*                    </Link>*/}\n                                {/*                </DropdownItem>*/}\n                                {/*                <DropdownItem divider />*/}\n                                {/*                <DropdownItem*/}\n                                {/*                    onClick={(event) => {*/}\n                                {/*                        this.props.onClickSignOut(event);*/}\n                                {/*                        this.setState({*/}\n                                {/*                            loginOpen: false,*/}\n                                {/*                            signUpOpen: false*/}\n                                {/*                        })*/}\n                                {/*                    }}*/}\n                                {/*                >*/}\n                                {/*                    SignOut*/}\n                                {/*                </DropdownItem>*/}\n                                {/*            </DropdownMenu>*/}\n                                {/*        </UncontrolledDropdown>*/}\n                                {/*}*/}\n                            {/*</Nav>*/}\n                        {/*</Collapse>*/}\n                    </div>\n                </Navbar>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport {Button, Col, Row} from \"reactstrap\";\nimport {Link} from \"react-router-dom\";\nimport {FaCheckCircle, FaRegStar, FaStar, FaThumbsUp, FaTimesCircle} from \"react-icons/all\";\n\nexport default function ExperienceCard(props) {\n    const {experience} = props;\n    console.log(experience);\n    return(\n        <div key={experience._id} style={{backgroundColor:'#e3e4e6'}} className={'border border-dark rounded mr-5 mt-2'}>\n            <Row>\n                <Col md={11}>\n                    <Link to={'/experiences/'+experience._id} className={'text-dark btn-link'}>\n                        <h5 className={'m-3'}>\n                            {`${experience.company} interview experience for ${experience.jobprofile} by ${experience.author}`}\n                        </h5>\n                    </Link>\n                </Col>\n                <Col md={1}>\n                    {\n                        !experience.saved ? <Button color={'white mt-2'} title={'Save'} onMouseDown={props.onSaveClick}><FaRegStar/></Button>\n                            : <Button color={'white mt-2'} title={'Unsaved'} onMouseDown={props.onSaveClick}><FaStar/></Button>\n                    }\n                </Col>\n            </Row>\n            <div className={'ml-3 mb-3'}>\n                {`Submission Date: ${experience.date}`}\n                <br/>\n                {`Rounds: ${experience.rounds.length}`}\n                <br/>\n                {`Received Offer:  `}{ experience.receivedOffer ? <span className={'text-success ml-1'}><FaCheckCircle /></span> : <span className={'text-danger ml-1'}><FaTimesCircle /></span>}\n                <br/>\n                {\n                    experience.accepted ? <h6>\n                        <span className={'text-success'}><FaThumbsUp size={14}/></span>{' '+experience.likes+' '} people found this helpful\n                    </h6>\n                        :\n                        <div/>\n                }\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {Row,Col,Input,Label} from \"reactstrap\";\nimport ExperienceCard from \"./ExperienceCard\";\nexport default class ExperienceList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            experiences: [],\n            loading: true\n        };\n        this.getExperiences();\n    }\n\n    getExperiences = () => {\n        fetch('/experiences')\n            .then(res => res.json())\n            .then(res => {\n                let experiences = res;\n                this.setState({experiences,loading:false});\n                // console.log(experiences);\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    };\n\n    onSaveClick = (e) => {\n      e.preventDefault();\n      // this.setState({\n      //     saved: !this.state.saved\n      // });\n    };\n\n    render() {\n        const {experiences} = this.state;\n        if(this.state.loading){\n            return <img src={'/loading.gif'} alt={'Loading..'} style={{position:'absolute',top:'50%',left:'50%'}}/>\n        }\n        return(\n            <div>\n                <div className={'border-bottom'}>\n                    <h5>\n                        Want to share your experience? Fill this <Link to={'/interview-experience-form'}>interview experience form</Link>.\n                    </h5>\n                </div>\n                <div className={'border-bottom pb-2 mt-2'}>\n                    <Row>\n                        <Col\n                            md={'auto'}\n                        >\n                            <Label\n                                for={'sort-by'}\n                                className={'col-form-label'}\n                            >\n                                Sort By:\n                            </Label>\n                        </Col>\n                        <Col\n                            md={6}\n                        >\n                            <Input\n                                type={'select'}\n                                name={'select'}\n                                id={'sort-by'}\n                                style={{width:'30%'}}\n                            >\n                                <option>\n                                    Submission Date\n                                </option>\n                                <option>\n                                    Company\n                                </option>\n                                <option>\n                                    Author\n                                </option>\n                                <option>\n                                    Helpfulness\n                                </option>\n                            </Input>\n                        </Col>\n                    </Row>\n                </div>\n                {/*{this.renderExperienceCard(experiences[0])}*/}\n                {/*<ExperienceCard experience={experiences[0]} onSaveClick={this.onSaveClick}/>*/}\n                {\n                    experiences.map(experience => {\n                        // console.log(experience);\n                        return(experience.accepted  ? <ExperienceCard key={experience._id} experience={experience} link={'/experience2'} onSaveClick={this.onSaveClick}/>\n                            : <div />\n                        )\n                    })\n                }\n            </div>\n        );\n    }\n\n}","const styleMap = {\n    'H1': {\n        fontSize: '2em'\n    },\n    'H2' : {\n        fontSize: '1.5em'\n    },\n    'H3' : {\n        fontSize: '1.17em'\n    },\n    'H4' : {\n        fontSize: '1.12em'\n    },\n    'H5' : {\n        fontSize: '0.83em'\n    },\n    'H6' : {\n        fontSize: '0.75em'\n    },\n    'RIGHT' : {\n        float: 'right'\n    },\n    'LEFT' : {\n        float: 'left'\n    },\n};\n\nexport default styleMap;","import React from \"react\";\nimport {Media} from 'reactstrap';\n\nexport default function AnswerProfileCard(props) {\n    return(\n        <Media>\n            <Media left top href={'#'}>\n                <div className={'m-1 ml-2 border border-dark'} style={{padding:0.1}}>\n                    <Media\n                        object\n                        src={props.src}\n                        alt={'profile-picture'}\n                        style={{width:'64px',height:'64px'}}\n                    />\n                </div>\n            </Media>\n            <Media body className={'m-2'}>\n                <Media heading>\n                    {props.name}\n                </Media>\n                {props.description}\n            </Media>\n        </Media>\n    )\n}","import React from \"react\";\nimport {CompositeDecorator, Editor as DraftEditor, EditorState, RichUtils} from 'draft-js';\nimport {Button,Input,Col,Row} from 'reactstrap';\nimport styleMap from \"../Constants/StyleMap\";\nimport {MdLink,GoListUnordered,GoListOrdered} from \"react-icons/all\";\nimport AnswerProfileCard from \"./AnswerProfleCard\";\nimport 'draft-js/dist/Draft.css';\n\nexport default class AnswerBox extends React.Component {\n    constructor(props) {\n        super(props);\n        const decorator = new CompositeDecorator([\n            {\n                strategy: findLinkEntities,\n                component: Link,\n            },\n        ]);\n        this.state = {\n            innerWidth: 0,\n            innerHeight: 0,\n            url:'',\n            showURLInput: false,\n            editorState: EditorState.createEmpty(decorator),\n            editorContent: <div />\n        };\n        // this.editorRef = React.createRef();\n        this.onChange = (editorState) => {\n            this.setState({editorState,\n                editorContent: this.editor.editor.innerHTML\n            });\n            // console.log(this.editor);\n            // document.getElementById('editorContent').innerHTML = this.state.editorContent;\n            // console.log(ReactDOM.findDOMNode(this).innerHTML)\n        };\n        this.promptForLink = this._promptForLink.bind(this);\n        this.onURLChange = (e) => this.setState({urlValue: e.target.value});\n        this.confirmLink = this._confirmLink.bind(this);\n        this.onLinkInputKeyDown = this._onLinkInputKeyDown.bind(this);\n        this.removeLink = this._removeLink.bind(this);\n    }\n\n    handleKeyCommand(command, editorState) {\n        const newState = RichUtils.handleKeyCommand(editorState, command);\n        if (newState) {\n            this.onChange(newState);\n            return 'handled';\n        }\n        return 'not-handled';\n    }\n\n    updateWindowsDimension = () => {\n        this.setState({\n            innerWidth: window.innerWidth,\n            innerHeight: window.innerHeight\n        });\n    };\n\n    isActive(style) {\n        const styles = this.state.editorState.getCurrentInlineStyle();\n        return styles.has(style);\n    }\n\n    isBlockActive(type) {\n        const blockType = RichUtils.getCurrentBlockType(this.state.editorState);\n        return blockType === type;\n    }\n\n    buttons = ['BOLD','ITALIC','UNDERLINE','H1','H2','H3','H4','H5'];\n    labels = [\n        <b>B</b>,\n        <i>I</i>,\n        <u>U</u>,\n        <span>H1</span>,\n        <span>H2</span>,\n        <span>H3</span>,\n        <span>H4</span>,\n        <span>H5</span>,\n    ];\n\n    renderButton(style,label,onChange) {\n        return(\n            <Button\n                className={'btn-light border-dark border-0 m-1'}\n                style={{textDecoration:'none'}}\n                key={style}\n                size={'md'}\n                onMouseDown={(event)=>{\n                    event.preventDefault();\n                    onChange(RichUtils.toggleInlineStyle(this.state.editorState, style));\n                }}\n                active={this.isActive(style)}\n            >\n                {label}\n            </Button>\n        )\n    }\n\n    componentDidMount() {\n        this.editor.focus();\n        this.updateWindowsDimension();\n        window.addEventListener('resize',this.updateWindowsDimension);\n    }\n\n    isLinkActive() {\n        const {editorState} = this.state;\n        const selection = editorState.getSelection();\n        if (!selection.isCollapsed()) {\n            const contentState = editorState.getCurrentContent();\n            const startKey = editorState.getSelection().getStartKey();\n            const startOffset = editorState.getSelection().getStartOffset();\n            const blockWithLinkAtBeginning = contentState.getBlockForKey(startKey);\n            const linkKey = blockWithLinkAtBeginning.getEntityAt(startOffset);\n            let url='';\n            if (linkKey) {\n                const linkInstance = contentState.getEntity(linkKey);\n                url = linkInstance.getData().url;\n                return true;\n            }\n            return false;\n\n        }\n    }\n\n    _promptForLink(e) {\n        e.preventDefault();\n        const {editorState} = this.state;\n        const selection = editorState.getSelection();\n        if (!selection.isCollapsed()) {\n            const contentState = editorState.getCurrentContent();\n            const startKey = editorState.getSelection().getStartKey();\n            const startOffset = editorState.getSelection().getStartOffset();\n            const blockWithLinkAtBeginning = contentState.getBlockForKey(startKey);\n            const linkKey = blockWithLinkAtBeginning.getEntityAt(startOffset);\n\n            let url = '';\n            if (linkKey) {\n                const linkInstance = contentState.getEntity(linkKey);\n                url = linkInstance.getData().url;\n                console.log(url);\n            }\n\n            this.setState({\n                showURLInput: true,\n                urlValue: url,\n            });\n        }\n    };\n\n    _confirmLink(e) {\n        e.preventDefault();\n        const {editorState, urlValue} = this.state;\n        const contentState = editorState.getCurrentContent();\n        const contentStateWithEntity = contentState.createEntity(\n            'LINK',\n            'MUTABLE',\n            {url: urlValue}\n        );\n        const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n        const newEditorState = EditorState.set(editorState, { currentContent: contentStateWithEntity });\n        this.setState({\n            editorState: RichUtils.toggleLink(\n                newEditorState,\n                newEditorState.getSelection(),\n                entityKey\n            ),\n            showURLInput: false,\n            urlValue: '',\n        });\n    };\n\n    _onLinkInputKeyDown(e) {\n        if (e.which === 13) {\n            this._confirmLink(e);\n        }\n    }\n\n    _removeLink(e) {\n        e.preventDefault();\n        const {editorState} = this.state;\n        const selection = editorState.getSelection();\n        if (!selection.isCollapsed()) {\n            this.setState({\n                editorState: RichUtils.toggleLink(editorState, selection, null),\n            });\n        }\n    };\n\n    renderLinkButton = () => {\n        let urlInput;\n        if (this.state.showURLInput) {\n            urlInput =\n                <Row>\n                    <Col md={'auto'} className={'ml-2'}>\n                        <Input\n                            onChange={this.onURLChange}\n                            style={styles.urlInput}\n                            type=\"text\"\n                            value={this.state.urlValue}\n                            onKeyDown={this.onLinkInputKeyDown}\n                        />\n                    </Col>\n                    <Col>\n                        <Button\n                            className={'btn-light border-dark border-0 mb-2'}\n                            style={{textDecoration:'none'}}\n                            size={'md'}\n                            onMouseDown={this.confirmLink}\n                        >\n                            Confirm\n                        </Button>\n                    </Col>\n                </Row>;\n        }\n        return (\n            <span>\n                <Button\n                    className={'btn-light border-dark border-0 m-1'}\n                    style={{textDecoration:'none'}}\n                    size={'md'}\n                    onMouseDown={this.promptForLink}\n                    active={this.isLinkActive()}\n                >\n                    <MdLink size={20}/>\n                </Button>\n                <Button\n                    className={'btn-light border-dark border-0 m-1'}\n                    style={{textDecoration:'none'}}\n                    size={'md'}\n                    onMouseDown={this.removeLink}\n                    active={this.isActive('LINK')}\n                >\n                    Remove Link\n                </Button>\n                {urlInput}\n            </span>\n        )\n    }\n    ;\n\n    render() {\n        const onChange = this.onChange;\n        return(\n            <div className={'mx-3 mb-3'}>\n                <AnswerProfileCard\n                    src={'/pikachu.jpg'}\n                    name={'Rutvik Sutaria'}\n                    description={'8th semester CSE student'}\n                />\n                <div className={'mx-3 border-dark rounded-top border bg-light border-bottom-0'} style={{width:'97%'}}>\n                    <div>\n                        {\n                            this.buttons.map(\n                                (button,index) => this.renderButton(button,this.labels[index],onChange)\n                            )\n                        }\n                        <Button\n                            className={'btn-light border-dark border-0 m-1'}\n                            style={{textDecoration:'none'}}\n                            size={'md'}\n                            onMouseDown={(event)=>{\n                                event.preventDefault();\n                                onChange(RichUtils.toggleBlockType(this.state.editorState, 'unordered-list-item'));\n                            }}\n                            active={this.isBlockActive('unordered-list-item')}\n                        >\n                            <GoListUnordered size={20}/>\n                        </Button>\n                        <Button\n                            className={'btn-light border-dark border-0 m-1'}\n                            style={{textDecoration:'none'}}\n                            size={'md'}\n                            onMouseDown={(event)=>{\n                                event.preventDefault();\n                                onChange(RichUtils.toggleBlockType(this.state.editorState, 'ordered-list-item'));\n                            }}\n                            active={this.isBlockActive('ordered-list-item')}\n                        >\n                            <GoListOrdered size={20}/>\n                        </Button>\n                        {this.renderLinkButton()}\n                    </div>\n                </div>\n                <div className={'border rounded-bottom border-dark mx-3'} style={{width:'97%',minHeight:this.state.innerHeight/3,marginLeft:10,backgroundColor:'#FFFFFF'}}>\n                    <div className={'mx-2 p-1'}>\n                        <DraftEditor\n                            editorState={this.state.editorState}\n                            customStyleMap={styleMap}\n                            onChange={onChange}\n                            handleKeyCommand={this.handleKeyCommand}\n                            placeholder={'Type your answer..'}\n                            ref={(editor) => {\n                                this.editor = editor;\n                            }}\n                        />\n                    </div>\n                </div>\n                {/*<div id={'editorContent'}>*/}\n\n                {/*</div>*/}\n                <Button\n                    type={'submit'}\n                    color={'dark'}\n                    className={'mt-1 ml-3 mb-2'}\n                    onClick={(e) => {\n                        e.preventDefault();\n                        // document.getElementById('editorContent').innerHTML = this.state.editorContent;\n                        this.props.onSubmit(this.state.editorContent);\n                    }}\n                    size={'sm'}\n                >\n                    Submit\n                </Button>\n            </div>\n        );\n    }\n}\n\nfunction findLinkEntities(contentBlock, callback, contentState) {\n    contentBlock.findEntityRanges(\n        (character) => {\n            const entityKey = character.getEntity();\n            return (\n                entityKey && contentState.getEntity(entityKey).getType() === 'LINK'\n            );\n        },\n        callback\n    );\n}\n\nconst Link = (props) => {\n    const {url} = props.contentState.getEntity(props.entityKey).getData();\n    return (\n        <a href={url} style={styles.link}>\n            {props.children}\n        </a>\n    );\n};\n\nconst styles = {\n    root: {\n        fontFamily: '\\'Georgia\\', serif',\n        padding: 20,\n        width: 600,\n    },\n    buttons: {\n        marginBottom: 10,\n    },\n    urlInputContainer: {\n        marginBottom: 10,\n    },\n    urlInput: {\n        fontFamily: '\\'Georgia\\', serif',\n        marginRight: 10,\n        padding: 3,\n    },\n    editor: {\n        border: '1px solid #ccc',\n        cursor: 'text',\n        minHeight: 80,\n        padding: 10,\n    },\n    button: {\n        marginTop: 10,\n        textAlign: 'center',\n    },\n    link: {\n        color: '#3b5998',\n        textDecoration: 'underline',\n    },\n};","import React from 'react';\nimport {FaThumbsUp, FaThumbsDown, FaRegThumbsUp, FaRegThumbsDown} from \"react-icons/all\";\nimport AnswerProfileCard from \"./AnswerProfleCard\";\nimport {Button} from \"reactstrap\";\n\nexport default function AnswerCard(props){\n    const ans = props.answer;\n    // console.log(ans);\n    return(\n        <div className={'m-2 mr-5 border-bottom'}>\n            <AnswerProfileCard\n                src={'/pikachu.jpg'}\n                name={ans.author}\n                description={'8th semester CSE student'}\n            />\n            <div className={'m-3'}>\n                {/*<Editor editorState={ans.answer} readOnly={true}/>*/}\n                <div>\n                    {ans.answer}\n                </div>\n                <div className={'mt-2 pt-2 border-top'}>\n                    {\n                        ans.helpful !== 'none' ? <span>\n                            <span className={'text-success'}>\n                                <FaThumbsUp/>\n                            </span>\n                                {ans.likes} people found this helpful\n                        </span> : <div/>\n                    }\n                    <h6>\n                        Was this answer helpful?{' '}\n                        <Button size={'sm'} color={'white'} className={'mb-1 text-success'}\n                                onMouseDown={(e) => {\n                                    props.onClickHelpful(e,ans);\n                                }}\n                        >\n                            {ans.helpful === 'yes' ? <FaThumbsUp/> : <FaRegThumbsUp/>}\n                        </Button>\n                        <Button size={'sm'} color={'white'} className={'mb-1 text-danger'}\n                                onMouseDown={(e) => {\n                                    props.onClickNotHelpful(e,ans);\n                                }}\n                        >\n                            {ans.helpful === 'no' ? <FaThumbsDown/> : <FaRegThumbsDown/>}\n                        </Button>\n                    </h6>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport AnswerBox from \"./AnswerBox\";\nimport {Card,Button} from \"reactstrap\";\nimport {FaComment,FaEllipsisH,FaFacebookF,FaTwitter,AiFillEdit,FaStar,MdReport,AiOutlineStop} from \"react-icons/all\";\nimport '../Images/pikachu.jpg';\nimport AnswerCard from \"./AnswerCard\";\n\n\nexport default class BlogList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOptionsOpen: false,\n            answer: false,\n            query: {},\n            answers: [],\n            width: window.innerWidth,\n            height: window.innerHeight,\n            loading: true\n        };\n        this.getQuery();\n    }\n\n    fetchReq = async(uri,id) => {\n        const response = await fetch(uri,{\n            method:'POST',\n            headers:{\n                'Accept':'application/json',\n                'Content-Type':'application/json'\n            },\n            body: JSON.stringify({\n                \"id\":id\n            })\n        });\n        return await response.json();\n    };\n\n    getQuery() {\n        this.fetchReq('/getQuery',this.props.match.params.id).then(query => {\n            this.fetchReq('/getAnswers',query[0].answers).then(answers => {\n                this.setState({\n                    query: query[0],answers,loading: false\n                })\n            });\n        });\n        // const answers = query.answers.map((answer_id) => {\n        //     return this.fetchReq('/getAnswer')[0];\n        // });\n        // this.setState({query,answers,loading:false});\n        // console.log(query);\n    };\n\n    onClickHelpful = (e,currentAnswer) => {\n        e.preventDefault();\n        const {answers} = this.state;\n        const newAnswers = answers.map(answer => {\n           return answer.id ===  currentAnswer.id ? {\n               id:answer.id,\n               answer: currentAnswer.answer,\n               helpful: 'yes'\n           }\n           :\n               answer\n        });\n        this.setState({answers: newAnswers});\n    };\n\n    onClickNotHelpful = (e,currentAnswer) => {\n        e.preventDefault();\n        const {answers} = this.state;\n        const newAnswers = answers.map(answer => {\n            return answer.id ===  currentAnswer.id ? {\n                    id:answer.id,\n                    answer: currentAnswer.answer,\n                    helpful: 'no'\n                }\n                :\n                answer\n        });\n        this.setState({answers: newAnswers});\n    };\n\n    updateWindowsDimension = () => {\n        this.setState({\n            width: window.innerWidth,\n            height: window.innerHeight\n        });\n    };\n\n    componentDidMount() {\n        this.updateWindowsDimension();\n        window.addEventListener('resize',this.updateWindowsDimension);\n    }\n\n    onSubmit = (editorContent) => {\n        const divElement = <div dangerouslySetInnerHTML={{__html:\n            editorContent}}>\n        </div>;\n        this.setState({\n            answers: [...this.state.answers,\n                {id: this.state.answers.length,answer: divElement, helpful: 'none'}\n            ],\n            answer: !this.state.answer\n        });\n    };\n\n    render() {\n        return (\n            <div className={'mt-2'} style={{minHeight: this.state.height-57,width:'1000'}}>\n                {\n                    !this.state.loading ?\n                    <Card>\n                        <div className={'mx-4 mt-2 border-bottom'}>\n                            <div className={'row'}>\n                                <b className={'col-11'}>\n                                    <h4>\n                                        {this.state.query.question}\n                                    </h4>\n                                </b>\n                            </div>\n                            <div className={'row mb-1'}>\n                                <div className={'col-6'}>\n                                    <Button\n                                        className={'border-0 mb-2'}\n                                        color={'dark'}\n                                        size={'sm'}\n                                        onMouseDown={(e) => {\n                                            this.setState({\n                                                answer: !this.state.answer\n                                            });\n                                            e.preventDefault();\n                                        }}\n                                    >\n                                        <AiFillEdit size={'20px'}/>\n                                        {' Answer'}\n                                    </Button>\n                                    <Button\n                                        className={'border-0 ml-2 mb-2'}\n                                        color={'dark'}\n                                        size={'sm'}\n                                        onMouseDown={(e) => {\n                                            e.preventDefault();\n                                        }}\n                                    >\n                                        <FaStar size={'20px'}/>\n                                        {' Save'}\n                                    </Button>\n                                </div>\n                                <div className={'col-6'}>\n                                    <div className={'text-right'}>\n                                        <Button\n                                            className={'border-0 mb-1'}\n                                            color={'white'}\n                                            title={'Comment'}\n                                            onMouseDown={(e) => {\n                                                console.log('mouse down!');\n                                                e.preventDefault();\n                                            }}\n                                        >\n                                            <FaComment/>\n                                        </Button>\n                                        <Button\n                                            className={'border-0 mb-1'}\n                                            color={'white'}\n                                            title={'Report this question'}\n                                            onMouseDown={(e) => {\n                                                console.log('mouse down!');\n                                                e.preventDefault();\n                                            }}\n                                        >\n                                            <AiOutlineStop/>\n                                        </Button>\n                                        <Button\n                                            className={'border-0 mb-1'}\n                                            color={'white'}\n                                            onMouseDown={(e) => {\n                                                console.log('mouse down!');\n                                                e.preventDefault();\n                                            }}\n                                            title={'Share on Facebook'}\n                                        >\n                                            <FaFacebookF/>\n                                        </Button>\n                                        <Button\n                                            className={'border-0 mb-1'}\n                                            color={'white'}\n                                            title={'Share on Twitter'}\n                                            onMouseDown={(e) => {\n                                                console.log('mouse down!');\n                                                e.preventDefault();\n                                            }}\n                                        >\n                                            <FaTwitter/>\n                                        </Button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        {\n                            this.state.answer\n                                ? <AnswerBox\n                                        onSubmit={this.onSubmit}\n                                />\n                                : <div>\n                                    <br/>\n                                </div>\n                        }\n                        {\n                            this.state.answers.map(answer =>\n                            <AnswerCard\n                                key={answer._id}\n                                answer={answer}\n                                onClickHelpful={this.onClickHelpful}\n                                onClickNotHelpful={this.onClickNotHelpful}\n                            />)\n                        }\n                    </Card>\n                    :\n                    <img src={'/loading.gif'} alt={'Loading..'} style={{position:'absolute',top:'50%',left:'50%'}}/>\n                }\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport {Col, Input, Label, Row,Form,FormFeedback} from \"reactstrap\";\nexport default function LoginForm(props) {\n    const {onChangeUsernameLogin, onChangePasswordLogin, username, password} = props;\n    return(\n        <Form>\n            <Row form={true} className={'my-2 mr-2'}>\n                <Col md={2}>\n                    <Label\n                        for={'email'}\n                    >\n                        <b>Username</b>\n                    </Label>\n                </Col>\n                <Col md={10}>\n                    <Input\n                        id = {'email'}\n                        type = {'text'}\n                        name = {'email'}\n                        value = {username}\n                        onChange = {onChangeUsernameLogin}\n                        placeholder={'Email or username'}\n                    />\n                </Col>\n            </Row>\n            <Row form={true} className={'my-2 mr-2'}>\n                <Col md={2}>\n                    <Label\n                        for={'password'}\n                    >\n                        <b>Password</b>\n                    </Label>\n                </Col>\n                <Col md={10}>\n                    <Input\n                        id={'password'}\n                        type={'password'}\n                        name={'password'}\n                        value = {password}\n                        onChange = {onChangePasswordLogin}\n                    />\n                </Col>\n                {\n                    props.status === 500 ? <FormFeedback invalid>Invalid credentials.</FormFeedback> : <div/>\n                }\n            </Row>\n        </Form>\n    )\n}","import React from \"react\";\nimport {Col, Form, Input, Label, Row,FormFeedback} from \"reactstrap\";\nexport default function SignUpForm(props) {\n    return(\n        <Form>\n            <Row form={true} className={'my-2 mr-2'}>\n                <Col md={2}>\n                    <Label\n                        for={'email'}\n                    >\n                        <b>Email</b>\n                    </Label>\n                </Col>\n                <Col md={10}>\n                    <Input\n                        id={'email'}\n                        type={'email'}\n                        name={'email'}\n                        value={props.email}\n                        onChange={props.onChangeEmail}\n                        valid={props.email!==''&&props.emailUnique}\n                        invalid={!props.emailUnique}\n                    />\n                    {\n                        props.emailUnique?<div/>:<FormFeedback>This email has already been registered.</FormFeedback>\n                    }\n                </Col>\n            </Row>\n            <Row form={true} className={'my-2 mr-2'}>\n                <Col md={2}>\n                    <Label\n                        for={'username'}\n                    >\n                        <b>Username</b>\n                    </Label>\n                </Col>\n                <Col md={10}>\n                    <Input\n                        id={'username'}\n                        type={'text'}\n                        name={'username'}\n                        value={props.username}\n                        onChange={props.onChangeUsername}\n                        valid={props.username!==''&&props.usernameUnique}\n                        invalid={!props.usernameUnique || props.username.includes(' ')}\n                    />\n                    {\n                        props.usernameUnique?<div/>:<FormFeedback>This username is taken.</FormFeedback>\n                    }\n                    {\n                        !props.username.includes(' ')?<div/>:<FormFeedback>Username cannot contain spaces.</FormFeedback>\n                    }\n                </Col>\n            </Row>\n            <Row form={true} className={'my-2 mr-2'}>\n                <Col md={2}>\n                    <Label\n                        for={'name'}\n                    >\n                        <b>Name</b>\n                    </Label>\n                </Col>\n                <Col md={10}>\n                    <Input\n                        id={'name'}\n                        type={'text'}\n                        name={'name'}\n                        value={props.name}\n                        onChange={props.onChangeName}\n                    />\n                </Col>\n            </Row>\n            <Row form={true} className={'my-2 mr-2'}>\n                <Col md={2}>\n                    <Label\n                        for={'password'}\n                    >\n                        <b>Password</b>\n                    </Label>\n                </Col>\n                <Col md={10}>\n                    <Input\n                        id={'password'}\n                        type={'password'}\n                        name={'password'}\n                        value={props.password}\n                        onChange={props.onChangePassword}\n                    />\n                </Col>\n            </Row>\n            <Row form={true} className={'my-2 mr-2'}>\n                <Col md={2}>\n                    <Label\n                        for={'confirm-password'}\n                    >\n                        <b>Confirm Password</b>\n                    </Label>\n                </Col>\n                <Col md={10}>\n                    <Input\n                        id={'confirm-password'}\n                        type={'password'}\n                        name={'confirm-password'}\n                        value={props.confirmPassword}\n                        onChange={props.onChangeConfirmPassword}\n                        valid={props.password !== '' && props.password === props.confirmPassword}\n                        invalid={props.password !== props.confirmPassword}\n                    />\n                    {\n                        props.password !== props.confirmPassword ? <FormFeedback>ConfirmPassword and Password are not matching.</FormFeedback>:<div/>\n                    }\n                </Col>\n            </Row>\n        </Form>\n    );\n}","import React from 'react';\nimport {\n    Modal, ModalHeader, ModalBody, ModalFooter, Button\n} from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport {FiLogOut,AiFillNotification,FaBookmark,AiFillEdit,FaQuestionCircle,MdHistory,AiOutlineCode,IoMdStats,FiLogIn,FaUserCircle,MdRateReview} from 'react-icons/all';\nimport LoginForm from \"./LoginForm\";\nimport SignUpForm from \"./SignUpForm\";\nexport default class Sidebar extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            width: window.innerWidth,\n            height: window.innerHeight,\n            loginOpen: false,\n            signUpOpen: false,\n            email:'',\n            username:'',\n            password:'',\n            confirmPassword:'',\n            name:'',\n            emailUnique:true,\n            usernameUnique:true,\n            status: 200\n        }\n    }\n\n    toggleLogin = () => {\n        this.setState({\n            loginOpen: !this.state.loginOpen,\n            signUpOpen: false\n        })\n    };\n\n    toggleSignUp = () => {\n        this.setState({\n            loginOpen: false,\n            signUpOpen: !this.state.signUpOpen\n        })\n    };\n\n    onChangeUsername = (event) => {\n        this.setState({\n            username: event.target.value\n        });\n        fetch('/username',{\n            method:'POST',\n            headers:{\n                'Accept':'application/json',\n                'Content-Type':'application/json'\n            },\n            body: JSON.stringify({\n                \"username\":event.target.value\n            })\n        }).then( response => {\n            // console.log(response);\n            return response.json()\n        }).then((response) => {\n            // console.log(this.state.username);\n            this.setState({usernameUnique: response.length === 0});\n            console.log(response);\n            if(response.status === 500) {\n                console.log(\"Error while connecting to database please check your internet connection\");\n            }\n        }).catch( error => console.log(error.message));\n        event.preventDefault();\n    };\n\n    onChangePassword = (event) => {\n        this.setState({\n            password: event.target.value\n        });\n        event.preventDefault();\n    };\n\n    onChangeConfirmPassword = (event) => {\n        this.setState({\n            confirmPassword: event.target.value\n        });\n        event.preventDefault();\n    };\n    onChangeEmail = (event) => {\n        this.setState({\n            email:event.target.value\n        });\n        fetch('/email',{\n            method:'POST',\n            headers:{\n                'Accept':'application/json',\n                'Content-Type':'application/json'\n            },\n            body: JSON.stringify({\n                \"email\":event.target.value\n            })\n        }).then( response => {\n            // console.log(response);\n            return response.json()\n        }).then((response) => {\n            this.setState({emailUnique: response.length === 0});\n            console.log(response);\n            if(response.status === 500) {\n                console.log(\"Error while connecting to database please check your internet connection\");\n            }\n        }).catch( error => console.log(error.message));\n        event.preventDefault();\n    };\n\n    onChangeName = (event) => {\n        this.setState({\n            name:event.target.value\n        });\n        event.preventDefault();\n    };\n\n    updateWindowsDimension = () => {\n        this.setState({\n            width: window.innerWidth,\n            height: window.innerHeight\n        });\n    };\n\n    componentDidMount() {\n        this.updateWindowsDimension();\n        window.addEventListener('resize',this.updateWindowsDimension);\n    }\n\n    render() {\n        // console.log(this.props);\n        return(\n            <nav className={'sidebar border-dark border-right'} style={{backgroundColor: '#c1c1c1',minHeight:this.state.height-57,width: '13%',minWidth:200,position: 'fixed',float:'left'}}>\n                <div>\n                    <ul className=\"nav flex-column\">\n                        {\n                            this.props.user ?\n                                <li className=\"nav-item\">\n                                    <Link to={'/usr/user1'} className={'nav-link active text-dark'}>\n                                        <b>\n                                            <span className={'mb-1 col-form-label'}>\n                                                <FaUserCircle size={20}/>\n                                            </span>\n                                            {' '+this.props.user}\n                                        </b>\n                                    </Link>\n                                </li>\n                                :\n                                <li></li>\n                        }\n                        {\n                            this.props.user ?\n                            <li className=\"nav-item\">\n                                <Link to={'/notifications'} className={'nav-link active text-dark'}>\n                                    <b>\n                                        <span className={'mb-1 col-form-label'}>\n                                            <AiFillNotification size={20}/>\n                                        </span>\n                                        {' '}Notifications\n                                    </b>\n                                </Link>\n                            </li>\n                                :\n                                <li></li>\n                        }\n                        {\n                            this.props.user ?\n                            <li className=\"nav-item\">\n                                <Link to={'/saved'} className={'nav-link active text-dark'}>\n                                    <b>\n                                        <span className={'mb-1 col-form-label'}>\n                                            <FaBookmark size={20}/>\n                                        </span>\n                                        {' '}Saved\n                                    </b>\n                                </Link>\n                            </li>\n                                :\n                                <li></li>\n                        }\n                        {\n                            this.props.user ?\n                                <li className=\"nav-item\">\n                                    <Link to={'/review'} className={'nav-link active text-dark'}>\n                                        <b>\n                                        <span className={'mb-1 col-form-label'}>\n                                            <MdRateReview size={20}/>\n                                        </span>\n                                            {' '}Review\n                                        </b>\n                                    </Link>\n                                </li>\n                                :\n                                <li></li>\n                        }\n                        <li className=\"nav-item\">\n                            <Link to={'/queries'} className={'nav-link active text-dark'}>\n                                <b>\n                                    <span className={'mb-1 col-form-label'}>\n                                        <FaQuestionCircle size={20}/>\n                                    </span>\n                                    {' '}Queries\n                                </b>\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to={'/experiences'} className={'nav-link active text-dark'}>\n                                <b>\n                                    <span className={'mb-1 col-form-label'}>\n                                        <AiFillEdit size={20}/>\n                                    </span>\n                                    {' '}Experiences\n                                </b>\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to={'/practice'} className={'nav-link active text-dark'}>\n                                <b>\n                                    <span className={'mb-1 col-form-label'}>\n                                        <AiOutlineCode size={20}/>\n                                    </span>\n                                    {' '} Practice\n                                </b>\n                            </Link>\n                        </li>\n                        <li className={'nav-item'}>\n                            <Link\n                                className={'nav-link active text-dark'}\n                                to={'/placement'}\n                            >\n                                <b>\n                                    <span className={'mb-1 col-form-label'}>\n                                        <IoMdStats size={20}/>\n                                    </span>\n                                    {' '}\n                                    Placements\n                                </b>\n                            </Link>\n                        </li>\n                        {\n                            !this.props.user ? <li className={'nav-item'}>\n                            <Button\n                                color={'white'}\n                                onMouseDown={(event) => {\n                                    this.toggleLogin();\n                                    event.preventDefault();\n                                }}\n                            >\n                                <b>\n                                    <span className={'mb-1 col-form-label'}>\n                                        <FiLogIn size={20}/>\n                                    </span>\n                                    {' '}\n                                    Login\n                                </b>\n                            </Button>\n                            <Modal\n                                isOpen={this.state.loginOpen}\n                                toggle={this.toggleLogin}\n                            >\n                                <ModalHeader toggle={this.toggleLogin}>Login</ModalHeader>\n                                <ModalBody>\n                                    <LoginForm\n                                        onChangeUsernameLogin={this.onChangeUsername}\n                                        onChangePasswordLogin={this.onChangePassword}\n                                        onChangeEmail={this.onChangeEmail}\n                                        username={this.state.username}\n                                        passsword={this.state.password}\n                                        email={this.state.email}\n                                        status={this.state.status}\n                                    />\n                                </ModalBody>\n                                <ModalFooter>\n                                    <Button\n                                        color={'link text-dark'}\n                                        style={{\n                                            textDecoration: 'none'\n                                        }}\n                                        onClick={(event) => {\n                                            this.toggleSignUp();\n                                            event.preventDefault();\n                                        }}\n                                    >\n                                        <b>Not a member? Sign Up</b>\n                                    </Button>\n                                    <Button\n                                        color={'success'}\n                                        onClick={(event) => {\n                                            const status = this.props.onClickLogin(event,this.state.email,this.state.username,this.state.password);\n                                            this.setState({status});\n                                        }}\n                                    >\n                                        Login\n                                    </Button>\n                                </ModalFooter>\n                            </Modal>\n                            <Modal\n                                isOpen={this.state.signUpOpen}\n                                toggle={this.toggleSignUp}\n                            >\n                                <ModalHeader toggle={this.toggleSignUp}>Sign Up</ModalHeader>\n                                <ModalBody>\n                                    <SignUpForm\n                                        onChangeEmail={this.onChangeEmail}\n                                        onChangeUsername={this.onChangeUsername}\n                                        onChangeName={this.onChangeName}\n                                        onChangePassword={this.onChangePassword}\n                                        onChangeConfirmPassword={this.onChangeConfirmPassword}\n                                        email={this.state.email}\n                                        username={this.state.username}\n                                        name={this.state.name}\n                                        password={this.state.password}\n                                        confirmPassword={this.state.confirmPassword}\n                                        emailUnique={this.state.emailUnique}\n                                        usernameUnique={this.state.usernameUnique}\n                                    />\n                                </ModalBody>\n                                <ModalFooter>\n                                    <Button\n                                        color={'link text-dark'}\n                                        style={{\n                                            textDecoration: 'none'\n                                        }}\n                                        onClick={(event) => {\n                                            this.toggleLogin();\n                                            event.preventDefault();\n                                        }}\n                                    >\n                                        <b>Already a member? Login</b>\n                                    </Button>\n                                    <Button\n                                        color={'success'}\n                                        onClick={\n                                            (event) => {\n                                                event.preventDefault();\n                                                if(this.state.emailUnique && this.state.usernameUnique && this.state.password === this.state.confirmPassword && !this.state.username.includes(' ')) {\n                                                    fetch('/registerUser', {\n                                                        method: 'POST',\n                                                        headers: {\n                                                            'Accept': 'application/json',\n                                                            'Content-Type': 'application/json'\n                                                        },\n                                                        body: JSON.stringify({\n                                                            _id: this.state.username,\n                                                            email: this.state.email,\n                                                            name: this.state.name,\n                                                            password: this.state.password\n                                                        })\n                                                    }).then(response => {\n                                                        // console.log(response);\n                                                        return response.json()\n                                                    }).then((response) => {\n                                                        const experience = response[0];\n                                                        this.setState({\n                                                            experience,\n                                                            loading: false,\n                                                            show: experience.accepted !== false\n                                                        });\n                                                        console.log(experience);\n                                                        if (response.status === 500) {\n                                                            console.log(\"Error while connecting to database please check your internet connection\");\n                                                        }\n                                                    }).catch(error => console.log(error.message));\n                                                    this.props.onClickLogin(event,this.state.email,this.state.username,this.state.password);\n                                                }\n                                            }\n                                        }\n                                    >\n                                        Sign Up\n                                    </Button>\n                                </ModalFooter>\n                            </Modal>\n                        </li>\n                            :\n                            <li className={'nav-item'}>\n                                <Button\n                                    color={'white'}\n                                    onMouseDown={(event) => {\n                                        this.setState({\n                                            loginOpen: false,\n                                            signUpOpen: false\n                                        });\n                                        this.props.onClickLogOut(event);\n                                    }}\n                                >\n                                    <b>\n                                    <span className={'mb-1 col-form-label'}>\n                                        <FiLogOut size={20}/>\n                                    </span>\n                                        {' '}\n                                        Log Out\n                                    </b>\n                                </Button>\n                            </li>\n                        }\n                    </ul>\n                </div>\n            </nav>\n        )\n    }\n};","import React from \"react\";\nimport AceEditor from \"react-ace\";\nimport {Input, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem,Button} from 'reactstrap';\nimport {MdRestore} from \"react-icons/all\";\nimport \"ace-builds/src-noconflict/mode-java\";\nimport \"ace-builds/src-noconflict/mode-c_cpp\";\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/mode-kotlin\";\nimport \"ace-builds/src-noconflict/theme-github\";\nimport \"ace-builds/src-noconflict/theme-twilight\";\nimport \"ace-builds/src-noconflict/theme-solarized_dark\";\nimport \"ace-builds/src-noconflict/theme-terminal\";\nimport \"ace-builds/src-noconflict/theme-xcode\";\n// let he = new HackerEarth('a249b98ec56b0a7e52d802c5e4fe57dffa7b3d0f',1);\nexport default class CodeEditor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '',\n            mode: 'c_cpp',\n            theme: 'twilight',\n            fontSize: 16,\n            height: '400px',\n            width: '900px',\n            language: 'C'\n        }\n    }\n    mode_map = {\n        'C' : 'c_cpp',\n        'CPP': 'c_cpp',\n        'JAVA': 'java',\n        'PYTHON': 'python',\n        'KOTLIN': 'kotlin'\n    };\n\n    onChange = (value) => {\n        this.setState({value})\n    };\n\n    render() {\n        return(\n            <div className={'container'}>\n                <div className={'ml-3 mt-2'}>\n                    <div className={'mb-5'}>\n                        <h3>Breaking the Records</h3>\n                        <span>\n                            Maria plays college basketball and wants to go pro.\n                            Each season she maintains a record of her play.\n                            She tabulates the number of times she breaks her season record for most points and least points in a game.\n                            Points scored in the first game establish her record for the season,\n                            and she begins counting from there.\n                        </span>\n                        <br/><br/>\n                        <h4>\n                            Input Format\n                        </h4>\n                        <span>\n                            The first line contains an integer <b>n</b>, the number of games.\n                            <br/>\n                            The second line contains <b>n</b> space-separated integers describing the respective values of <b>score[0],score[1],...,score[n-1]</b>.\n                        </span>\n                        <br/><br/>\n                        <h4>\n                            Constraints\n                        </h4>\n                        <span>\n                            <ul>\n                                <li>\n                                    <b>{'1 <= n <= 1000'}</b>\n                                </li>\n                                <li>\n                                    <b>{'0 <= score[i] <= 10^18'}</b>\n                                </li>\n                            </ul>\n                        </span>\n                        <br/>\n                        <h4>\n                            Output Format\n                        </h4>\n                        <span>\n                            Print two space-separated integers describing the respective numbers of times\n                            her best (highest) score increased and her worst (lowest) score decreased.\n                        </span>\n                        <br/><br/>\n                        <h4>\n                            Sample Input #1\n                        </h4>\n                        <div className={'border border-dark rounded pt-2 pl-3 pb-2'} style={{width: this.state.width,backgroundColor:'#c1c1c1'}}>\n                            9 <br/>\n                            10 5 20 20 4 5 2 25 1\n                        </div>\n                        <br/><br/>\n                        <h4>\n                            Sample Output #1\n                        </h4>\n                        <div className={'border border-dark rounded pt-2 pl-3 pb-2'} style={{width: this.state.width,backgroundColor:'#c1c1c1'}}>\n                            2 4\n                        </div>\n                    </div>\n                    <div className={'border mb-5'}> </div>\n                    <div className={'rounded-top border-bottom-0'} style={{width:this.state.width,minHeight: '30px',backgroundColor: '#c1c1c1'}}>\n                        <div className={'ml-2 col-form-label row'}>\n                            <Button\n                                color={'white'}\n                                className={'ml-auto mr-2'}\n                                onMouseDown = {(e) => {\n                                    e.preventDefault();\n                                    this.setState({\n                                        value: ''\n                                    })\n                                }}\n                                title={'Reset Code'}\n                            >\n                                <MdRestore size = '23px'/>\n                            </Button>\n                            <UncontrolledDropdown className={'mr-2'}>\n                                <DropdownToggle\n                                    caret={true}\n                                    className={'bg-white text-dark'}\n                                    onMouseDown={(e)=>e.preventDefault()}\n                                >\n                                    Theme\n                                </DropdownToggle>\n                                <DropdownMenu style={{fontStyle:'normal'}}>\n                                    <DropdownItem\n                                        active={'github' === this.state.theme}\n                                        onMouseDown={(event) => {\n                                            event.preventDefault();\n                                            this.setState({\n                                                theme: 'github'\n                                            })\n                                        }}\n                                    >\n                                        Github\n                                    </DropdownItem>\n                                    <DropdownItem\n                                        active={'twilight' === this.state.theme}\n                                        onMouseDown={(event) => {\n                                            event.preventDefault();\n                                            this.setState({\n                                                theme: 'twilight'\n                                            })\n                                        }}\n                                    >\n                                        Twilight\n                                    </DropdownItem>\n                                    <DropdownItem\n                                        active={'terminal' === this.state.theme}\n                                        onMouseDown={(event) => {\n                                            event.preventDefault();\n                                            this.setState({\n                                                theme: 'terminal'\n                                            })\n                                        }}\n                                    >\n                                        Terminal\n                                    </DropdownItem>\n                                    <DropdownItem\n                                        active={'xcode' === this.state.theme}\n                                        onMouseDown={(event) => {\n                                            event.preventDefault();\n                                            this.setState({\n                                                theme: 'xcode'\n                                            })\n                                        }}\n                                    >\n                                        Xcode\n                                    </DropdownItem>\n                                </DropdownMenu>\n                            </UncontrolledDropdown>\n                            <Input\n                                type={'select'}\n                                name={'select'}\n                                id={'language'}\n                                className={'border-dark mr-4'}\n                                style={{width: '20%'}}\n                                title={'Select Language'}\n                                onChange = {(event) => {\n                                    const val = event.target.value;\n                                    this.setState({\n                                        language: val,\n                                        mode: this.mode_map[val]\n                                    })\n                                }}\n                            >\n                                <option value={'C'}>C</option>\n                                <option value={'CPP'}>C++</option>\n                                <option value={'JAVA'}>Java</option>\n                                <option value={'PYTHON'}>Python 2.7</option>\n                                <option value={'PYTHON'}>Python 3.0</option>\n                                <option value={'KOTLIN'}>Kotlin</option>\n                            </Input>\n                        </div>\n                    </div>\n                    <AceEditor\n                        mode={this.state.mode}\n                        theme={this.state.theme}\n                        onChange={this.onChange}\n                        name=\"code_editor\"\n                        value={this.state.value}\n                        editorProps={{ $blockScrolling: true }}\n                        height={this.state.height}\n                        width={this.state.width}\n                        showPrintMargin={false}\n                        fontSize={this.state.fontSize}\n                        focus={true}\n                    />\n                </div>\n                <Button\n                    className={'my-3 float-right'}\n                    style={{marginRight: '17.5%'}}\n                    color={'dark'}\n                    onMouseDown={(e) => {\n                        // alert(\"Thai gyu bc!\");\n                        e.preventDefault();\n                    }}\n                >\n                    Submit\n                </Button>\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport { Line, Pie } from \"react-chartjs-2\";\nimport {Input} from 'reactstrap';\nexport default class PlacementReport extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            options: {\n                responsive: true,\n                legend: {\n                    labels: {\n                        fontStyle: 'none',\n                        fontColor: 'black',\n                        maintainAspectRatio: true\n                    }\n                }\n            },\n            chartType: 'branch',\n        }\n    }\n\n    componentDidMount() {\n        console.log(this.branchChartData);\n    }\n\n    renderPieChart = (data,label) => {\n        return(\n            <Pie\n                type={'pie'}\n                data={this.renderChart(data, label)}\n                options={this.props.options}\n                width={200}\n                height={50}\n            />\n        )\n    };\n\n    renderLineChart = (data,label) =>\n        <Line\n            type={'line'}\n            data={this.renderChart(data, label)}\n            options={this.props.options}\n            width={200}\n            height={50}\n        />\n    ;\n\n    renderChart = (data,labels) => {\n        return {\n            labels: labels,\n            datasets: [{\n                label: '# of Students Placed',\n                data: data,\n                backgroundColor: [\n                    'rgba(54, 162, 235, 1)',\n                    'rgba(255, 99, 132, 1)',\n                    'rgba(255, 206, 86, 1)',\n                    'rgba(75, 192, 192, 1)',\n                    'rgba(153, 102, 255, 1)',\n                    'rgba(180, 159, 64, 1)',\n                    'rgba(230, 102, 255, 1)',\n                    'rgba(20, 102, 255, 1)',\n                ],\n                borderColor: [\n                    'rgba(255, 99, 132, 1)',\n                    'rgba(54, 162, 235, 1)',\n                    'rgba(255, 206, 86, 1)',\n                    'rgba(75, 192, 192, 1)',\n                    'rgba(153, 102, 255, 1)',\n                    'rgba(255, 159, 64, 1)',\n                    'rgba(153, 102, 255, 1)',\n                    'rgba(153, 102, 255, 1)',\n                ],\n                borderWidth: 1\n            }]\n        };\n    };\n\n    render() {\n        const { branchChartData,classChartData,yearChartData,branchLabels,classLabels,yearLabels } = this.props;\n        return (\n            <div\n                className=\"container\"\n            >\n                <h3 className={'text-center'}>\n                    College Placement Cell\n                </h3>\n                <br/>\n                <p>\n                    Nirma University provides full placement support to its students in the fields of Technology,\n                    Management, Law, Pharmacy and Life Sciences.\n                </p>\n                <p>\n                    Over the last decades, the University has emerged as one of the most favoured destinations for hiring fresh talent from the campuses.\n                    Its endeavours to provide industry compliant talent and emphasises on quality, discipline, self-learning, and ethics.\n                </p>\n                <p>\n                    The placement model at Nirma is a four-stage process,\n                    involving the Pre Placement activities, Career Guidance, Executing Placement and Post Placement reviews.\n                </p>\n                <p>\n                    In addition to providing placement support to the students,\n                    the University also facilitates training of students in the organisations during summer and winter vacations,\n                    project work for the students in the final year, continuous institute-industry interactions,\n                    alumni activities, participation in exhibitions, fairs, seminars and conferences,\n                    counselling of the students on job opportunities, facilitating industry visits and inviting distinguished speakers.\n                </p>\n                <div>\n                    <h3 className={'text-center'}>\n                        Placement Statistics\n                    </h3>\n                    <h6>\n                        Yearly Placement Graph\n                    </h6>\n                    {this.renderLineChart(yearChartData,yearLabels)}\n                    <h6>\n                        Placement Pie-chart\n                    </h6>\n                    <Input\n                        name={'select'}\n                        type={'select'}\n                        id={'statistics-type'}\n                        onChange = {(e) => {\n                            this.setState({\n                                chartType: e.target.value\n                            });\n                            console.log(this.branchChartData);\n                            e.preventDefault();\n                        }}\n                    >\n                        <option value={'branch'}>Branch Wise</option>\n                        <option value={'class'}>Class Wise</option>\n                    </Input>\n                    {this.state.chartType === 'branch' ? this.renderPieChart(branchChartData,branchLabels):<div></div>}\n                    {this.state.chartType === 'class' ? this.renderPieChart(classChartData,classLabels):<div></div>}\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport AnswerProfileCard from \"./AnswerProfleCard\";\nimport {Button, Input} from \"reactstrap\";\nimport {FaRegStar,FaTimesCircle,FaCheckCircle,FaThumbsUp,FaThumbsDown,FaRegThumbsDown,FaRegThumbsUp} from \"react-icons/all\";\n\nexport default class ExperiencePage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            experience: {},\n            id:this.props.match.params.id,\n            loading: true,\n            show: true\n        };\n        this.getExperiences();\n    }\n\n    getExperiences = () => {\n        const uri='/getExperience';\n        fetch(uri,{\n            method:'POST',\n            headers:{\n                'Accept':'application/json',\n                'Content-Type':'application/json'\n            },\n            body: JSON.stringify({\n                \"id\":this.state.id\n            })\n        }).then( response => {\n            // console.log(response);\n            return response.json()\n        }).then((response) => {\n            const experience = response[0];\n            this.setState({experience, loading: false, show: experience.accepted !== false});\n            console.log(experience);\n            if(response.status === 500) {\n                console.log(\"Error while connecting to database please check your internet connection\");\n            }\n        }).catch( error => console.log(error.message));\n    };\n\n    componentDidMount() {\n        if(this.props.accepted !== undefined){\n            let exp = this.state.experience;\n            exp.accepted = this.props.accepted;\n            this.setState({\n                experience: exp\n            })\n        }\n    }\n\n    renderRound = (round) => {\n        return(\n            <div>\n                <h5>\n                    Round {round.id} : ({round.title})\n                </h5>\n                <p style={{fontSize:18}}>\n                    {round.details}\n                </p>\n            </div>\n        )\n    };\n\n    render() {\n        const {experience} = this.state;\n        if(!this.state.show){\n            return(\n              <h3>This experience has been rejected by the admin.</h3>\n            );\n        }\n        return (\n            this.state.loading ? <img src={'/loading.gif'} alt={'Loading..'} style={{position:'absolute',top:'50%',left:'50%'}}/>:\n            <div className={'container bg-white'}>\n                <div className={'ml-4 row'}>\n                    <h3 className={'text-center mb-3 mr-auto mt-3'}>\n                        {`${experience.company} Interview Experience | ${experience.jobprofile}`}\n                    </h3>\n                    <Button\n                        className={'text-dark mb-2'}\n                        color={'link'}\n                    >\n                        <FaRegStar size={20}/>\n                    </Button>\n                </div>\n                {\n                    experience.accepted ?\n                        <h6 className={'ml-4'}>\n                            <span className={'text-success'}> <FaThumbsUp/></span> {experience.likes} people found this helpful\n                        </h6>\n                        :\n                        <div/>\n                }\n                <div className={'ml-2 mb-3 border-top'}>\n                    <AnswerProfileCard\n                        src={'/pikachu.jpg'}\n                        name={'Rutvik Sutaria'}\n                        description={'8th semester CSE student'}\n                    />\n                </div>\n                <div className={'border-top'}>\n                    <div className={'my-3 ml-4'}>\n\n                        <h5>{`Job Type: ${experience.jobtype}`}</h5>\n                        {experience.stipend !== '' ?  <h5>{`Stipend: \\u20b9 ${experience.stipend} per month`}</h5>:``}\n                        {experience.ctc !== '' ?  <h5>{`CTC: \\u20b9 ${experience.ctc}`}</h5>:``}\n                        <h5>\n                            Received Offer: {experience.receivedOffer ? <span className={'col-form-label text-success'}><FaCheckCircle/></span> : <span className={'col-form-label text-danger'}><FaTimesCircle/></span>}\n                        </h5>\n                    </div>\n                    <div className={'ml-4 border-top'}>\n                        <div className={'mt-3'}>\n                            {experience.rounds !== undefined ? experience.rounds.map((round) => {\n                                return this.renderRound(round);\n                            }): <div />}\n                        </div>\n                    </div>\n                    {\n                        experience.accepted ?\n                            <h6 className={'border-top pt-2 pl-4'}>\n                                Was this experience helpful?{' '}\n                                <Button size={'sm'} color={'white'} className={'mb-1 text-success'}\n                                        onMouseDown={(e) => {\n                                            const exp = experience;\n                                            if(exp.helpful === 'yes') {\n                                                exp.helpful = 'none';\n                                            }\n                                            else{\n                                                exp.helpful = 'yes'\n                                            }\n                                            this.setState({\n                                                experience: exp\n                                            });\n                                            e.preventDefault();\n                                        }}\n                                >\n                                    {experience.helpful === 'yes' ? <FaThumbsUp/> : <FaRegThumbsUp/>}\n                                </Button>\n                                <Button size={'sm'} color={'white'} className={'mb-1 text-danger'}\n                                        onMouseDown={(e) => {\n                                            const exp = experience;\n                                            if(exp.helpful === 'no') {\n                                                exp.helpful = 'none';\n                                            }\n                                            else{\n                                                exp.helpful = 'no'\n                                            }\n                                            this.setState({\n                                                experience: exp\n                                            });\n                                            e.preventDefault();\n                                        }}\n                                >\n                                    {experience.helpful === 'no' ? <FaThumbsDown/> : <FaRegThumbsDown/>}\n                                </Button>\n                            </h6>\n                            :\n                            <div className={'border-top pt-2 pl-4'}>\n                                <Button\n                                    className={'mr-2 mb-2'}\n                                    color={'success'}\n                                    size={'sm'}\n                                    type={'Submit'}\n                                    onClick={(e) => {\n                                        fetch('/updateExperience', {\n                                            method: 'POST',\n                                            headers: {\n                                                'Accept': 'application/json',\n                                                'Content-Type': 'application/json'\n                                            },\n                                            body: JSON.stringify({\n                                                id:this.props.match.params.id,\n                                                accepted: true\n                                            })\n                                        })\n                                            .then(resp => resp.json())\n                                            .then(resp => console.log(resp))\n                                            .then(err => console.log(err));\n                                            window.location.reload();\n                                    }}\n                                >\n                                    Accept\n                                </Button>\n                                <Button\n                                    className={'mb-2'}\n                                    color={'danger'}\n                                    size={'sm'}\n                                    onMouseDown={(e) => {\n                                        e.preventDefault();\n                                        const exp = experience;\n                                        exp.accepted = false;\n                                        this.setState({\n                                            experience: exp\n                                        })\n                                    }\n                                    }\n                                >\n                                    Reject\n                                </Button>\n                            </div>\n                    }\n                    {\n                        experience.accepted === false ? <div>\n                            <div className={'pt-2 pl-4'}>\n                                <Input\n                                    type={'textarea'}\n                                    name={'text'}\n                                    rows={5}\n                                    placeholder={'Reason for rejection...'}\n                                />\n                            </div>\n                            <div className={'pt-2 pl-4 float-right'}>\n                                <Button color={'dark'} size={'sm'}\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        fetch('/updateExperience', {\n                                            method: 'POST',\n                                            headers: {\n                                                'Accept': 'application/json',\n                                                'Content-Type': 'application/json'\n                                            },\n                                            body: JSON.stringify({\n                                                id:this.props.match.params.id,\n                                                accepted: experience.accepted\n                                            })\n                                        })\n                                            .then(resp => resp.json())\n                                            .then(resp => console.log(resp))\n                                            .then(err => console.log(err));\n                                        window.location.reload();\n                                    }}\n                                >\n                                    Submit\n                                </Button>\n                            </div>\n                        </div>\n                            :\n                            <div/>\n                    }\n                </div>\n            </div>\n        );\n    }\n\n};","import React from \"react\";\nimport {Col, Row,Button} from \"reactstrap\";\nimport {Link} from \"react-router-dom\";\nimport {FaStar,FaRegStar} from \"react-icons/all\";\nimport AnswerProfileCard from \"./AnswerProfleCard\";\n\nexport default class QueryCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            saved: false\n        }\n    }\n\n    onSaveClick = (e) => {\n        e.preventDefault();\n        this.setState({\n            saved: !this.state.saved\n        });\n    };\n\n    render() {\n        const {id,question} = this.props;\n        return (\n            <div style={{backgroundColor:'#e3e4e6'}} className={'border border-dark rounded mr-5 mt-2'}>\n                <Row>\n                    <Col md={11}>\n                        <Link to={'/queries/'+id} className={'text-dark btn-link'}>\n                            <div className={'ml-3'}>\n                                <h5 className={'m-3'}>\n                                    {question}\n                                </h5>\n                            </div>\n                        </Link>\n                    </Col>\n                    <Col md={1}>\n                        {\n                            !this.state.saved ? <Button color={'white mt-2'} title={'Save'} onMouseDown={this.onSaveClick}><FaRegStar/></Button>\n                                : <Button color={'white mt-2'} title={'Unsave'} onMouseDown={this.onSaveClick}><FaStar/></Button>\n                        }\n                    </Col>\n                </Row>\n                <div className={'ml-3 mb-3'}>\n                    <AnswerProfileCard\n                        src={'/pikachu.jpg'}\n                        name={'Rutvik Sutaria'}\n                        description={'8th semester CSE student'}\n                    />\n                    <div className={'ml-3 mt-1'}>\n                        <div style={{height:75,overflow:'hidden'}}>\n                            I attended Amazon interview recently. You need to be good at basics of data structures,\n                            algorithms and object oriented design.\n                            One cannot read object oriented concepts and become a master in it.\n                            Try implementing it in whatever the project you're doing.\n                            That way it's easy to gain the intuition about the object oriented programming and design.\n                            I prepared for data structure questions from cracking the coding interview.\n                            You need to understand the basics of the important data structures and\n                            how they work and try implementing the basic version of those.\n                            This will help in understanding its applications...\n                        </div>\n                        {'...'}\n                        <Link to={'/queries/'+id+'/answer/'}>\n                            (more)\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport QueryCard from \"./QueryCard\";\n\nimport {Modal,ModalHeader,ModalFooter,ModalBody,Button,Input} from 'reactstrap';\nexport default class QueryPageComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isModalOpen: false,\n            queries: []\n        };\n        this.getQueries();\n    }\n\n    toggleModal = () => {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        })\n    };\n\n    getQueries = () => {\n        fetch('/queries')\n            .then(res => res.json())\n            .then(res => {\n                let queries = res;\n                this.setState({queries});\n                console.log(queries);\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    };\n\n    render() {\n        const {queries} = this.state;\n        return (\n            <div>\n                <div className={'border-bottom'}>\n                    <h5>\n                        <a\n                            href={'#'}\n                            onMouseDown={event => {\n                                event.preventDefault();\n                                this.setState({\n                                    isModalOpen: true\n                                });\n                            }}\n                        >\n                            Ask your Question\n                        </a>\n                    </h5>\n                </div>\n                <Modal\n                    isOpen={this.state.isModalOpen}\n                    toggle={this.toggleModal}\n                >\n                    <ModalHeader toggle={this.toggleModal}>\n                        Ask your question\n                    </ModalHeader>\n                    <ModalBody>\n                        <Input\n                            type={'textarea'}\n                            type={'textarea'}\n                            name={'text'}\n                            rows={5}\n                            placeholder={'Start your question with \\'How\\', \\'What\\', \\'Why\\'... '}\n                        />\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button\n                            color={'dark'}\n                        >\n                            Submit\n                        </Button>\n                    </ModalFooter>\n                </Modal>\n                {/*<QueryCard />*/}\n                {/*<QueryCard />*/}\n                {/*<QueryCard />*/}\n                {/*<QueryCard />*/}\n                {\n                    queries.length !== 0 ? queries.map((query,index) => {\n                        return <QueryCard key={index} id={query._id} question={query.question} />\n                    }):\n                        <img src={'loading.gif'} alt={'Loading...'} style={{position:'absolute',top:'50%',left:'50%'}} />\n                }\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport {Link} from 'react-router-dom';\nimport {Button} from 'reactstrap';\nexport default function NotificationCard() {\n    return(\n        <div style={{backgroundColor:'#e3e4e6',minHeight:100,width:'98%'}} className={'border-dark rounded p-3 m-3'}>\n            <h4>\n                Regarding your submission:{' '}\n                <Link to={'/experiences/123456'} className={'text-info'}>\n                    Amazon Experience for Software Development Engineer\n                </Link>\n            </h4>\n            <div className={'mt-2'}>\n                <b>\n                    Message from {' '}\n                    <Link to={'/usr/moderator1'} className={'text-secondary'}>\n                        moderator1\n                    </Link>\n                </b>\n                 <br/>\n                 sent 30 minutes ago\n                <h6 className={'mt-4'}>\n                    <p>\n                        Your submission{' '}\n                        <Link to={'/experiences/123456'} className={'text-info'}>\n                            Amazon Experience for Software Development Engineer\n                        </Link>\n                        {' '}has been rejected for the use of obscene language in your experiences. Kindly update your submission.\n                        It should also be noted that frequent use of obscene language in submissions can\n                        lead to temporary or permanent ban from the website.\n                        I suggest you to go through the submission guidelines to get an idea about the way the submissions should be posted.\n                    </p>\n                </h6>\n                <div>\n                    <Button color={'link'} className={'text-dark'} size={'sm'}>\n                        <h6>Delete</h6>\n                    </Button>\n                    <Button color={'link'} className={'text-dark'} size={'sm'}>\n                        <h6>Reply</h6>\n                    </Button>\n                </div>\n            </div>\n        </div>\n    );\n}","import React from \"react\";\nimport NotificationCard from \"./NotificationCard\";\nexport default class NotificationComponent extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return(\n            <div>\n                <NotificationCard />\n                <NotificationCard />\n                <NotificationCard />\n                <NotificationCard />\n                <NotificationCard />\n            </div>\n        );\n    }\n\n}","import React from \"react\";\n\nexport default class SearchPage extends React.Component {\n    render() {\n        console.log(this.props);\n        const {term} = this.props.match.params;\n        return <div>{term}</div>;\n    }\n}","import React from 'react';\nimport ExperienceCard from \"./ExperienceCard\";\nimport QueryCard from \"./QueryCard\";\nexport default class SavedPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            experience: {\n                companyName: 'Amazon',\n                author: 'Rutvik Sutaria',\n                jobType: '6 month Internship + FTE',\n                jobProfile: 'Software Development Engineer',\n                n_rounds: 3,\n                ctc: '28 Lakhs',\n                stipend: '60k',\n                receivedOffer: true,\n                date: '04/02/2020',\n                saved: false,\n                helpful: 56,\n                accepted: 'yes'\n            }\n        }\n    }\n\n    onSaveClick = (e) => {\n        e.preventDefault();\n        this.setState({\n            saved: !this.state.saved\n        });\n    };\n\n    render() {\n        return(\n            <div>\n                <ExperienceCard experience={this.state.experience} link={'/experience2'} accepted={false} onSaveClick={this.onSaveClick} />\n                <QueryCard />\n            </div>\n        );\n    }\n\n}","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {Col, Row, Button} from \"reactstrap\";\nimport {FaStar,FaRegStar} from \"react-icons/all\";\nexport default function PracticeCard(props) {\n    return(\n        <div style={{backgroundColor:'#e3e4e6',width:'98%'}} className={'p-3 border rounded border-dark m-2'}>\n            <Row>\n                <Col md={6}>\n                        <h4>\n                            <Link to={'/practice/problem1'} className={'text-dark'}>\n                                {props.title}\n                            </Link>\n                        </h4>\n\n                    <b>\n                        <span className={'text-warning'}>{props.difficulty}</span>, Success Rate: {props.successRate}%\n                    </b>\n                </Col>\n                <Col md={6} className={'col-form-label mt-1'}>\n                    <div className={'float-right mr-3'}>\n                        <Button\n                            color={'white'}\n                            onMouseDown={props.onSaveClick}\n                        >\n                            {\n                                !props.saved ? <FaRegStar/> : <FaStar/>\n                            }\n\n                        </Button>\n                        <Link to={'/practice/problem1'} className={'btn border-dark rounded'} style={{textDecoration:'none'}}>\n                            Solve\n                        </Link>\n                    </div>\n                </Col>\n            </Row>\n        </div>\n    );\n}","import React from 'react';\nimport PracticeCard from \"./PracticeCard\";\nexport default class PracticePage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            problems: [\n                {\n                    id:'1',\n                    title:'Breaking the record',\n                    difficulty:'medium',\n                    successRate:100,\n                    saved:false\n                },\n                {\n                    id:'2',\n                    title:'Breaking the record',\n                    difficulty:'medium',\n                    successRate:100,\n                    saved:true\n                }\n            ]\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.problems.map(problem => {\n                    const onSaveClick = (e) => {\n                        const problems = this.state.problems.map((p) => {\n                            let p1 = p;\n                            p1.saved = p1.id === problem.id ? !p1.saved : p1.saved;\n                            return p1;\n                        });\n                        this.setState({ problems });\n                        e.preventDefault();\n                    };\n                    return <PracticeCard\n                        title={problem.title}\n                        difficulty={problem.difficulty}\n                        successRate={problem.successRate}\n                        saved={problem.saved}\n                        onSaveClick={onSaveClick}\n                    />\n                })}\n            </div>\n        );\n    }\n\n}","import React from \"react\";\nimport {Form,FormGroup,Input} from 'reactstrap';\nexport default class LoginPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    render() {\n        return (\n            <div className={'text-center m-3'}>\n                <h5 className={'mb-3'}>\n                    Login to Interview Portal\n                </h5>\n                <Form>\n                    <FormGroup>\n                        <div align={'center'}>\n                            <Input\n                                type={'text'}\n                                name={'text'}\n                                id={'email'}\n                                style={{width:'30%'}}\n                            />\n                        </div>\n                    </FormGroup>\n                </Form>\n            </div>\n        );\n    }\n\n}","import React from 'react';\nimport ExperienceCard from \"./ExperienceCard\";\nexport default class ReviewPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            experiences: []\n        }\n        this.getReviewExperiences();\n    }\n\n    getReviewExperiences = () => {\n        fetch('/experiences')\n            .then(res => res.json())\n            .then(res => {\n                let experiences = res;\n                this.setState({experiences});\n                console.log(experiences);\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    onSaveClick = (e) => {\n        e.preventDefault();\n        this.setState({\n            saved: !this.state.saved\n        });\n    };\n\n    render() {\n        return (\n            <div>\n                {\n                    this.state.experiences.map(experience => {\n                            return(experience.accepted === null ? <ExperienceCard experience={experience} onSaveClick={this.onSaveClick}/>\n                                    : <div />\n                            )\n                        }\n                    )\n                }\n            </div>\n        );\n    }\n\n}","import React from 'react';\nimport {FaUserEdit} from \"react-icons/all\";\nimport {Button, Modal, ModalBody, ModalFooter, ModalHeader,Form,Label,Input} from 'reactstrap';\nimport {Link} from 'react-router-dom';\nexport default class UserPage extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            experiences: [\n                'Amazon Interview Experience For SDE-I By Rutvik Sutaria',\n                'Amazon Interview Experience For SDE-I By Rutvik Sutaria',\n                'Amazon Interview Experience For SDE-I By Rutvik Sutaria'\n            ],\n            queries: [\n                'What are some tips to crack the Amazon interview?',\n                'What are some tips to crack the Amazon interview?',\n                'What are some tips to crack the Amazon interview?'\n            ],\n            problems: [\n                'Printing the side view of the binary tree in O(1)',\n                'Printing the side view of the binary tree in O(1)',\n                'Printing the side view of the binary tree in O(1)'\n            ],\n            open: false,\n            username: 'Rutvik Sutaria',\n            description: '8th semester CSE student',\n            inputUsername: '',\n            inputDescription: ''\n        }\n    }\n\n\n    renderItems = (item,index) => {\n        const ret = index%2 === 0 ?\n            <div className={'bg-light col-form-label'} style={{height:50}}>\n                <a href={'#'} className={'text-dark'}><h6>{item}</h6></a>\n            </div>\n            :\n                <div className={'col-form-label'} style={{height:50}}>\n                    <a href={'#'} className={'text-dark'}><h6>{item}</h6></a>\n                </div>;\n        return(ret);\n    };\n\n    toggleModal = () => {\n        this.setState({\n            open: !this.state.open\n        })\n    };\n\n    render() {\n        return (\n            <div>\n                <div className={'row'}>\n                    <div className={'col-auto'}>\n                        <img src={'/pikachu.jpg'} alt={'Profile Picture'} className={'border border-dark mr-2'} style={{width:128,height:128}}/>\n                    </div>\n                    <div className={'col-10'}>\n                        <h4>\n                            {this.state.username}\n                            <Button color={'white'} className={'float-right'} title={'Edit your profile'}\n                                onMouseDown={(e) => {\n                                    e.preventDefault();\n                                    this.toggleModal();\n                                }}\n                            >\n                                <FaUserEdit size={20}/>\n                            </Button>\n                        </h4>\n                        <h6>\n                            {this.state.description}\n                        </h6>\n                    </div>\n                </div>\n                <div className={'mt-3'}>\n                    <h3>\n                        Interview Experiences\n                    </h3>\n                    {\n                        this.state.experiences.map((item,index) => {\n                            return this.renderItems(item,index);\n                        })\n\n                    }\n                    <Link to={'/usr/user1/experiences'}>See All</Link>\n                </div>\n\n                <div className={'mt-3'}>\n                    <h3>\n                        Queries Asked\n                    </h3>\n                    {\n                        this.state.queries.map((item,index) => {\n                            return this.renderItems(item,index);\n                        })\n                    }\n                    <Link to={'/usr/user1/queries'}>See All</Link>\n                </div>\n\n                <div className={'mt-3'}>\n                    <h3>\n                        Problems Solved\n                    </h3>\n                    {\n                        this.state.problems.map((item,index) => {\n                            return this.renderItems(item,index);\n                        })\n                    }\n                </div>\n                <Link to={'/usr/user1/problems-solved'}>See All</Link>\n                <Modal\n                    isOpen={this.state.open}\n                    toggle={this.toggleModal}\n                >\n                    <ModalHeader toggle={this.toggleModal}>Edit Profile</ModalHeader>\n                    <ModalBody>\n                        <Form>\n                            <div className={'row'}>\n                                <div className={'col-md-2'}>\n                                    <Label className={'col-form-label'} for={'name'}>\n                                        <h6>Name</h6>\n                                    </Label>\n                                </div>\n                                <div className={'col ml-1'}>\n                                    <Input id={'name'} type={'text'} value={this.state.inputUsername} onChange={(e) => {\n                                        this.setState({\n                                            inputUsername: e.target.value\n                                        });\n                                    }}/>\n                                </div>\n                            </div>\n                            <div className={'row'}>\n                                <div className={'col-md-2'}>\n                                    <Label className={'col-form-label'} for={'description'}>\n                                        <h6>Description</h6>\n                                    </Label>\n                                </div>\n                                <div className={'col ml-1'}>\n                                    <Input id={'description'} value={this.state.inputDescription} type={'text'} onChange={(e) => {\n                                        this.setState({\n                                            inputDescription: e.target.value\n                                        });\n                                    }}/>\n                                </div>\n                            </div>\n                            <div className={'row'}>\n                                <div className={'col-md-2'}>\n                                    <Label className={'col-form-label'} for={'profile-pic'}>\n                                        <h6>Profile Picture</h6>\n                                    </Label>\n                                </div>\n                                <div className={'col ml-1'}>\n                                    <Input id={'profile-pic'} type={'file'}/>\n                                </div>\n                            </div>\n                        </Form>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color={'success'} onMouseDown={(e) => {\n                            const usr = this.state.inputUsername,des = this.state.inputDescription;\n                            this.setState({\n                                username: usr,\n                                description:des,\n                                inputUsername:'',\n                                inputDescription:''\n                            });\n                            this.toggleModal();\n                            e.preventDefault();\n                        }}>\n                            Submit\n                        </Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport {Switch,Route} from 'react-router';\nimport ExperienceForm from \"./interview-form\";\nimport ExperienceList from \"./ExperienceComponent\";\nimport BlogList from \"./BlogsList\";\nimport CodeEditor from \"./CodeEditor\";\nimport PlacementReport from \"./PlacementReport\";\nimport ExperiencePage from \"./ExperiencePage\";\nimport QueryPageComponent from \"./QueryPageComponent\";\nimport NotificationComponent from \"./NotificationComponent\";\nimport SearchPage from \"./SearchPage\";\nimport SavedPage from \"./SavedPage\";\nimport PracticePage from \"./PracticePage\";\nimport LoginPage from \"./LoginPage\";\nimport ReviewPage from \"./ReviewPage\";\nimport UserPage from \"./UserPage\";\nexport default function Main() {\n    return(\n    <Switch>\n        <Route exact path={'/'} component={ExperienceForm} />\n        <Route exact path={'/practice/problem1'} component={CodeEditor} />\n        <Route exact path={'/practice'} component={PracticePage} />\n        <Route exact path={'/queries'} component={QueryPageComponent}/>\n        <Route exact path={'/experiences'} component={ExperienceList} />\n        <Route exact path={'/experiences/:id'} component={ExperiencePage} />\n        <Route exact path={'/queries/:id'} component={BlogList} />\n        <Route exact path={'/notifications'} component={NotificationComponent} />\n        <Route path={'/search::term'} component={SearchPage} />\n        <Route path={'/saved'} component={SavedPage} />\n        <Route path={'/login'} component={LoginPage} />\n        <Route path={'/review'} component={ReviewPage} />\n        <Route exact path={'/interview-experience-form'} component={ExperienceForm} />\n        <Route exact path={'/usr/user1'} component={UserPage} />\n        <Route exact path={'/placement'}\n               component={\n                   () => <PlacementReport\n                       branchChartData={[170,120,30, 60, 40, 50, 10, 20]}\n                       classChartData={[20,50,100,200]}\n                       yearChartData={[120,160,180,200]}\n                       branchLabels = {['Computer Engineering', 'Information Technology', 'Electronics & Communication', 'Electrical Engineering', 'Mechanical Engineering', 'Chemical Engineering', 'Civil Engineering', 'Integration & Circuits']}\n                       classLabels = {['Class A', 'Class B', 'Class C', 'Class D']}\n                       yearLabels = {['2016','2017','2018','2019']}\n                       options= {{\n                           responsive: true,\n                           legend: {\n                               labels: {\n                                   display: false,\n                                   fontColor: 'black',\n                                   fontSize: 13,\n                               }\n                           }\n                       }}\n                   />\n               }\n        />\n    </Switch>\n    );\n}\n\n\n\n","import React from 'react';\nimport './App.css';\nimport ExperienceForm from \"./Components/interview-form\";\nimport NavbarComponent from \"./Components/NavbarComponent\";\nimport ExperienceList from \"./Components/ExperienceComponent\";\nimport BlogList from \"./Components/BlogsList\";\nimport Sidebar from \"./Components/SidebarComponent\";\nimport CodeEditor from \"./Components/CodeEditor\";\nimport Main from './Components/Main';\nimport {Collapse} from 'reactstrap';\nexport default class App extends React.Component{\n\n    constructor(props) {\n        super(props);\n        let user = localStorage.getItem('user');\n        if(typeof  user !== \"string\") user = null;\n        this.state = {\n            currentPage: <CodeEditor />,\n            user: user,\n            users: {\n                'user1' : 'password',\n                'user2' : 'password1'\n            },\n            isSidebarOpen: true,\n            navbarHeight: 0\n        }\n    }\n\n    onClickExperience = (event) => {\n        this.setState({\n            currentPage: <ExperienceList />\n        });\n        event.preventDefault();\n    };\n\n    onClickBlogs = (event) => {\n        this.setState({\n            currentPage: <BlogList/>\n        });\n        event.preventDefault();\n    };\n\n    onClickLogo = (event) => {\n        this.setState({\n            currentPage: <ExperienceForm />\n        });\n        event.preventDefault();\n    };\n\n    onClickLogin = (event,email,username,password) => {\n        // const users = this.state.users;\n        // if(users[username] !== undefined) {\n        //     if(password === users[username]) {\n        //         this.setState({\n        //             user: username\n        //         });\n        //         localStorage.setItem('user',username)\n        //     }\n        // }\n        fetch('/loginUser',{\n            method:'POST',\n            headers:{\n                'Accept':'application/json',\n                'Content-Type':'application/json'\n            },\n            body: JSON.stringify({\n                \"username\":username,\n                \"email\":email,\n                \"password\":password\n            })\n        }).then( response => {\n            return response.json()\n        }).then((response) => {\n            console.log(response);\n            if(response.length === 1){\n                this.setState({\n                    user:username\n                });\n                console.log(response);\n                localStorage.setItem(\"user\",username);\n            }\n            return response.status;\n        }).catch( error => console.log(error.message));\n    };\n\n    onClickLogOut = (event) => {\n        this.setState({\n            user: null\n        });\n        localStorage.removeItem('user');\n        event.preventDefault();\n    };\n\n\n    onCLickPractice = (event) => {\n        this.setState({\n            currentPage: <CodeEditor />\n        });\n        event.preventDefault();\n    };\n\n    onSidebarToggleClick = (e) => {\n        this.setState({\n              isSidebarOpen: !this.state.isSidebarOpen\n        });\n        e.preventDefault();\n    };\n\n    updateNavbarHeight = () => {\n        const height = document.getElementById('top-navbar').offsetHeight;\n        this.setState({\n            navbarHeight: height\n        })\n    };\n\n    componentDidMount() {\n        this.updateNavbarHeight();\n        window.addEventListener('resize',this.updateNavbarHeight);\n    }\n\n    render() {\n        return(\n            // <div className={'bg-light'}>\n            //     <NavbarComponent\n            //         onClickExperience={this.onClickExperience}\n            //         onClickBlogs = {this.onClickBlogs}\n            //         onClickLogo = {this.onClickLogo}\n            //\n            //         onCLickPractice = {this.onCLickPractice}\n            //         user = {this.state.user}\n            //     />\n            //     <div style={{marginTop:57,minWidth:100}}>\n            //             <Sidebar/>\n            //         <div className={'container'} style={{float:'left',marginLeft:200}}>\n            //             <Main/>\n            //         </div>\n            //     </div>\n            // </div>\n            <div>\n                <NavbarComponent onSidebarToggleClick = {this.onSidebarToggleClick}/>\n                {\n                    this.state.isSidebarOpen\n                    ? <div style={{marginTop:this.state.navbarHeight}}>\n                            <div>\n                                <Collapse isOpen={this.state.isSidebarOpen} navbar>\n                                    <Sidebar user={this.state.user} onClickLogin = {this.onClickLogin} onClickLogOut = {this.onClickLogOut}/>\n                                </Collapse>\n                            </div>\n                            <div style={ {marginLeft:200}} className={'pt-2 pl-3'}>\n                                <Main />\n                            </div>\n                        </div>\n                    :\n                        <div className={'container pt-2'} style={{marginTop:this.state.navbarHeight}}>\n                            <Main />\n                        </div>\n                }\n            </div>\n\n        );\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}